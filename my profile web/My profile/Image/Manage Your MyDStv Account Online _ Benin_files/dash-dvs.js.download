riot.tag2('tag-dash-dvs','<div if="{state == \'preloader\'}" class="" id="dvsJourneyTag"> <div id="dvs-onboarding-loader" class="dvs-loading-screen dvs-common-loading-screen content-wrapper dvs-details-wrapper clearfix" style="text-align: center;"> <div class="loading-loader loading" style="z-index: 9999;"> <div class="col-sm-12 text-center white"> <img src="/media/11965/loading-video.gif"> <div class="title-message">{loadingMsgs.heading}</div> <div class="loading-message">{loadingMsgs.message}</div> </div> </div> </div></div><div if="{state == \'loading\'}" id="dvs-loader" class="dvs-loading-screen content-wrapper dvs-details-wrapper clearfix" style="text-align: center;"> <div style="top: 50%;"> <div class="loading-loader loading" style="z-index: 9999;"> <div class="col-sm-12 text-center white"> <i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i> <div class="loading-message">{loaderMessage}</div> </div> </div> </div></div><div class="container" id="dvsJourneyTag" if="{app.isDVSJourney}"> <div if="{state == \'DvsOnboardingLoader\'}" id="dvs-onboarding-loader" class="dvs-loading-screen content-wrapper dvs-details-wrapper clearfix" style="text-align: center;"> <div class="loading-loader loading" style="z-index: 9999;"> <div class="col-sm-12 text-center white"> <div class="dvs-progress-body"> <div class="moving_loader_gif"><i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i></div> <div class="dvs-progress-bar"> <div class="dvs-bar"></div> </div> <div class="dvs-progress-text">1%</div> </div> <div class="loading-message">{langTranslateApp.dvsOnBoardingMsg10}</div> <div class="container"> <div class="campaignLoader"> <div each="{item in loaders}"> <img src="{item.loaderImage}"> <div class="loading-message">{item.loaderDesc}</div> </div> </div> </div> </div> </div> </div> <div if="{state == \'Unauthorized\'}" class="fourStepToWatchDVS unautorised-user"> <div class="stepToWatchWrapper"> <div class="stepToWatchHeading"> <h4>{langTranslateApp.DStvStreamingTitle}</h4> </div> <div class="stepToWatchBody"> <div class="Pay-summary-dvs-flow"> <div class="package-info-text"> <p>{langTranslateApp.NotAuthorizedtxt}</p> <div class="package-checkout-button"> <a href="javascript:void(0);" onclick="{OnConnectSignUp}" class="button-dvs continue-checkout">OK</a> </div> </div> </div> </div> </div> </div> <div if="{state == \'WelcomeBackScreen\'}" class="dvs-initial-screen container wccard optionalSmartcard"> <div class="user-self-confirmation-heading"> <h4>{langTranslateApp.welcomeback}</h4> <p>{langTranslateApp.streamingjourney} </p> </div> <div class="sm_body"> <div class="wc-box-three"> <h2>{langTranslateApp.yournewpackages}</h2> <div class="wc-dvs-flow PREMOTT"> <div class="package-info-graphic"> <div class="dvs-change-package-item"> <div class="vs-change-package-item-image backgroun-img bg-holder"></div> <div class="vs-change-package-item-logo"><span class="icon-pack icon-PREMOTT"></span> <i class="icon icon-streaming-no-circle"></i></div> <div class="package-channel-count"> <p class="channel_numbers"><b>175+</b></p> <p>{langTranslateApp.dvschannels}</p> </div> <div class="dvs-change-package-item-price"><span class="text-uppercase">KES 8,400<span>P/M</span></span> </div> </div> </div> <div class="clearfix"> </div> </div> <div class="package-info-text"> <p><span class="text-one">{langTranslateApp.readytocheckout}</span></p> <p><span class="text-two">{langTranslateApp.continuewhereyouleft}</span> </p> <a href="javascript:void(0)" onclick="{OnConnectSignIn}" class="proceed-button">{langTranslateApp.yescontinue}</a> <p><span class="text-one">{langTranslateApp.wanttochangepackage}</span></p> <p><span class="text-two">{langTranslateApp.DStvoffers}</span> </p> <a href="javascript:void(0);" onclick="{ShowPackageSlider}" class="wc-button">{langTranslateApp.Viewpackages}</a> </div> <div class="clearfix"> </div> </div> </div> </div> <div if="{state == \'OTPScreen\'}" class="dvs-initial-screen dvs webform container modal-dialog feedback-dialog"> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package"> <div class="step_description"><span>{langTranslateApp.dvsprogresspackage1} <br>{langTranslateApp.dvsprogresspackage2}</span> </div> </li> <li class="icons-progress icon-icon-login active"> <div class="step_description"><span>{langTranslateApp.dvsprogressaccount1}<br>{langTranslateApp.dvsprogressaccount2}</span> </div> </li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle" if="{!app.isProMigration}"> <div class="step_description"> <span>{langTranslateApp.dvsprogresspayment1}<br>{langTranslateApp.dvsprogresspayment2}</span> </div> </li> <li class="icons-progress icon-icon-watch" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressstreaming1}<br>{langTranslateApp.dvsprogressstreaming2}</span> </div> </li> </ul> <div class="web-otp-section"> <div class="otp-head"> <h4>{langTranslateApp.verifydetails}</h4> <p if="{isEmailAvailable && isMobileAvailable}">{langTranslateApp.sentotptxt} <b>{connectMobile.substr(connectMobile.length - 3)}</b> {langTranslateApp.linkedsm} <b> {smartcard || product[0].smartcardNumber}</b> </p> <h5 if="{isEmailAvailable && isMobileAvailable}"> {langTranslateApp.incorrectnumber} <br> {langTranslateApp.updatenumber} <a href="javascript:void()" onclick="{SelfServiceLogin}">{langTranslateApp.heretxt}</a></h5> <h5 if="{!isEmailAvailable && isMobileAvailable}" class="mobile-error">{langTranslateApp.noemailtxt} <a href="javascript:void()" onclick="{SelfServiceLogin}">{langTranslateApp.heretxt}</a> {langTranslateApp.updateinfo}</h5> <h5 if="{!isMobileAvailable && isEmailAvailable}" class="mobile-error">{langTranslateApp.nomobiletxt} <a href="javascript:void()" onclick="{SelfServiceLogin}">{langTranslateApp.heretxt}</a> {langTranslateApp.updateinfo}</h5> <h5 if="{!isEmailAvailable && !isMobileAvailable}" class="mobile-error">{langTranslateApp.nomobilenemailtxt} <a href="javascript:void()" onclick="{SelfServiceLogin}">{langTranslateApp.heretxt}</a> {langTranslateApp.updateinfo}</h5> </div> <div class="otp-body"> <div class="otp-form-wrapper"> <h5><b>{langTranslateApp.enterotp} <br> {langTranslateApp.authenticateac}</b></h5> <form autocomplete="off"> <div id="otpHolder" class="otp-holder"> <input class="otpDigit" type="text" id="otpTxt1" maxlength="1" onkeydown="{IsValidOTP}" onkeyup="{EnableVerifyOTPButton}"><input class="otpDigit" type="text" id="otpTxt2" maxlength="1" onkeydown="{IsValidOTP}" onkeyup="{EnableVerifyOTPButton}"><input class="otpDigit" type="text" id="otpTxt3" maxlength="1" onkeydown="{IsValidOTP}" onkeyup="{EnableVerifyOTPButton}"><input class="otpDigit" type="text" id="otpTxt4" maxlength="1" onkeydown="{IsValidOTP}" onkeyup="{EnableVerifyOTPButton}"><input hidden="" id="otpData" name="otp" value=""> <div if="{showOtpErrorMsg}" class="resend-otp"> <p style="color: red !important;">{otpErrorMsg}</p> </div> <div if="{otpResentMsg}" class="resend-otp"> <p>{langTranslateApp.otpsenttxt}</p> </div> <div class="otp-submit otp-button-group" style="margin-top: 30px;"><a href="javascript:void(0)" class="button-dvs active" id="otpSubmit" onclick="{Validate}" disabled="{!enableVerifyOTP}">{langTranslateApp.verifyotptxt}</a></div> </div> <h5 class="mt-3"><b>{langTranslateApp.nootpptxt} </b></h5> <div if="{!showOtpErrorMsg && showResendMsg}" class="resend-otp"> <p>{langTranslateApp.requestotpptxt} {resendTimer} {langTranslateApp.sectxt}</p> </div> <div class="otp-submit otp-button-group" style="margin-top: 20px;"><a href="javascript:void(0)" onclick="{ResendOTP}" class="button-dvs resend-otp-button" disabled="{!enableResend}">{langTranslateApp.resendotptxt}</a></div> </form> </div> </div> <div if="{!isOverrideEmail}" class="otp-head otp-footer">{langTranslateApp.gotxt} <a href="javascript:void()" onclick="{BackConfirmScreen}">{langTranslateApp.backtxt}</a> {langTranslateApp.resubmittxt}</div> </div> <!-- <p if="{smartcard}" class="opt-bottom-text">**Please note you will need to login to self service to update your details </p> --> </div> <!--<div if="{state == \'InitialScreen\'}" class="dvs-initial-screen dvs webform container modal-dialog feedback-dialog"> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package"><span class="dvs-li-progress">{langTranslateApp.dvsprogresspackage1} <br>{langTranslateApp.dvsprogresspackage2}</span></li> <li class="icons-progress icon-icon-login active"><span class="dvs-li-progress">Set up your<br> account</span></li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle" if="{!app.isProMigration}"><span class="dvs-li-progress">Set up your <br> payment</span></li> <li class="icons-progress icon-icon-watch" if="{!app.isProMigration}"><span class="dvs-li-progress">Start <br> streaming</span></li> </ul> <div class="dvs-heading"> <h4>Welcome to DStv</h4> <h3>Please note that your email <strong>{connectEmail}</strong> and mobile <strong>{connectMobile}</strong> will be used for all important communications</h3> </div> <div class="modal-content"> <div class="modal-body"> <div class="dvsloginPage bodyClass"> <section id="" class="DvsSignInSection1"> <div id="loginDiv"> <h5 class="sub-title">Please confirm the details below and proceed with the payment</h5> <h5 class="dvs-section-text"> Please provide the following information</h5> <div id="dvsformLoginDiv"> <div class="form-group"> <fieldset class="Select-your-gender-field user-icon"> <select id="ddlSalutation" class="form-control" name="" value="{salutation}" > <option value="Mr">Mr.</option> <option value="Mrs">Mrs.</option> <option value="Miss">Miss.</option> </select> </fieldset> </div> <div class="form-group"> <span class="dvs-login-info-name" id="" title=""></span> <fieldset class="dvs-nameMobile-field"><input type="text" id="dvs-firstname" autocomplete="nope" class="form-control dvs-name" placeholder="Name" onkeyup="{EnableContinue}" onkeypress="{ValidateInput}" value="{name}"></fieldset> </div> <div class="form-group"> <span class="dvs-login-info-surename" id="" title=""></span> <fieldset class="dvs-surnameMobile-field"><input type="text" autocomplete="nope" class="form-control dvs-surname" id="dvs-surname" placeholder="Surname" onkeyup="{EnableContinue}" onkeypress="{ValidateInput}" value="{surname}"></fieldset> </div> <h5 class="dvs-section-text-bottom">Existing DStv Customer?</h5> <h5 class="dvs-section-text">In order to associate with your existing account, provide your Smartcard number.</h5> <div class="dvs-optional form-group"> <fieldset class="Select-your-gender-fields"><input type="text" autocomplete="nope" class="form-control dvs-smartcard" id="dvs-smartcard" placeholder="Enter SmartCard Number (Optional)" value="{smartcard}"> <span class="dvs-edit edit-payment-icon"> <img src="/media/8619/materialicon-1.svg"> </span> </fieldset> </div> <div class="btnDiv"><button class="btn btn-white dvs-button" onclick="{OnContinueClick}" disabled="{!enableContinue}"><span class="">{langTranslateApp.dvscontinuebtn}</span> </button></div> </div> </div> </section> </div> </div> </div></div>--> <div if="{state == \'InitialScreen\'}" class="dvs-initial-screen dvs webform container modal-dialog feedback-dialog"> <div class="dvs webform container modal-dialog feedback-dialog userDetailsFillStep"> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package"> <div class="step_description"><span>{langTranslateApp.dvsprogresspackage1} <br>{langTranslateApp.dvsprogresspackage2}</span> </div> </li> <li class="icons-progress icon-icon-login active"> <div class="step_description"><span>{langTranslateApp.dvsprogressaccount1}<br>{langTranslateApp.dvsprogressaccount2}</span> </div> </li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle" if="{!app.isProMigration}"> <div class="step_description"> <span>{langTranslateApp.dvsprogresspayment1}<br>{langTranslateApp.dvsprogresspayment2}</span> </div> </li> <li class="icons-progress icon-icon-watch" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressstreaming1}<br>{langTranslateApp.dvsprogressstreaming2}</span> </div> </li> </ul> <div style="clear:both"> </div> <div class="dvs-heading"> <h4>{langTranslateApp.finishingprofile}</h4> <h3>{langTranslateApp.youremail} <strong>{app.connectCustomerDetails.Email}</strong> {langTranslateApp.yourmobile} <strong>{app.connectCustomerDetails.MobileNumber}</strong> {langTranslateApp.impcom}</h3> </div> <div class="user-self-confirmation-body moreDetailsAfterLogin"> <div class="modal-body"> <div class="dvsloginPage bodyClass"> <section id="" class="DvsSignInSection1"> <div id="loginDiv"> <h5 class="sub-title">{langTranslateApp.fewdetails}</h5> <h6>{langTranslateApp.providedetails}</h6> <div id="dvsformLoginDiv"> <div class="form-group"> <fieldset class="Select-your-gender-field"> <select id="ddlSalutation" class="form-control" name="" value="Title" onchange="{EnableContinue}" autofocus> <option value="" disabled selected>{langTranslateApp.updateTitle}</option> <option value="Mr">{langTranslateApp.updateMr}</option> <option value="Mrs">{langTranslateApp.updateMrs}</option> <option value="Miss">{langTranslateApp.updateMiss}</option> </select> </fieldset> </div> <div class="form-group"> <span class="dvs-login-info-name" id="" title=""></span> <fieldset class="dvs-nameMobile-field"><input type="text" id="dvs-firstname" autocomplete="nope" class="form-control dvs-name" placeholder="{langTranslateApp.txtName}" onkeyup="{EnableContinue}" onkeypress="{ValidateInput}"></fieldset> </div> <div class="form-group"> <span class="dvs-login-info-surename" id="" title=""></span> <fieldset class="dvs-surnameMobile-field"><input type="text" autocomplete="nope" class="form-control dvs-surname" id="dvs-surname" placeholder="{langTranslateApp.txtSurname}" onkeyup="{EnableContinue}" onkeypress="{ValidateInput}"></fieldset> </div> <div class="btnDiv"><button class="btn btn-white dvs-button" onclick="{OnContinueClick}" disabled="{!enableContinue}"><span class="">{langTranslateApp.paymentsContinue}</span> </button></div> </div> </div> </section> </div> </div> </div> </div> </div> <div if="{state == \'PayScreen\'}" class="dvs-pay-screen"> <div class="dvs-initial-screen dvs webform container modal-dialog feedback-dialog"> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package"> <div class="step_description"><span>{langTranslateApp.dvsprogresspackage1}<br>{langTranslateApp.dvsprogresspackage2}</span></div> </li> <li class="icons-progress icon-icon-login {isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressaccount1}<br>{langTranslateApp.dvsprogressaccount2}</span></div> </li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle active" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogresspayment1}<br>{langTranslateApp.dvsprogresspayment2}</span></div> </li> <li class="icons-progress icon-icon-watch" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressstreaming1}<br>{langTranslateApp.dvsprogressstreaming2}</span></div> </li> </ul> <div style="clear:both"></div> </div> <div class="dvs-heading"> <h4>{langTranslateApp.almostthere}</h4> <h5 class="sub-title">{app.isProMigration ? langTranslateApp.promigrationconfirmdetails : langTranslateApp.confirmdetails}</h5> </div> <div class="dvs-details-wrapper dvs-new-screen clearfix"> <div class="dvs-inner-info"> <div class="row"> <div class="response-end pending dvs"> <div class="Pay-summary-dvs-flow {selectedPackage.properties.Code}"> <h2 class="acc-left dvs-title"><b>{langTranslateApp.OrderSummary}</b></h2> <div class="package-info-graphic"> <div class="dvs-change-package-item"> <div class="vs-change-package-item-image backgroun-img bg-holder"></div> <div class="vs-change-package-item-logo"><span class="icon-pack icon-{selectedPackage.properties.Code}"></span><i class="icon icon-streaming-no-circle"></i></div> <div class="package-channel-count"> <p class="channel_numbers"><b>{selectedPackage.properties.ChannelCount}</b></p> <p>{langTranslateApp.dvschannels}</p> </div> <div class="dvs-change-package-item-price"><span class="text-uppercase">{dstvApp.countrycurrency.toUpperCase() + " "+selectedPackage.properties.Price}</span><span>P/M</span></span></div> </div> </div> <div class="package-info-text"> <p><span class="text-one">{langTranslateApp.DigitalSmartcard}:</span><br><b>{app.smartcard}</b><span>{langTranslateApp.PaymentReference}</span></p> <p><span class="text-two">{langTranslateApp.dvsselectedpackage}:</span><br><b>{PackageNameToShow(selectedPackage.properties.PackageName)}</b></p> <p><span class="text-two">{langTranslateApp.dvsmptxt}</span>:<br><b if="{app.isProMigration}">{langTranslateApp.promigrationDiscounttxt}</b><strong if="{dstvApp.countryabbreviation != \'et\' && !app.isProMigration}">{dstvApp.countrycurrency.toUpperCase() +" "+ selectedPackage.properties.Price}</strong><strong if="{dstvApp.countryabbreviation == \'et\'&& !app.isProMigration}" class="etb">{dstvApp.countrycurrency.toUpperCase() +" "+ selectedPackage.properties.localPrice.price.toFixed()}</strong><strong if="{dstvApp.countryabbreviation == \'et\'&& !app.isProMigration}" class="usd" style="display:none">{dstvApp.countrycurrency.toUpperCase()} {selectedPackage.properties.Price}</strong></p> <p if="{dstvApp.countryabbreviation == \'et\'&&!app.isProMigration}"><span class="text-two">Currency</span> <span class="currencyToggle mr-0"><label class="switch"><input onclick={onCurrencyToggle} class="switch-input" type="checkbox"/> <span class="switch-label" data-on="USD" data-off="ETB"></span> <span class="switch-handle"></span> </label></span> </p> </div> <div class="clearfix"></div> <div class="package-info-text-button"><a href="javascript:void(0);" onclick="{OnEditPackage}" class="edit-package-btn" style="display:none">{langTranslateApp.dvschangepackage}</a></div> </div> <div class="Pay-summary-dvs-flow additional-spacing" if="{!app.isProMigration}"> <div class="accordian-pack accordion_head paysummary"> <h2 class="acc-left dvs-title summaryElement"><b>{langTranslateApp.dvspaymentsummary}</b></h2> </div> <div class="Payment-showmax"> <div class="payment-summary-main"> <div class="Payment-summary-title"> <div class="overflow-quotes"> <div class="clearfix"></div> <div style="margin-bottom:10px"> <div class="quotes" style="padding-bottom:5px;font-size:16px;font-weight:300" if="{quotes.Id}"><span>{langTranslateApp.paymentSummaryQoute}</span><span class="quote-number">{quotes.Id}</span></div> <div class="quotes-details"> <div each="{lineItem, index in quotes.LineItems}" class="hover"><span class="Payment-heading-info main">{lineItem.InvoiceText}</span><span class="holder-name title" if="{dstvApp.countryabbreviation != \'et\'}">{dstvApp.countrycurrency.toUpperCase()+" "+Number(lineItem.Amount).toFixed()}</span><span class="holder-name title etb" if="{dstvApp.countryabbreviation == \'et\'}">{dstvApp.countrycurrency.toUpperCase()+" "+Number(lineItem.LocalPrice.Amount).toFixed()}</span><span class="holder-name title usd" if="{dstvApp.countryabbreviation == \'et\'}" style="display:none">{dstvApp.countrycurrency.toUpperCase()+" "+lineItem.Amount}</span><span class="tooltips" style="text-align:left;font-weight:400;">{GetFormattedDate(lineItem.StartDate)} - {GetFormattedDate(lineItem.EndDate)}</span></div> </div> <div class="clearfix"></div> </div> <div class="clearfix"></div> <div style="margin-top:-20px"><br></div> </div> </div> </div> <hr class="status-pay-dvs auto"> <div class="clearfix"></div> <div class="Payment-summary-bottom"><span class="total">{langTranslateApp.totalAmountToPay}</span> <span class="heading-price"><span>{dstvApp.countrycurrency.toUpperCase()}</span> <span id="txtval_namechanged" if="{dstvApp.countryabbreviation != \'et\'}">{Number(quotes.QuoteAmount).toFixed()}</span> <span class="etb" id="txtval_namechanged" if="{dstvApp.countryabbreviation == \'et\'}">{localPrice.toFixed()}</span> <span class="usd" id="txtval_namechanged" if="{dstvApp.countryabbreviation == \'et\'}" style="display:none">{quotes.QuoteAmount}</span></span></div> </div> <div class="dvs-cost-btn"><button type="button" class="dvs-pay-btn-cost" id="dvs-pay-button" onclick="{ShowPaymentAwerness}" tabindex="0">{langTranslateApp.ProceedPay}</button></div> </div> </div> <div class="clearfix"></div> </div> </div> </div> </div> <div if="{state == \'SufficientBalanceScreen\'}" class="dvs-pay-screen 1"> <div class="dvs-initial-screen dvs webform container modal-dialog feedback-dialog"> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package"> <div class="step_description"><span>{langTranslateApp.dvsprogresspackage1} <br>{langTranslateApp.dvsprogresspackage2}</span> </div> </li> <li class="icons-progress icon-icon-login {isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressaccount1}<br>{langTranslateApp.dvsprogressaccount2}</span> </div> </li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle active" if="{!app.isProMigration}"> <div class="step_description"> <span>{langTranslateApp.dvsprogresspayment1}<br>{langTranslateApp.dvsprogresspayment2}</span> </div> </li> <li class="icons-progress icon-icon-watch" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressstreaming1}<br>{langTranslateApp.dvsprogressstreaming2}</span> </div> </li> </ul> <div style="clear:both"> </div> </div> <div class="dvs-heading"> <h4>{langTranslateApp.Checkouttxt}</h4> <h5 class="sub-title">{(app.isProMigration) ? langTranslateApp.promigrationconfirmdetails : langTranslateApp.confirmdetails}</h5> </div> <div class="sufficent_balance_checkout dvs-details-wrapper dvs-new-screen clearfix"> <div class="dvs-inner-info"> <div class="row"> <div class="response-end pending dvs"> <div class="Pay-summary-dvs-flow {selectedPackage.properties.Code}"> <h2 class="acc-left dvs-title"><b>{langTranslateApp.OrderSummary}</b></h2> <div class="package-info-graphic"> <div class="dvs-change-package-item "> <div class="vs-change-package-item-image backgroun-img bg-holder"></div> <div class="vs-change-package-item-logo"><span class="icon-pack icon-{selectedPackage.properties.Code}"></span> <i class="icon icon-streaming-no-circle"></i> </div> <div class="package-channel-count"> <p class="channel_numbers"><b>{selectedPackage.properties.ChannelCount}</b></p> <p>Channels</p> </div> <div class="dvs-change-package-item-price"><span class="text-uppercase">{dstvApp.countrycurrency.toUpperCase() + " "+selectedPackage.properties.Price}</span><span> P/M</span></div> </div> </div> <div class="package-info-text"> <p><span class="text-one">{langTranslateApp.DigitalSmartcard}</span> <br><b>{app.smartcard}</b><span>{langTranslateApp.PaymentReference}</span></p> <p><span class="text-two">{langTranslateApp.dvsselectedpackage}:</span> <br><b>{PackageNameToShow(selectedPackage.properties.PackageName)}</b></p> <p><span class="text-two">{langTranslateApp.dvsmptxt}:</span><br><b if="{app.isProMigration}">{langTranslateApp.promigrationDiscounttxt}</b> <b if="{dstvApp.countryabbreviation != \'et\'&& !app.isProMigration}">{dstvApp.countrycurrency.toUpperCase() +" "+ selectedPackage.properties.Price}</b><b if="{dstvApp.countryabbreviation == \'et\'&& !app.isProMigration}" class="etb">{dstvApp.countrycurrency.toUpperCase() +" "+ selectedPackage.properties.localPrice.price.toFixed()}</b><b if="{dstvApp.countryabbreviation == \'et\'&& !app.isProMigration}" class="usd" style="display:none">{dstvApp.countrycurrency.toUpperCase()} {selectedPackage.properties.Price}</b></p> <p if="{dstvApp.countryabbreviation == \'et\'&&!app.isProMigration}"><span class="text-two">Currency</span> <span class="currencyToggle mr-0"><label class="switch"><input onclick={onCurrencyToggle} class="switch-input" type="checkbox"/> <span class="switch-label" data-on="USD" data-off="ETB"></span> <span class="switch-handle"></span> </label></span> </p> </div> <div class="clearfix"></div> <div class="package-info-text-button"><a href="javascript:void(0);" onclick="{OnEditPackage}" class="edit-package-btn" style="display:none">{langTranslateApp.dvschangepackage}</a></div> </div> <div class="Pay-summary-dvs-flow additional-spacing" if="{!app.isProMigration}"> <div class=""> <div class="accordian-pack accordion_head paysummary"> <h2 class="acc-left dvs-title summaryElement"><b>{langTranslateApp.dvspaymentsummary}</b></h2> </div> <div class="Payment-showmax"> <div class="payment-summary-main"> <div class="Payment-summary-title"> <div class="overflow-quotes"> <div class="clearfix"></div> <div style="margin-bottom: 10px;"> <div class="quotes" style="padding-bottom: 5px;font-size: 16px; font-weight: 300;" if="{quotes.Id}"> <span>{langTranslateApp.paymentSummaryQoute}</span> <span class="quote-number">{quotes.Id}</span></div> <div class="quotes-details"> <div each="{lineItem, index in quotes.LineItems}" class="hover"> <span class="Payment-heading-info main">{lineItem.InvoiceText} </span> <span class="tooltips" style="text-align:left; font-weight: 400;">{GetFormattedDate(lineItem.StartDate)} - {GetFormattedDate(lineItem.EndDate)}</span><span class="holder-name title" if="{dstvApp.countryabbreviation != \'et\'}">{dstvApp.countrycurrency.toUpperCase()+" "+lineItem.Amount}</span><span class="holder-name title etb" if="{dstvApp.countryabbreviation == \'et\'}">{dstvApp.countrycurrency.toUpperCase()+" "+lineItem.LocalPrice.Amount.toFixed()}</span><span class="holder-name title usd" if="{dstvApp.countryabbreviation == \'et\'}" style="display:none">{dstvApp.countrycurrency.toUpperCase()+" "+lineItem.Amount}</span></div> <div><span class="Payment-heading-info main">{langTranslateApp.Abtxt}</span><span class="holder-name title">{quotes.AccountBalance}</span></div> </div> <div class="clearfix"></div> </div> <div class="clearfix"></div> <div style="margin-top:-20px"><br></div> </div> </div> </div> <hr class="status-pay-dvs auto"> <div class="clearfix"></div> <div class="Payment-summary-bottom"> <span class="total">{langTranslateApp.RemainingBalance}</span><span class="heading-price"><span>{dstvApp.countrycurrency.toUpperCase()}</span> <span id="txtval_namechanged" if="{dstvApp.countryabbreviation != \'et\'}">{remainingACB}</span><span id="txtval_namechanged" if="{dstvApp.countryabbreviation == \'et\'}" class="etb">{remainingACBLocal}</span><span id="txtval_namechanged" if="{dstvApp.countryabbreviation == \'et\'}" style="display:none" class="usd">{remainingACB}</span></span> </div> </div> <div class="dvs-cost-btn"><button type="button" class="dvs-pay-btn-cost" id="dvs-pay-button" onclick="{OnAcceptQuote}">{langTranslateApp.Confirmtxt}</button></div> </div> </div> </div> <div class="clearfix"></div> </div> </div> </div> </div> <div if="{state == \'ChangePackageScreen\'}" class="dvs-change-package-screen"> <div class="dvs-initial-screen dvs webform container modal-dialog feedback-dialog"> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package"> <div class="step_description"><span>{langTranslateApp.dvsprogresspackage1} <br>{langTranslateApp.dvsprogresspackage2}</span> </div> </li> <li class="icons-progress icon-icon-login"> <div class="step_description"><span>{langTranslateApp.dvsprogressaccount1}<br>{langTranslateApp.dvsprogressaccount2}</span> </div> </li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle active" if="{!app.isProMigration}"> <div class="step_description"> <span>{langTranslateApp.dvsprogresspayment1}<br>{langTranslateApp.dvsprogresspayment2}</span> </div> </li> <li class="icons-progress icon-icon-watch" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressstreaming1}<br>{langTranslateApp.dvsprogressstreaming2}</span> </div> </li> </ul> <div style="clear:both"> </div> </div> <div class="dvs-heading"> <h4>{langTranslateApp.youtheretxt}</h4> <!--<h5 class="sub-title"> We just need few more details </h5>--> </div> <div class="dvs-details-wrapper change-package-wrapper clearfix"> <div class="dvs-inner-info col-lg-12"> <div class="row border-btm" if="{!selectedPackageLost}"> <div class="col-lg-6 dvs-package-flow"> <span class="dvs-text current-pack-info"> {langTranslateApp.dvscurrentpackage}: </span> <span class="dvs-text select-pack"><b> {PackageNameToShowNoStreaming(selectedPackage.properties.PackageName)}</b></span> <span class="wifi-streaming-icon"></span> </div> </div> <div class="row"> <div class="col-lg-12 mt-2"> <span class="dvs-text select-new-pack">{langTranslateApp.DesiredPackage} </span> </div> </div> <div class="row dvs-package-slider-new"> <div class="box {package.title}-bx" each="{package, index in dvsPackages}"> <div class="package-slider homepage-decoder-slider"> <div class="slide"> <div class="scene"> <div class="card"> <div class="card-face front" style="background-color: #000000"> <div class="bg-holder"></div> <div class="desc"> <div class="heading heading-white"><i class="icon-pack icon-{package.properties.Code}"></i><i class="icon icon-streaming-no-circle"></i></div> <strong style="color:#ffffff"><span class="channelNoStyle"> {package.properties.ChannelCount} </span></strong> <span class="channelWordStyle" style="color:#ffffff">{langTranslateApp.dvschannels}</span> </div> <div class="packageCard-Footer"> <span class="txt"> {langTranslateApp.dvsfrom}</span> <div class="lowholdFooter"> <!-- <span class="currencyPkgFooter"> K</span> --> <span class="pricePkgFooter"> {dstvApp.countrycurrency.toUpperCase() + " "+package.properties.Price} </span> <span class="priceLetterPkgFooter">P/m </span><a href="{package.properties.ProductMoreLink}" target="_blank" class="btn-view btn-view-white viewMoreBtnPkgFooter" > {langTranslateApp.dvsmoreinfo} </a> <a class="mobViewMoreBtnPkgFooter bg-gradient-45 arrow-font-color" tabindex="0" href="{package.properties.ProductMoreLink}" target="_blank"><span class="icon-ico-arrow-next"></span></a> </div> </div> </div> <div class="card-face back" style="background-color: #000000"> <div class="bg-holder"></div> <div class="desc"> <span class="icon-icon-close"> </span> <div class="body-wrap" style="color:#ffffff"> <!--<span style="color:#ffffff" class="back-title">FEATURES</span>--> <tag-raw content="{package.properties.PackageFeatures}"></tag-raw> </div> <div class="low-hold "> <div class="pull-left hide"> <span class="jcf-checkbox jcf-unchecked"><span></span> <input id="checkbox-{package.title}" class="checkbox-custom" name="checkbox-{package.title}" type="checkbox" onclick="{OnComparePackage}"></span><label for="checkbox-{package.title}" class="checkbox-custom-label">{langTranslateApp.Comparetxt}</label></div> <a id="know-more-{package.title}" href="javascript:;" class="btn-view track_compareslider btn-getitnow-white" onclick="{OnGetItNow}"> {langTranslateApp.dvsgetnow} </a> </div> </div> </div> </div> </div> </div> </div> </div> </div> <div class="backtofourstep"><a href="javascript:;" class="btn-back" onclick="{BackDvSPackage}"> {langTranslateApp.dvsback} </a></div> </div> </div> </div> <div if="{state == \'ComparePackageScreen\'}" class="dvs-compare-package-screen content-wrapper dvs-details-wrapper clearfix"> <div class="modal-header text-center"> <button type="button" class="dvs-close close icon-Close_M" onclick="{OnCloseComparePackage}" data-dismiss="modal"></button> <h4 class="modal-title" id="myModalLabel">Compare Packages</h4> </div> <tag-compare-packages></tag-compare-packages> </div> <div if="{state == \'AwarenessMsgScreen\'}" class="AwarenessSection dvs-AwarenessSection AwarenessSectioncrfxqx" id="awarenessPopup"> <div class="container-fluid main-section awareness"> <div class="popup AwarenessPopup content-wrapper"> <div class="text-center"><img src="/media/11347/3d-verification.svg" class="awareness-icon"></div> <div class="top-info-awareness">{langTranslateApp.awareness3dHeaderText1} {langTranslateApp.awareness3dHeaderText2}</div> <hr class="status-pay" /> <div class="AwarenessInfoArea"> <div class="awareness-top-text"><b class="bold">{langTranslateApp.awareness3dMsg1} </b>{langTranslateApp.awareness3dMsg2} <b class="bold">{langTranslateApp.awareness3dMsg3} </b>{langTranslateApp.awareness3dMsg4} <b class="bold">{langTranslateApp.awareness3dMsg5}</b></div> <div class="awareness-top-text">{langTranslateApp.awareness3dMsg6}</div> <div class="clearfix"></div> </div> </div> <div class="awareness-sub-text"> <b>{langTranslateApp.awareness4dMsg1}</b> {langTranslateApp.awareness4dMsg2} <b>{langTranslateApp.awareness4dMsg3}</b> <div class="awareness-activate-btn payment security"><button class="btn anim-btn" data-loading-text="<i class=\'fa fa-spinner fa-spin pull-right \'></i> {langTranslateApp.loginPleaseWait}" id="btnContinuePay" onclick="{ProcessPayment}" disabled="{processingPayment}"><span class="anim-span"></span><span class="spanLoginText">{langTranslateApp.paymentsContinue}</span><i class="fa fa-angle-right loginIcon"></i> </button></div> </div> </div> </div> <div if="{state == \'PaymentSuccessScreen\'}" class="dvs-success-screen content-wrapper dvs-details-wrapper clearfix"> <div class="dvs-initial-screen dvs webform container modal-dialog feedback-dialog"> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package"> <div class="step_description"><span>{langTranslateApp.dvsprogresspackage1} <br>{langTranslateApp.dvsprogresspackage2}</span> </div> </li> <li class="icons-progress icon-icon-login"> <div class="step_description"><span>{langTranslateApp.dvsprogressaccount1}<br>{langTranslateApp.dvsprogressaccount2}</span> </div> </li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle" if="{!app.isProMigration}"> <div class="step_description"> <span>{langTranslateApp.dvsprogresspayment1}<br>{langTranslateApp.dvsprogresspayment2}</span> </div> </li> <li class="icons-progress icon-icon-watch active" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressstreaming1}<br>{langTranslateApp.dvsprogressstreaming2}</span> </div> </li> </ul> <div style="clear:both"> </div> </div> <div class="dvs-inner-info col-lg-12"> <div class="row text-center"> <div class="dvs-summary-text"> <span><b>{langTranslateApp.Congratulationsdvspackage}</b></span></br><span class="dvs-summary-text-bold">{langTranslateApp.ConfirmationEmail}</span> <div class="mb-2"> </div> <a class="btn anim-btn btn-black bg-white-btn" target="_blank" href="{dstvNowRedirectUrl}" role="button" tabindex="0" if="{dstvApp.dvsShowmaxCountries.includes(dstvApp.countryabbreviation)}">{langTranslateApp.WatchNowtxt}</a> </div> </div> <div class="row three-box-wrapper"> <div class="col-md-12 mt-2 text-center"> <div class="h5 mb-4"> <div class="sm_number_bolder mb-1"><span class="h5 font-weight-normal">{langTranslateApp.DigitalSmartcardNumber}:</span> <span class="smartdigit copyText" > {newSmartcard} <i class="icon-dstv-copy clicktocopy " onclick="{copySmartCardNumber}" ></i></span></div> <span class="sm-text">{langTranslateApp.SaveSmartcard}</span> </div> <div class="three-box-wrapper"> <div class="col-md-4"> <div class="getting-started-box sm-box"> <div class="text-center"> <i class="icon-pack icon-icon-facebook-messenger-outline"></i> <h5 class="mt-1">{langTranslateApp.gettingstarted}</h5> <ul class="mb-4"> <li class="my-3"> <div class="icon-box"> <i class="icon-pack icon-icon-facebook-messenger-solid"></i> </div> <div class="info-txt"><strong>{langTranslateApp.streamonline}</strong> {langTranslateApp.usingyour} <strong>{langTranslateApp.emailaddresstxt}</strong> {langTranslateApp.txtotherand} <strong>{langTranslateApp.passwordtxt}</strong> {langTranslateApp.registeredwith}.</div> </li> <li class="my-3"> <div class="icon-box"> <i class="icon-pack icon-icon-available-pvr"></i> </div> <div class="info-txt"><strong>{langTranslateApp.ManageyourAccount}</strong> {langTranslateApp.ssportal} <b> {langTranslateApp.DigitalSmartcardNumber}</b> {langTranslateApp.txtand} <b>{langTranslateApp.loginSurname}</b> {langTranslateApp.txtor} <b>{langTranslateApp.loginMobileNumber}.</b></div> </li> </ul> </div> </div> </div> <div class="col-md-4"> <div class="box-one text-center sm-box"> <h4 class="title mb-0 pt-1">{langTranslateApp.yournewpackages}</h4> <div if="{!hideIdStatus}" class="single-line smartcart"><span class="h6 font-weight-normal">{langTranslateApp.accTransactionId}:</span> <span class="sc-no">{transactionId}</span></div> <div if="{!hideIdStatus}" class="single-line transaction-status"> <span class="h6 font-weight-normal">{langTranslateApp.TransactionStatus}:</span> <span class="sc-no">{paymentStatus.status}</span></div> <div class="clearfix"></div> <div class="box-two"> <div class="streaming-icon"></div> <div class="box-top-one {selectedPackage.properties.Code}"> <i class="icon-pack icon-{selectedPackage.properties.Code} mt-4"></i> </div> <div class="box-bottom">{langTranslateApp.loginPackage}</div> </div> <div class="box-two"> <div class="box-top-two" if="{dstvApp.countryabbreviation != \'et\'}"><span class="font-weight-light"> {dstvApp.countrycurrency.toUpperCase()} </span> <span class="h5">{selectedPackage.properties.Price}</span></div> <div class="box-top-two" if="{dstvApp.countryabbreviation == \'et\'}"><span class="font-weight-light"> {dstvApp.countrycurrency.toUpperCase()} </span> <span class="h5" if="{dstvApp.countrycurrency==\'usd\'}">{selectedPackage.properties.Price}</span></span> <span class="h5" if="{dstvApp.countrycurrency==\'etb\'}">{selectedPackage.properties.localPrice.price.toFixed()}</span></div> <div class="box-bottom">{langTranslateApp.dashChangePackageMonthlyPrice}</div> </div> <div class="box-two mr-0"> <div class="box-top-three"><span>{ValidTillDate}</span></div> <div class="box-bottom">{langTranslateApp.validtill}</div> </div> <div class="clearfix"></div> <div class="col-md-12 text-center showmax-ott-btns mt-4"> <a class="btn anim-btn btn-black-transparent" onclick="{ManageAccount}" role="button" tabindex="0">{langTranslateApp.ManageAccount}</a> <a class="btn anim-btn btn-black" target="_blank" href="{dstvNowRedirectUrl}" role="button" tabindex="0">{langTranslateApp.WatchNowtxt}</a> <a class="btn btn-transparent mt-2" onclick="{SaveAsPdf}" role="button" tabindex="0">{langTranslateApp.DownloadSummary} <i class="fa fa-download downloadIcon icon-download"></i></a> <div class="clearfix"></div> </div> <div class="clearfix"></div> </div> </div> <div class="col-md-4 sm-box" if="{dstvApp.dvsShowmaxOnboarding.includes(dstvApp.countryabbreviation)}"> <div class="showmax-ott-box text-center"> <div class="" style="z-index: 9999;" if="{!showMaxLoaded}"> <div class="loading-loader loading"> <div class="loader-inner col-sm-12 text-center white"> <div class="spinner black"></div> <div class="loading-message">{langTranslateApp.dashShowmaxLoading}...</div> </div> </div> </div> <div class="showmax-top-section"> <img src="/media/12298/showmax-logo-black.png" alt="Showmax Logo" class="showmax-icon"> <div> <h3 class="mb-2">{langTranslateApp.showmaxAddtxt}</h3> <h3 class="mb-2">{langTranslateApp.qualifyShowmaxtxt} <span>{app.showmaxDiscountValue}%</span> {langTranslateApp.showmaxDiscounttxt}</h3> <div class="showmax-ott-banner"> <img src="/media/12299/showmax-ott-banner.png" alt="Showmax Banner"> </div> <div class="showmax-channels-section mt-2 mb-3"> <img src="/media/12217/channels-group.png" alt="Showmax Channel Logos"> </div> <div class="showmax-ott-btns"> <button type="button" class="btn btn-black-transparent" data-dismiss="modal" if={!app.isDVSJourney}>Later</button> <button type="button" class="btn btn-black" onclick={onDashActivateShowmax} if={app.showmaxDiscountValue=="100"}>Activate Now</button> <button type="button" class="btn btn-black" if={app.showmaxDiscountValue!="100"} onclick={onDashActivateShowmax} >Get It Now</button> </div> </div> </div> </div> </div> </div> </div> </div> <!--<div class="dvs-bottom-text"> <strong>{langTranslateApp.ManageyourAccount}</strong> {langTranslateApp.ssportal} <b> {langTranslateApp.DigitalSmartcardNumber}</b> {langTranslateApp.txtand} <b>{langTranslateApp.loginSurname}</b> {langTranslateApp.txtor} <b>{langTranslateApp.loginMobileNumber}.</b><div class="mb-1"> </div> <strong>{langTranslateApp.streamonline}</strong> {langTranslateApp.usingyour} <strong>{langTranslateApp.emailaddresstxt}</strong> {langTranslateApp.txtotherand} <strong>{langTranslateApp.passwordtxt}</strong> {langTranslateApp.registeredwith}.</div>--> </div> </div> <div if="{state == \'PaymentSuccessScreen\'}" class="dvs-success-screen bottom-notification clearfix"> <div class="playstore-box"> <div class="container"> <div class="col-lg-9"> <div class="h5 text-left">Watch it Online</div> <p>{langTranslateApp.paymentmsgforUsers}</p> <a target="_blank" href="{dstvApp.AndroidMobileAppLink}"><img src="/media/11925/googleplay.png"> </a> <a target="_blank" href="{dstvApp.IosMobileAppLink}"><img src="/media/11926/appstore.png"> </a> </div> <div class="col-lg-3"><img class="dvs-watch-online" src="/media/11931/ipad.png"></div> </div> </div> </div> <div if="{state == \'PaymentPendingScreen\'}" class="dvs-pending-screen content-wrapper dvs-details-wrapper clearfix"> <div class="dvs-initial-screen dvs webform container modal-dialog feedback-dialog"> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package"> <div class="step_description"><span>{langTranslateApp.dvsprogresspackage1} <br>{langTranslateApp.dvsprogresspackage2}</span> </div> </li> <li class="icons-progress icon-icon-login"> <div class="step_description"><span>{langTranslateApp.dvsprogressaccount1}<br>{langTranslateApp.dvsprogressaccount2}</span> </div> </li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle active" if="{!app.isProMigration}"> <div class="step_description"> <span>{langTranslateApp.dvsprogresspayment1}<br>{langTranslateApp.dvsprogresspayment2}</span> </div> </li> <li class="icons-progress icon-icon-watch" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressstreaming1}<br>{langTranslateApp.dvsprogressstreaming2}</span> </div> </li> </ul> <div style="clear:both"> </div> </div> <div class="dvs-inner-info col-lg-12"> <div class="row text-center"> <div class="sample"><i class="fa fa-spinner fa-pulse fa-fw"></i></div> <div class="h5">Pending <i if="{fetchingPaymentStatus}" class="fa fa-refresh fa-spin fa-fw"></i></div> <div class="dvs-summary-text">{langTranslateApp.PleasegotoManageAccount}.</div> </div> <div class="row three-box-wrapper"> <div class="col-md-12 mt-2 text-center"> <div class="h5 mb-4"> <div class="sm_number_bolder"><span class="h5 font-weight-normal">{langTranslateApp.DigitalSmartcardNumber}:</span> <span class="smartdigit copyText" > {newSmartcard} <i class="icon-dstv-copy clicktocopy" onclick="{copySmartCardNumber}"></i></span></div> </div> <div class="three-box-wrapper"> <div class="col-md-4"> <div class="getting-started-box sm-box"> <div class="text-center"> <i class="icon-pack icon-icon-facebook-messenger-outline"></i> <h5 class="mt-1">{langTranslateApp.gettingstarted}</h5> <ul class="mb-4"> <li class="my-3"> <div class="icon-box"> <i class="icon-pack icon-icon-facebook-messenger-solid"></i> </div> <div class="info-txt"><strong>{langTranslateApp.streamonline}</strong> {langTranslateApp.usingyour} <strong>{langTranslateApp.emailaddresstxt}</strong> {langTranslateApp.txtotherand} <strong>{langTranslateApp.passwordtxt}</strong> {langTranslateApp.registeredwith}.</div> </li> <li class="my-3"> <div class="icon-box"> <i class="icon-pack icon-icon-available-pvr"></i> </div> <div class="info-txt"><strong>{langTranslateApp.ManageyourAccount}</strong> {langTranslateApp.ssportal} <b> {langTranslateApp.DigitalSmartcardNumber}</b> {langTranslateApp.txtand} <b>{langTranslateApp.loginSurname}</b> {langTranslateApp.txtor} <b>{langTranslateApp.loginMobileNumber}.</b></div> </li> </ul> </div> </div> </div> <div class="col-md-4"> <div class="box-one text-center sm-box"> <h4 class="title mb-0 pt-1"> {langTranslateApp.yournewpackages}</h4> <div class="single-line smartcart"><span class="h6 font-weight-normal">{langTranslateApp.accTransactionId}:</span> <span class="sc-no">{transactionId}</span></div> <div class="single-line transaction-status"> <span class="h6 font-weight-normal">{langTranslateApp.TransactionStatus}:</span> <span class="sc-no">{paymentStatus.status}</span></div> <div class="clearfix"></div> <div class="package-three-box-wrapper"> <div class="box-two"> <div class="streaming-icon"></div> <div class="box-top-one {selectedPackage.properties.Code}"> <i class="icon-pack icon-{selectedPackage.properties.Code} mt-4"></i> </div> <div class="box-bottom">{langTranslateApp.Packagetxt}</div> </div> <div class="box-two"> <div class="box-top-two" if="{dstvApp.countryabbreviation != \'et\'}"><span class="font-weight-light"> {dstvApp.countrycurrency.toUpperCase()} </span> <span class="h5">{selectedPackage.properties.Price}</span></div> <div class="box-top-two" if="{dstvApp.countryabbreviation == \'et\'}"><span class="font-weight-light"> {dstvApp.countrycurrency.toUpperCase()} </span> <span class="h5" if="{dstvApp.countrycurrency==\'usd\'}">{selectedPackage.properties.Price}</span></span> <span class="h5" if="{dstvApp.countrycurrency==\'etb\'}">{selectedPackage.properties.localPrice.price.toFixed()}</span></div> <div class="box-bottom">{langTranslateApp.dvsmptxt}</div> </div> </div> <div class="clearfix"></div> <div class="col-md-12 text-center showmax-ott-btns mt-4"> <a class="btn anim-btn btn-black-transparent" onclick="{ManageAccount}" role="button" tabindex="0" >{langTranslateApp.ManageAccount}</a> <div class="clearfix mb-1"></div> <a class="btn btn-transparent mt-2" disabled="disabled" >{langTranslateApp.DownloadSummary} <i class="fa fa-download downloadIcon icon-download"></i></a> <div class="clearfix"></div> </div> </div> </div> <div class="col-md-4 sm-box" if="{dstvApp.dvsShowmaxOnboarding.includes(dstvApp.countryabbreviation)}"> <div class="showmax-ott-box text-center"> <div class="" style="z-index: 9999;" if="{!showMaxLoaded}"> <div class="loading-loader loading"> <div class="loader-inner col-sm-12 text-center white"> <div class="spinner black"></div> <div class="loading-message">{langTranslateApp.dashShowmaxLoading}...</div> </div> </div> </div> <div class="showmax-top-section"> <img src="/media/12298/showmax-logo-black.png" alt="Showmax Logo" class="showmax-icon"> <div> <h3 class="mb-2">{langTranslateApp.showmaxAddtxt}</h3> <h3 class="mb-2">{langTranslateApp.qualifyShowmaxtxt} <span>{app.showmaxDiscountValue}%</span> {langTranslateApp.showmaxDiscounttxt}</h3> <div class="showmax-ott-banner"> <img src="/media/12299/showmax-ott-banner.png" alt="Showmax Banner"> </div> <div class="showmax-channels-section mt-2 mb-3"> <img src="/media/12217/channels-group.png" alt="Showmax Channel Logos"> </div> <div class="showmax-ott-btns"> <button type="button" class="btn btn-black-transparent" data-dismiss="modal" if={!app.isDVSJourney}>Later</button> <button type="button" class="btn btn-black" onclick={onDashActivateShowmax} if={app.showmaxDiscountValue=="100"}>Activate Now</button> <button type="button" class="btn btn-black" if={app.showmaxDiscountValue!="100"} onclick={onDashActivateShowmax} >Get It Now</button> </div> </div> </div> </div> </div> </div> </div> </div> </div> </div> <div if="{state == \'PaymentFailedScreen\'}" class="dvs-failed-screen content-wrapper dvs-details-wrapper clearfix"> <div class="dvs-initial-screen dvs webform container modal-dialog feedback-dialog"> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package"> <div class="step_description"><span>{langTranslateApp.dvsprogresspackage1} <br>{langTranslateApp.dvsprogresspackage2}</span> </div> </li> <li class="icons-progress icon-icon-login"> <div class="step_description"><span>{langTranslateApp.dvsprogressaccount1}<br>{langTranslateApp.dvsprogressaccount2}</span> </div> </li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle active" if="{!app.isProMigration}"> <div class="step_description"> <span>{langTranslateApp.dvsprogresspayment1}<br>{langTranslateApp.dvsprogresspayment2}</span> </div> </li> <li class="icons-progress icon-icon-watch" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressstreaming1}<br>{langTranslateApp.dvsprogressstreaming2}</span> </div> </li> </ul> <div style="clear:both"> </div> </div> <div class="dvs-inner-info col-lg-12"> <div class="row text-center"> <div class="sample"></div> <div class="h5">{langTranslateApp.Unsuccessfultxt}</div> <div class="dvs-summary-text">{langTranslateApp.Weresorrytxt}.<br>{langTranslateApp.tryagaintxt}. <br>{langTranslateApp.Usebelowtxt}.</div> </div> <div class="row three-box-wrapper"> <div class="col-md-12 mt-2 text-center"> <div class="h5 mb-4"> <div class="sm_number_bolder mb-1"><span class="h5 font-weight-normal">{langTranslateApp.DigitalSmartcardNumber}:</span> <span class="smartdigit copyText" > {newSmartcard} <i class="icon-dstv-copy clicktocopy" ></i></span></div> </div> <div class="three-box-wrapper"> <div class="col-md-4"> <div class="getting-started-box sm-box"> <div class="text-center"> <i class="icon-pack icon-icon-facebook-messenger-outline"></i> <h5 class="mt-1">{langTranslateApp.gettingstarted}</h5> <ul class="mb-4"> <li class="my-3"> <div class="icon-box"> <i class="icon-pack icon-icon-facebook-messenger-solid"></i> </div> <div class="info-txt"><strong>{langTranslateApp.streamonline}</strong> {langTranslateApp.usingyour} <strong>{langTranslateApp.emailaddresstxt}</strong> {langTranslateApp.txtotherand} <strong>{langTranslateApp.passwordtxt}</strong> {langTranslateApp.registeredwith}.</div> </li> <li class="my-3"> <div class="icon-box"> <i class="icon-pack icon-icon-available-pvr"></i> </div> <div class="info-txt"><strong>{langTranslateApp.ManageyourAccount}</strong> {langTranslateApp.ssportal} <b> {langTranslateApp.DigitalSmartcardNumber}</b> {langTranslateApp.txtand} <b>{langTranslateApp.loginSurname}</b> {langTranslateApp.txtor} <b>{langTranslateApp.loginMobileNumber}.</b></div> </li> </ul> </div> </div> </div> <div class="col-md-4"> <div class="box-one text-center sm-box"> <h4 class="title mb-0 pt-1"> {langTranslateApp.yournewpackages}</h4> <div class="single-line smartcart"><span class="h6 font-weight-normal">{langTranslateApp.accTransactionId}:</span> <span class="sc-no">{transactionId}</span></div> <div class="single-line transaction-status"> <span class="h6 font-weight-normal">{langTranslateApp.TransactionStatus}:</span> <span class="sc-no">{paymentStatus.status}</span></div> <div class="clearfix"></div> <div class="package-three-box-wrapper"> <div class="box-two"> <div class="streaming-icon"></div> <div class="box-top-one {selectedPackage.properties.Code}"> <i class="icon-pack icon-{selectedPackage.properties.Code} mt-4"></i> </div> <div class="box-bottom">{langTranslateApp.pkgNewPackageTitle}</div> </div> <div class="box-two mr-0"> <div class="box-top-two" if="{dstvApp.countryabbreviation != \'et\'}"><span class="font-weight-light"> {dstvApp.countrycurrency.toUpperCase()} </span> <span class="h5">{selectedPackage.properties.Price}</span></div> <div class="box-top-two" if="{dstvApp.countryabbreviation == \'et\'}"><span class="font-weight-light"> {dstvApp.countrycurrency.toUpperCase()} </span> <span class="h5" if="{dstvApp.countrycurrency==\'usd\'}">{selectedPackage.properties.Price}</span></span> <span class="h5" if="{dstvApp.countrycurrency==\'etb\'}">{selectedPackage.properties.localPrice.price.toFixed()}</span></div> <div class="box-bottom">{langTranslateApp.dvsmptxt}</div> </div> </div> <div class="clearfix"></div> <div class="col-md-12 text-center showmax-ott-btns mt-4"> <a class="btn anim-btn btn-black" onclick="{ShowPaymentAwerness}" role="button" tabindex="0" >{langTranslateApp.retrytxt}</a> <a class="btn anim-btn btn-black-transparent" onclick="{ManageAccount}" role="button" tabindex="0">{langTranslateApp.ManageAccount}</a> </div> <div class="clearfix"></div> </div> </div> <div class="col-md-4 sm-box" if="{dstvApp.dvsShowmaxOnboarding.includes(dstvApp.countryabbreviation)}"> <div class="showmax-ott-box text-center"> <div class="" style="z-index: 9999;" if="{!showMaxLoaded}"> <div class="loading-loader loading"> <div class="loader-inner col-sm-12 text-center white"> <div class="spinner black"></div> <div class="loading-message">{langTranslateApp.dashShowmaxLoading}...</div> </div> </div> </div> <div class="showmax-top-section"> <img src="/media/12298/showmax-logo-black.png" alt="Showmax Logo" class="showmax-icon"> <div> <h3 class="mb-2">{langTranslateApp.showmaxAddtxt}</h3> <h3 class="mb-2">{langTranslateApp.qualifyShowmaxtxt} <span>{app.showmaxDiscountValue}%</span> {langTranslateApp.showmaxDiscounttxt}</h3> <div class="showmax-ott-banner"> <img src="/media/12299/showmax-ott-banner.png" alt="Showmax Banner"> </div> <div class="showmax-channels-section mt-2 mb-3"> <img src="/media/12217/channels-group.png" alt="Showmax Channel Logos"> </div> <div class="showmax-ott-btns"> <button type="button" class="btn btn-black-transparent" data-dismiss="modal" if={!app.isDVSJourney}>Later</button> <button type="button" class="btn btn-black" onclick={onDashActivateShowmax} if={app.showmaxDiscountValue=="100"}>Activate Now</button> <button type="button" class="btn btn-black" if={app.showmaxDiscountValue!="100"} onclick={onDashActivateShowmax} >Get It Now</button> </div> </div> </div> </div> </div> </div> </div> </div> </div> </div> <div if="{state == \'showError500\'}" id="error500" class="dvs-error-screen content-wrapper dvs-details-wrapper clearfix" style="text-align: center;"> <button type="button" onclick="{OnClosePopup}" class="dvs-close icon-Close_M"></button> <div class="show-errors"> <h1 class="sectionTitle icon-DStv-icon-failed"></h1> <h5 class="dvs-error-heading"> {langTranslateApp.Unsuccessfultxt} </h5> <hr class="dvs-status-pay"> <h3 id="loginRetryPrompt"> <!--<span class="error-note">{langTranslateApp.genericTechnicalIssueMsg1} <u><a class="payments_errContactUs" target="_blank" href="{dstvApp.targetDomain+window.culture+langTranslateApp.subMenuContactUsLink}">{langTranslateApp.subMenuContactUs}</a></u> {langTranslateApp.genericTechnicalIssueMsg2}</span>--><span class="error-note">{langTranslateApp.genericTechnicalIssueMsg3} <br> {langTranslateApp.genericTechnicalIssueMsg4} </span> </h3> </div> <div class="Wrapper-white"> <div id="formLoginDiv"> <div class="popup-error-msg">{langTranslateApp.tryagaintocontinuetxt}</div> <button class="btn btn-white sign-in-varify anim-btn" id="btnRetry" onclick="{OnRetry}"><span class="anim-span"></span><span class="spanLoginText">{langTranslateApp.dashboardRetry}</span></button> </div> </div> </div> <div if="{state == \'StreamingActivatedScreen\'}" id="" class="streamingactivatedpopup dvs-error-screen content-wrapper dvs-details-wrapper clearfix" style="text-align: center;"> <button type="button" onclick="{OnClosePopup}" class="dvs-close icon-Close_M"></button> <div class="show-errors"> <h1 class="sectionTitle"></h1> <h5 class="dvs-error-heading"> {langTranslateApp.successful} </h5> <hr class="dvs-status-pay"> <h3 id="loginRetryPrompt"><span class="error-note">{langTranslateApp.StreamingActivatedtxt} </span></h3> </div> <div class="Wrapper-white"> <div id="formLoginDiv"> <div class="btnDiv"><button class="btn btn-white sign-in-varify anim-btn" id="btnManage" onclick="{ManageAccount}"><span class="anim-span"></span><span class="spanLoginText">{langTranslateApp.ManageAccount} </span></button><button class="btn btn-white sign-in-varify anim-btn" id="btnWatch" onclick="{OnWatchNow}"><span class="anim-span"></span><span class="spanLoginText">{langTranslateApp.StreamNowtxt}</span></button></div> </div> </div> </div> <div if="{state == \'showMessage208\'}" id="error208" class="dvs-error-screen content-wrapper dvs-details-wrapper clearfix" style="text-align: center;"> <button type="button" onclick="{OnClosePopup}" class="dvs-close icon-Close_M"></button> <div class="show-errors"> <div class="payment-main-sections failed"> <div class="icon-img-common"></div> </div> <h5> {langTranslateApp.ServiceActivatedtxt} </h5> <h3 id="loginRetryPrompt"><span class="error-note">{langTranslateApp.Looksliketxt} {PackageNameToShow(selectedPackage.properties.PackageName)} {langTranslateApp.PackageActivatedtxt}.</span></h3> </div> <div class="Wrapper-white"> <div id="formLoginDiv"> <div class="btnDiv"><button class="btn btn-white sign-in-varify anim-btn" id="btnRetry" onclick="{ManageAccount}"><span class="anim-span"></span><span class="spanLoginText">{langTranslateApp.ManageAccount}</span><i class="fa fa-angle-right loginIcon" style="margin-left: 11px;"></i> </button></div> </div> </div> </div> <div if="{state == \'showMessage412\'}" id="error412" class="dvs-error-screen content-wrapper dvs-details-wrapper clearfix" style="text-align: center;"> <button type="button" onclick="{OnClosePopup}" class="dvs-close icon-Close_M"></button> <div class="show-errors"> <div class="payment-main-sections failed"> <div class="icon-img-common"></div> </div> <h5> {langTranslateApp.ServiceDisconnetedtitle} </h5> <h3 id="loginRetryPrompt"><span class="error-note">{langTranslateApp.StreamingPackageDisconnected}</span></h3> </div> <div class="Wrapper-white"> <div id="formLoginDiv"> <div class="btnDiv"> <button class="btn btn-white sign-in-varify anim-btn" id="btnRetry" onclick="{ManageAccount}"> <span class="anim-span"></span><span class="spanLoginText">{langTranslateApp.ManageAccount}</span> <!-- <i class="fa fa-angle-right loginIcon" style="margin-left: 11px;"></i> --> </button> </div> </div> </div> </div> <div if="{state == \'showErrorGeneric\'}" id="errorGeneric" class="customer-alreadylinked-dvs dvs-error-screen content-wrapper dvs-details-wrapper clearfix" style="text-align: center;"> <button type="button" onclick="{OnClosePopup}" class="dvs-close icon-Close_M"></button> <div class="show-errors"> <h1 class="sectionTitle icon-DStv-icon-failed"></h1> <h5 class="dvs-error-heading"> {langTranslateApp.Unsuccessfultxt} </h5> <hr class="dvs-status-pay"> <h3 id="loginRetryPrompt"><span class="error-note">{errorMessage}</span></h3> </div> <div class="Wrapper-white"> <div id="formLoginDiv"> <div class="btnDiv"><button class="btn btn-white sign-in-varify anim-btn" id="btnRetry" onclick="{OnRetry}"><span class="anim-span"></span><span class="spanLoginText">{langTranslateApp.dashboardRetry}</span><i class="fa fa-angle-right loginIcon"></i> </button></div> </div> </div> </div> <div if="{state == \'RejectAndCreateQouteScreen\'}" class="dvs-reject-qoute-screen content-wrapper dvs-details-wrapper clearfix" style="text-align: center;"> <div class="payment-main-sections pending"> <div class="icon-img-common"><i class="fa fa-spinner fa-pulse fa-2x fa-fw"></i></div> </div> <h5 style="text-transform: uppercase;">{langTranslateApp.PendingPaymentTitle}</h5> <div style="margin: 40px;"><span class="error-note">{langTranslateApp.noticedtxt} <b>{PackageNameToShow(oldPackage)}</b> {langTranslateApp.packagetxt2}<br> {langTranslateApp.wanttocontinue1} <b>{PackageNameToShow(newPackage)}</b> {langTranslateApp.packagetxt1}</span></div> <div class="" style="margin-top: 20px;margin-bottom: 20px;"><button type="button" class="btn dvs-reject-qoute" onclick="{ShowOldQoute}">{langTranslateApp.ContinuePrevious}</button><button type="button" class="btn dvs-accept-qoute" onclick="{RejectAndCreateNewQoute}" id="activated-streaming">{langTranslateApp.ContinueNew}</button></div> </div> <div if="{state == \'ConfirmationScreen\'}" class="dvs-initial-screen modal-dialog feedback-dialog1 streamingAlready optionalSmartcard user-self-confirmation"> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package"> <div class="step_description"><span>{langTranslateApp.dvsprogresspackage1} <br>{langTranslateApp.dvsprogresspackage2}</span> </div> </li> <li class="icons-progress icon-icon-login"> <div class="step_description"><span>{langTranslateApp.dvsprogressaccount1}<br>{langTranslateApp.dvsprogressaccount2}</span> </div> </li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle active" if="{!app.isProMigration}"> <div class="step_description"> <span>{langTranslateApp.dvsprogresspayment1}<br>{langTranslateApp.dvsprogresspayment2}</span> </div> </li> <li class="icons-progress icon-icon-watch" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressstreaming1}<br>{langTranslateApp.dvsprogressstreaming2}</span> </div> </li> </ul> <div style="clear:both"> </div> <div class="user-self-confirmation-wrap"> <div class="user-self-confirmation-heading"> <h4>{langTranslateApp.ConfirmDetailstxt}</h4> <!-- <p>Before you proceed, please verify the details/information below</p> --> </div> <div class="user-self-confirmation-body"> <div class="self-confirmation-form-title"> <p><strong>{langTranslateApp.PleaseVerifyContinue}</strong> </p> </div> <div class="confirmation-form "> <form> <div class="form-group row"><input type="input" class="form-control" id="salutation" placeholder="Salutation" readonly></div> <div class="form-group row"><input type="input" class="form-control" id="firstName" placeholder="First Name" readonly></div> <div class="form-group row"><input type="input" class="form-control" id="lastName" placeholder="Last Name" readonly></div> <!--<div class="form-group row"><input type="input" class="form-control" id="phoneNumber" placeholder="Phone Number"></div> <div class="form-group row"><input type="input" class="form-control" id="emailAddress" placeholder="Email Address"></div>--> <div class="form-group button-group row"><a style="position: relative" href="javascript:void(0)" onclick="{OnContinueClick}" class="button-dvs active">{langTranslateApp.dvscontinuebtn}</a> <a style="position: relative" href="javascript:void(0)" onclick="{BackConfirmScreen}" class="button-dvs">{langTranslateApp.updateCancel}</a></div> </form> </div> </div> </div> </div> <div if="{state == \'AlreadyStreamingScreen\'}" class="dvs-initial-screen dvs webform container modal-dialog streamingAlready streamingAlready-one optionalSmartcard "> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package"> <div class="step_description"><span>{langTranslateApp.dvsprogresspackage1} <br>{langTranslateApp.dvsprogresspackage2}</span> </div> </li> <li class="icons-progress icon-icon-login active"> <div class="step_description"><span>{langTranslateApp.dvsprogressaccount1}<br>{langTranslateApp.dvsprogressaccount2}</span> </div> </li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle" if="{!app.isProMigration}"> <div class="step_description"> <span>{langTranslateApp.dvsprogresspayment1}<br>{langTranslateApp.dvsprogresspayment2}</span> </div> </li> <li class="icons-progress icon-icon-watch" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressstreaming1}<br>{langTranslateApp.dvsprogressstreaming2}</span> </div> </li> </ul> <div style="clear:both"> </div> <!-- <div class="headingbelowprogressbar"> <h4>Streaming Already Enabled</h4> <h4>{headerText}</h4> </div> --> <div class="streamingAlready"> <div class="smartCardFoundbx"> <div class="smartCardFoundbx-left"> <h2 class="streaming-info-main">{headerText}</h2> <p if="{!isActive}" class="streaming-info">{langTranslateApp.noticedtxt1}</p> <p if="{isActive}" class="streaming-info">{langTranslateApp.noticedtxt2}</p> <p><strong>{app.connectCustomerDetails.PersonalDetail.Email}</strong></p> <p if="{!isActive}" class="streaming-info"><strong>N.B. </strong> {langTranslateApp.signprofiletxt} <br> </p> <a href="javascript:void(0)" onclick="{OnConnectSignUp}" class="cta success-btn did-streaming">{langTranslateApp.signupdifferentemailtxt}</a> <a if="{!isActive && !isDvs}" href="javascript:void(0)" onclick="{OnOverrideEmail}" class="cta success-btn did-streaming override-cta">{langTranslateApp.useemailtxt}</a> <h6 if="{!isActive}">{langTranslateApp.subscriptiontxt} <a href="javascript:void(0)" onclick="{SelfServiceLogin}"> {langTranslateApp.Clickheretxt}</a> {langTranslateApp.txtto} <b>{langTranslateApp.reconnecttxt}</b> {langTranslateApp.subtxt}</h6> <h6 if="{isActive}">{langTranslateApp.subscriptiontxt} <a href="javascript:void(0)" onclick="{OnWatchNow}">{langTranslateApp.Clickheretxt}</a> {langTranslateApp.streamnowtxt1} </h6> </div> <div class="smartCardFoundbx-right"> <img src="/media/11920/video-thumnbail.png"> </div> <div class="clearfix"></div> </div> <!-- <div class="stream_body"> <div class="stream_wrapper"> <p>It seems you already have streaming enabled on this e-mail, <strong>{app.connectCustomerDetails.PersonalDetail.Email}</strong></p> </br> <p>Do you want to stream now or continue creating a new streaming account?</p> <div class="stream-button-group"><a href="javascript:void(0)" onclick="{OnWatchNow}" class="button-dvs active" style="z-index: 999">Stream now</a><a href="javascript:void(0)" onclick="{OnConnectSignUp}" class="button-dvs active" style="z-index: 999">Signup with different email</a></div> </div> </div>--> </div> </div> <div if="{state == \'AccountFoundScreen\'}"> <div class="dvs-initial-screen dvs webform container modal-dialog feedback-dialog1 streamingAlready optionalSmartcard"> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package"> <div class="step_description"><span>{langTranslateApp.dvsprogresspackage1} <br>{langTranslateApp.dvsprogresspackage2}</span> </div> </li> <li class="icons-progress icon-icon-login active"> <div class="step_description"><span>{langTranslateApp.dvsprogressaccount1}<br>{langTranslateApp.dvsprogressaccount2}</span> </div> </li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle" if="{!app.isProMigration}"> <div class="step_description"> <span>{langTranslateApp.dvsprogresspayment1}<br>{langTranslateApp.dvsprogresspayment2}</span> </div> </li> <li class="icons-progress icon-icon-watch" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressstreaming1}<br>{langTranslateApp.dvsprogressstreaming2}</span> </div> </li> </ul> <div style="clear:both"> </div> <div class="smartCardFoundbx"> <div class="smartCardFoundbx-left"> <h2 class="streaming-info-main">{langTranslateApp.AccountVerifiedtxt}</h2> <p class="streaming-info">{langTranslateApp.DecoderSmartcardtxt} <b>{smartcard}.</b></br> {langTranslateApp.CreateNewStreamingAccounttxt}</p> <a href="javascript:void(0)" onclick="{InitializeOrConfirmation}" class="cta success-btn did-streaming">{langTranslateApp.createstreamingactxt}</a> <h6 if="{isActive}">{langTranslateApp.subscriptiontxt} <a href="javascript:void(0)" onclick="{LinkCustomerToConnect}">{langTranslateApp.Clickheretxt}</a> {langTranslateApp.txtto} {langTranslateApp.activestreamingtxt} </h6> <h6 if="{!isActive}"> {langTranslateApp.subscriptiontxt} <a href="javascript:void(0)" onclick="{SelfServiceLogin}">{langTranslateApp.Clickheretxt}</a> {langTranslateApp.txtto} <b>{langTranslateApp.reconnecttxt}</b> {langTranslateApp.existingsubtxt} </h6> </div> <div class="smartCardFoundbx-right"> <img src="/media/11920/video-thumnbail.png"> </div> <div class="clearfix"></div> </div> </div> </div> <div if="{state==\'EnterSmartcardScreen\'}" class="dvs-initial-screen dvs webform container modal-dialog feedback-dialog1 streamingAlready optionalSmartcard"> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package"> <div class="step_description"><span>{langTranslateApp.dvsprogresspackage1} <br>{langTranslateApp.dvsprogresspackage2}</span> </div> </li> <li class="icons-progress icon-icon-login active"> <div class="step_description"><span>{langTranslateApp.dvsprogressaccount1}<br>{langTranslateApp.dvsprogressaccount2}</span> </div> </li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle" if="{!app.isProMigration}"> <div class="step_description"> <span>{langTranslateApp.dvsprogresspayment1}<br>{langTranslateApp.dvsprogresspayment2}</span> </div> </li> <li class="icons-progress icon-icon-watch" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressstreaming1}<br>{langTranslateApp.dvsprogressstreaming2}</span> </div> </li> </ul> <div style="clear:both"> </div> <div class="user-self-confirmation-heading"> <h4>{langTranslateApp.letshelptxt}<br>{langTranslateApp.letshelptxt2} {PackageNameToShow(app.selectedPackage.properties.PackageName)}</h4> <p><b>{langTranslateApp.Pleasenotetxt} </b> {langTranslateApp.emailtxt} <strong>{app.connectCustomerDetails.Email}</strong> {langTranslateApp.mobiletxt} <strong>{app.connectCustomerDetails.MobileNumber}</strong> {langTranslateApp.communicationtxt}</p> </div> <div class="sm_body"> <div class="sm-box-one"> <div class="stream_wrapper"> <h4>{langTranslateApp.SeperateAccount}</h4> <p>{langTranslateApp.NoAccount}</p> <p>{langTranslateApp.SeperateNewAccount} <b>{PackageNameToShow(app.selectedPackage.properties.PackageName)}.</b></p> <p>{langTranslateApp.letstarttxt}</p> <div class="clearfix"></div> <div class="stream-button-group"><a href="javascript:void(0)" class="button-dvs" onclick="{OnSkipSmartcard}" role="button" tabindex="0">{langTranslateApp.createactxt} </a></div> </div> </div> <div class="sm-box-two"> <div class="stream_wrapper"> <h4>{langTranslateApp.Existingcustomer}</h4> <p>{langTranslateApp.readytxt} <b>{PackageNameToShow(app.selectedPackage.properties.PackageName)}</b> {langTranslateApp.ontotxt} <b>{langTranslateApp.currentactxt}</b> </p> <p>{langTranslateApp.letseetxt}</p> <form> <div class="already-smart-card-section"> <label>{langTranslateApp.typesm}</label> <div class="already-smart-card-input"><input id="findSmartcardTxt" class="optional_smartcard form-control" placeholder="e.g. XXX XXX XXXX" maxlength="10" onkeyup="{OnFindSmartcardTxtKeyUp}" style="color:#000"><span class="green-tick" disabled="{!enableFindSmartcard}"></span></div> <!--<div class="already-smart-card-button"></div> --> </div> <div if="{findSmarcardError}" class="resend-otp resend-otp-02"> <p style="color:red!important">{errorMsg}</p> </div> <div class="clearfix"></div> <div class="stream-button-group findsmartcardbuttongroup"><a href="javascript:void(0)" class="button-dvs findsmartcardbutton" onclick="{OnFindSmartcard}" disabled="{!enableFindSmartcard}">{langTranslateApp.findsm}</a></div> </form> </div> </div> </div> </div> <div if="{state == \'StartWatchingScreen\'}" class="fourStepToWatchDVS"> <div class="stepToWatchWrapper"> <div class="stepToWatchHeading"> <h4>{titleWatchScreen}</h4> </div> <ul class="dvs-progress progressbar progress-change-package"> <li class="icons-progress icon-icon-package active"> <div class="step_description"><span>{langTranslateApp.dvsprogresspackage1} <br>{langTranslateApp.dvsprogresspackage2}</span> </div> </li> <li class="icons-progress icon-icon-login"> <div class="step_description"><span>{langTranslateApp.dvsprogressaccount1}<br>{langTranslateApp.dvsprogressaccount2}</span> </div> </li> <li class="icons-progress icon-icon-credit-card icon-credit-card-circle" if="{!app.isProMigration}"> <div class="step_description"> <span>{langTranslateApp.dvsprogresspayment1}<br>{langTranslateApp.dvsprogresspayment2}</span> </div> </li> <li class="icons-progress icon-icon-watch" if="{!app.isProMigration}"> <div class="step_description"><span>{langTranslateApp.dvsprogressstreaming1}<br>{langTranslateApp.dvsprogressstreaming2}</span> </div> </li> </ul> <div style="clear:both"> </div> <div class="stepToWatchBody" if="{SelectedPackageSummary}"> <div class="Pay-summary-dvs-flow {selectedPackage.properties.Code}"> <div class="package-info-graphic"> <div class="dvs-change-package-item"> <div class="vs-change-package-item-image backgroun-img bg-holder"></div> <div class="vs-change-package-item-logo"> <span class="icon-pack icon-{selectedPackage.properties.Code} icon-"></span> <i class="icon icon-streaming-no-circle"></i> </div> <div class="package-channel-count"> <p class="channel_numbers"><b>{selectedPackage.properties.ChannelCount}</b></p> <p>{langTranslateApp.dvschannels}</p> </div> </div> </div> <div class="package-info-text"> <p>{langTranslateApp.dvstitlepackage}:<b> {PackageNameToShowOnLanding(selectedPackage.properties.PackageNameToShow)}</b></p> <p >{langTranslateApp.dvsmptxt}:<b if="{app.isProMigration}">{langTranslateApp.promigrationDiscounttxt}</b> <b if={dstvApp.countryabbreviation!="et"&&!app.isProMigration}>{selectedPackage.properties.Currency+" "+selectedPackage.properties.Price} </b><b if={dstvApp.countryabbreviation=="et"&&!app.isProMigration}>{selectedPackage.properties.localPrice.currency+" "+selectedPackage.properties.localPrice.price.toFixed()} </b></p> <p>{langTranslateApp.dvsdecoder}:<b> {langTranslateApp.dvsnotreqtxt}</b></p> <div class="package-checkout-button" style="z-index: 999"><a disabled="{!enableButton}" href="javascript:void(0);" onclick="{ShowPackageSlider}" class="edit-package-btn button-dvs" style = "display:none">{langTranslateApp.dvspackagebtn}</a><a disabled="{!enableButton}" href="javascript:void(0);" onclick="{OnConnectSignUp}" class="button-dvs continue-checkout">{langTranslateApp.dvscontinuebtn}</a> </div> </div> </div> </div> <div class="Edit-stepToWatch" if="{TogglePackageSlider}"> <div class="row"> <div class="col-lg-12 mt-2"> <span class="dvs-text select-new-pack" style="display:none">{langTranslateApp.dvschangepackage}</span> </div> </div> <div class="row dvs-package-slider-new" if="{TogglePackageSlider}"> <div class="box {package.title}-bx" each="{package, index in dvsPackages}"> <div class="package-slider homepage-decoder-slider"> <div class="slide" tabindex="0"> <div class="scene"> <div class="card"> <div class="card-face front" style="background-color: #000000"> <div class="bg-holder"></div> <div class="desc"> <div class="heading heading-white"><i class="icon-pack icon-{package.properties.Code}"></i><i class="icon icon-streaming-no-circle"></i> </div> <strong style="color:#ffffff"><span class="channelNoStyle"> {package.properties.ChannelCount} </span></strong> <span class="channelWordStyle" style="color:#ffffff">{langTranslateApp.dvschannels}</span> </div> <div class="packageCard-Footer"> <span class="txt"> {langTranslateApp.dvsfrom}</span> <div class="lowholdFooter"> <span class="pricePkgFooter"> {dstvApp.countrycurrency.toUpperCase() + " "+package.properties.Price} </span> <span class="priceLetterPkgFooter">P/m </span><a class="btn-view btn-view-white viewMoreBtnPkgFooter" href="{package.properties.ProductMoreLink}" target="_blank"> {langTranslateApp.dvsmoreinfo} </a> <a class="mobViewMoreBtnPkgFooter bg-gradient-45 arrow-font-color" tabindex="0" href="{package.properties.ProductMoreLink}" target="_blank"><span class="icon-ico-arrow-next"></span></a></div> </div> </div> <div class="card-face back" style="background-color: #000000"> <div class="bg-holder"></div> <div class="desc"> <button class="icon-icon-close" tabindex="0"> </button> <div class="body-wrap" style="color:#ffffff"> <!--<span style="color:#ffffff" class="back-title">FEATURES</span>--> <tag-raw content="{package.properties.PackageFeatures}"></tag-raw> </div> <div class="low-hold"> <div class="pull-left hide"> <span class="jcf-checkbox jcf-unchecked"><span></span> <input id="checkbox-{package.title}" class="checkbox-custom" name="checkbox-{package.title}" type="checkbox" onclick="{OnComparePackage}"></span><label for="checkbox-{package.title}" class="checkbox-custom-label">{langTranslateApp.Comparetxt}</label></div> <a id="know-more-{package.title}" href="javascript:;" class="btn-view track_compareslider btn-getitnow-white" onclick="{OnPackageSelect}"> {langTranslateApp.dvsgetnow} </a> </div> </div> </div> </div> </div> </div> </div> </div> </div> <div class="backtofourstep"><a href="javascript:;" class="dvs-btn" onclick="{BackDvSPackageHome}">{langTranslateApp.dvsback}</a></div> </div> </div> </div> <tag-download-summary></tag-download-summary> <div class="clearfix"></div></div>','','',function(opts){var self=this;self.isProMigration=app.isProMigration?"active":"";self.showMaxLoaded=true;self.loadingMsgs={};self.state='InitialScreen';self.loaderMessage='Please wait...'
self.salutation='';self.name='';self.surname='';self.Error424Count=0;self.enableFindSmartcard=false;self.SelectedPackageSummary=true;self.TogglePackageSlider=false;self.hideIdStatus=false;self.webUniDomain="https://www.dstv.com/"
let ddlSalutation='#ddlSalutation';let firstname='#dvs-firstname';let surname='#dvs-surname';let ddlProvince='#ddlProvince';let ddlCity='#ddlCity';let btnContinuePay='#btnContinuePay';let percent=0;let confirmSalutation='#salutation';let confirmFirstName='#firstName';let confirmLastName='#lastName';let confirmPhonenumber='#phoneNumber';let confirmEmailAddress='#emailAddress';self.resendTimer=0;self.skipOtp=false;self.titleWatchScreen=langTranslateApp.dvseasysteps;self.titleWatchScreen=app.isProMigration?langTranslateApp.dvs3easysteps:langTranslateApp.dvseasysteps;self.isOverrideEmail=false;self.enableButton=dstvApp.DsoPackagePricing?false:true;let previousPercent=1;self.percent=1;self.flag={"CONNECT_ACCOUNT":false,"CUSTOMER_CREATION":false,"SMARTCARD_LOOKUP":false,"LINK_DEVICE":false,"LINK_PACKAGE":false,"GET_AND_ACCEPT_QUOTE":false,};self.on('before-mount',function(){setTimeout(function(){if(loaders)
$.each(loaders,function(index,value){loaders[index].loaderDesc=self.removeTags(loaders[index].loaderDesc);});},4000);setTimeout(function(){$("#dvsJourneyTag").parents("#wrapper").removeAttr("style").addClass("dvs-bg");app.isProMigration?$("#dvsJourneyTag").parents("#wrapper").removeAttr("style").addClass("isProMigration"):"";});const urlParams=new URLSearchParams(window.location.href);if(urlParams.has("access_token")&&urlParams.has("id_token")){app.access_token=self.access_token=urlParams.get("access_token");app.id_token=self.id_token=urlParams.get("id_token");app.tracking_id=urlParams.get("tracking_id");self.expires_in=urlParams.get("expires_in");dstvApp.decommissionedCountries.includes(dstvApp.countryabbreviation)?"":window.history.pushState({},document.title,window.culture+"/mydstv-account");}
self.access_token=app.access_token
self.id_token=app.id_token
self.isDvSJourney=self.access_token&&dstvApp.DvsCountries.includes(dstvApp.countryabbreviation);if(self.isDvSJourney){if(self.access_token){sessionStorage.setItem('connectToken',self.access_token);sessionStorage.setItem('id_token',self.id_token);self.ExternalLogin();}}
else if(self.access_token){let uri=window.location.href.toString();if(uri.indexOf("#")>0){let clean_uri=uri.substring(0,uri.indexOf("#"));window.history.replaceState({},document.title,clean_uri);}}
if(window.reloadData&&app.isDVSJourney){app.isDVSJourney=false;window.SessionSave("app",app);riot.update();history.go(0);return;}
if(app.isDVSJourney){document.title=langTranslateApp.pdftitle;}
if(app.screen&&app.screen.toLowerCase()=='pay'){self.state='PayScreen';self.update();return;}
self.SetDualCurrencyFlag();self.CheckJourney();self.update();self.ScrollTop();});self.on('mount',function(){if(!app.isDVSJourney){return;}
if(self.isDvSJourney){self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading1;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg1;self.ShowLoader(self.loadingMsgs,'preloader');document.title=langTranslateApp.pdftitle;}
if(app.isConnectLogin)
$('.dropdown').show();else
$('.dropdown').hide();$('#newLogoutLink').click(function(){site.trigger('logout');if(!app.isProMigration)
window.location=dstvApp.DvsJourneyStartLink+'&dvslogout=1';else window.location=dstvApp.DvsJourneyStartLink+'&dvslogout=1&&tid=cHJvbWlncmF0aW9u';})});self.onCurrencyToggle=function(e){let currencyToggleStatus=e.currentTarget.checked;if(currencyToggleStatus!==undefined){site.factory.SetCurrency(currencyToggleStatus,dstvApp.countryabbreviation);}
self.showHidePackagePrices();}
self.showHidePackagePrices=function(){if(app.dualCurrencyApplicable&&dstvApp.countrycurrency=='usd'){$('.usd').show();$('.etb').hide();}else{$('.usd').hide();$('.etb').show();}
self.update();}
self.CheckJourney=function(){self.journey=new URLSearchParams(window.location.search).get('journey');self.selectedProductCode=new URLSearchParams(window.location.search).get('product');app.isProMigration?self.selectedProductCode='PREMOTT':""
if(self.selectedProductCode&&self.selectedProductCode!==app.selectedProductCode){app.selectedProductCode=self.selectedProductCode;window.SessionSave("app",app);}
setTimeout(()=>{if(app.applySignIn&&app.applySignIn==1&&self.journey&&self.journey.toLowerCase()=='dvs'){app.applySignIn=0;window.SessionSave("app",app);}},1000);self.isResumeDvsJourney=app.isResumeDVSJourney;if(app.dvsPackages&&app.selectedProductCode)
app.selectedPackage=app.dvsPackages.filter(x=>x.properties.Code==app.selectedProductCode)[0];if(app.isDVSJourney&&!self.isResumeDvsJourney&&!app.isConnectLogin){dstvApp.dvsNoContentDependency?setTimeout(()=>{self.configPackagesSuccess(dstvApp.packages);},1000):self.GetUmbracoDVSPackages();self.state=dstvApp.dvsSkipLandingPage?'preloader':'StartWatchingScreen';}
else if(app.isDVSJourney&&self.isResumeDvsJourney&&app.selectedProductCode){self.GetUmbracoDVSPackages();self.state='WelcomeBackScreen';self.isResumeDvsJourney=false;}
else{self.state='EnterSmartcardScreen';}
if(app.selectedProductCode)
dstvApp.DvsJourneyStartLink=app.selectedProductCode?dstvApp.DvsJourneyStartLink+app.selectedProductCode:dstvApp.DvsJourneyStartLink;window.SessionSave("app",app);self.update();return;}
self.configPackagesSuccess=function(data){self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading6;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg6;self.ShowLoader(self.loadingMsgs,'preloader');self.ScrollTop();self.update();self.state='StartWatchingScreen'
self.currState=self.state;console.log('Account : Config packages fetching completed');self.umbracopackages=data;self.umbracopackages=self.umbracopackages.filter(x=>x.properties.Code.toLowerCase().includes('ott'));app.dvsPackages=self.dvsPackages=self.uniUmbracopackages=self.umbracopackages
self.selectedPackage=app.dvsPackages.filter(x=>x.properties.Code==app.selectedProductCode)[0];if(!self.selectedPackage){self.selectedPackage=app.dvsPackages.filter(x=>x.properties.Code=='PREMOTT')[0];app.selectedProductCode='PREMOTT'
window.SessionSave("app",app);}
app.dvsPackages.map((package)=>{try{package.class='Package';package.properties.Currency=dstvApp.countrycurrency.toUpperCase();return package;}
catch(e){console.log('DVS : Exception occured while fetching Unification Umbraco Packages');}})
self.FetchPackagePricing();}
self.checkConnectStatus=function(){self.InitializeConnectDetails();if(app.currentStage&&app.currentStage>0&&app.currentStage<9){if(self.IsOTPValidationRequired&&!self.IsOTPVerified)
self.InitializeOTPScreen();else
self.ResumeDropoff();}
else{if(app.connectCustomerDetails.AgreementId&&!isNaN(app.connectCustomerDetails.AgreementId)&&app.connectCustomerDetails.AgreementId>0){console.log('DVS : Agreement is Linked');self.skipOtp=true;self.FindSubscriptionDetails();}
else{console.log('DVS : Agreement not Linked');self.state='EnterSmartcardScreen';}}
self.update();}
self.onDashActivateShowmax=function(){if(app.isDVSJourney){$('#loader').show()
app.showShowmaxPopup=true;window.SessionSave("app",app);window.ManageAccount()}
else{$('#showMaxPopup').modal('hide')
window.HandleActiveTab("showMore");riot.mount('tag-showmax-atb',{showActivate:true,showComponent:true});}}
self.getShowmaxDiscountInfo=function(){if(dstvApp.EnableSecurityAuth){let url=dstvApp.SecurityAuthBaseUrl+`/apishowmax/api/v1/Showmax/GetShowmaxDiscount?Country=${dstvApp.country}&BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}`;site.factory.Get(url,null,self.onGetShowmaxDiscSuccess,self.onGetShowmaxDiscError,false,false,true);}else{site.factory.GetJWT().then(function(token){self.token=token;let url=dstvApp.DSOAPIUrl+`/apishowmax/api/v1/Showmax/GetShowmaxDiscount?Country=${dstvApp.country}&BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}`;site.factory.Get(url,self.token,self.onGetShowmaxDiscSuccess,self.onGetShowmaxDiscError);});}}
self.onGetShowmaxDiscSuccess=function(data){console.log('Showmax : Fetch Showmax discount data success');self.showmaxDiscountPercent=0;app.showmaxDiscountValue=0;if(data&&data.length>0){self.showmaxDiscountInfo=data.filter(x=>x.name.split('-')[0].trim()==self.selectedPackage.properties.Code);if(self.showmaxDiscountInfo&&self.showmaxDiscountInfo.length>0)
self.showmaxDiscountPercent=self.showmaxDiscountInfo[0].discountValue;else
self.showmaxDiscountPercent=0;app.showmaxDiscountValue=self.showmaxDiscountPercent;self.update();}}
self.onGetShowmaxDiscError=function(err){console.log('Showmax : Error on fetching Showmax discount data');}
self.InitializeConnectDetails=function(){self.connectEmail=app.connectCustomerDetails.PersonalDetail.Email
self.connectMobile=`+ ${app.connectCustomerDetails.PersonalDetail.Mobile.CountryCode} ${app.connectCustomerDetails.PersonalDetail.Mobile.Number}`
if(!app.connectCustomerDetails.PersonalDetail)
app.connectCustomerDetails.PersonalDetail={};app.connectCustomerDetails.PersonalDetail.FirstName=app.connectCustomerDetails.PersonalDetail.FirstName||app.name
app.connectCustomerDetails.PersonalDetail.Surname=app.connectCustomerDetails.PersonalDetail.Surname||app.surname;app.connectCustomerDetails.PersonalDetail.Title=app.connectCustomerDetails.PersonalDetail.Title||app.salutation;window.SessionSave("app",app);self.update();}
self.ExternalLogin=function(){console.log('Linked Customer Data : Fetching linked customer data...');self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading1;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg1;self.ShowLoader(self.loadingMsgs,'preloader');self.update();try{if(dstvApp.EnableSecurityAuth){let url=`${dstvApp.SecurityAuthBaseUrl}apilogin/api/v1/Login/ExternalLogin?BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}&Country=${dstvApp.country}&AccessToken=${self.access_token}`;site.factory.Get(url,null,self.onExternalLoginSuccess,self.onExternalLoginError,true,false,true)}else{let url=`${dstvApp.DSOAPIUrl}apilogin/api/v1/Login/ExternalLogin?BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}&Country=${dstvApp.country}&AccessToken=${self.access_token}`;site.factory.GetJWT().then(function(token){self.token=token;site.factory.Get(url,self.token,self.onExternalLoginSuccess,self.onExternalLoginError,true)})}}
catch(e){console.log('DvS - External Login - Exception occured :'+e)
self.state='showErrorGeneric';self.errorMessage='Something went wrong. Please try after sometime.';}}
self.onExternalLoginSuccess=function(data){console.log('Customer Details : fetched Customer details completed')
self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading1;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg1;self.ShowLoader(self.loadingMsgs,'preloader');app.isConnectLogin=true;app.applySignIn=0;$('.dropdown').show();app.customernumber=data.CustomerNumber||parseInt(data.ConnectCustomerDetails.CustomerNumber||app.customernumber||0);data.ConnectCustomerDetails.CustomerNumber=app.customernumber;self.currentStage=data.CurrentStage;self.searchedSmartcardNumber=data.SearchedSmartcardNumber;self.IsOTPValidationRequired=data.IsOTPValidationRequired;app.searchedSmartcardNumber=data.SearchedSmartcardNumber;app.currentStage=data.CurrentStage;window.SessionSave("app",app);if(localStorage['selectedPackage']||true){app.isDVSJourney=true;app.connectCustomerDetails=data.ConnectCustomerDetails;app.connectCustomerDetails.AccessToken=self.access_token;app.connectCustomerDetails.PersonalDetail=data.PersonalDetail||(app.customerDetails?app.customerDetails.PersonalDetail:null);app.connectCustomerDetails.IsOTPVerified=self.IsOTPVerified=data.IsOTPVerified;if(!app.connectCustomerDetails.PersonalDetail){let countryCode=data.ConnectCustomerDetails.MobileNumber.replace('+','').slice(0,3)
let mobileNumber=data.ConnectCustomerDetails.MobileNumber.replace('+','').slice(3)
if(countryCode.trim().substring(0,2)==27){countryCode=data.ConnectCustomerDetails.MobileNumber.replace('+','').slice(0,2)
mobileNumber=data.ConnectCustomerDetails.MobileNumber.replace('+','').slice(2)}
app.connectCustomerDetails.PersonalDetail={}
app.connectCustomerDetails.PersonalDetail.Email=data.ConnectCustomerDetails.Email
app.connectCustomerDetails.PersonalDetail.Mobile={CountryCode:countryCode,Number:mobileNumber};}
else{if(app.customerDetails&&app.customerDetails.ListOfEmail.length>0&&app.customerDetails.ListOfPhoneNumber.length>0){let mobileNumberList=app.customerDetails.ListOfPhoneNumber.filter(x=>x.Type=='Mobile');let mobileNumberData=mobileNumberList&&mobileNumberList.filter(x=>x.IsPrimary)[0]?mobileNumberList.filter(x=>x.IsPrimary)[0]:mobileNumberList.filter(x=>x.IsPrimary!==true)[0];let mobileNum=mobileNumberData?mobileNumberData.Number:'';let code=mobileNumberData?mobileNumberData.CountryCode:'';app.connectCustomerDetails.PersonalDetail.Email=app.customerDetails.ListOfEmail[0].Email;app.connectCustomerDetails.PersonalDetail.Mobile={CountryCode:code,Number:mobileNum};}
else{let mobileNumberList=data.ListOfPhoneNumber.filter(x=>x.Type=='Mobile');let mobileNumberData=mobileNumberList&&mobileNumberList.filter(x=>x.IsPrimary)[0]?mobileNumberList.filter(x=>x.IsPrimary)[0]:mobileNumberList.filter(x=>x.IsPrimary!==true)[0];let mobileNum=mobileNumberData?mobileNumberData.Number:'';let code=mobileNumberData?mobileNumberData.CountryCode:'';app.connectCustomerDetails.PersonalDetail.Email=data.ListOfEmail&&data.ListOfEmail.length>0?data.ListOfEmail[0].Email:'';app.connectCustomerDetails.PersonalDetail.Mobile={CountryCode:code,Number:mobileNum};}}
app.ConnectEmailData=app.connectCustomerDetails.PersonalDetail.Email;app.ConnectMobileData={Code:app.connectCustomerDetails.PersonalDetail.Mobile.CountryCode,Number:app.connectCustomerDetails.PersonalDetail.Mobile.Number};window.SessionSave("app",app);self.isEmailAvailable=app.connectCustomerDetails.PersonalDetail.Email?true:false;self.isMobileAvailable=app.connectCustomerDetails.PersonalDetail.Mobile.Number?true:false;}
else{$("#loginRetryPrompt").html(`<span class="error-note">${langTranslateApp.customerNotFoundMsg} </span>`);self.retryButtonShown=true;}
self.validateEmails();self.update();}
self.onExternalLoginError=function(data){console.log('Customer Details : fetched Customer details Failed')
if(data.responseJSON&&data.responseJSON.StatusCode==404&&data.responseJSON.Message.includes("Customer not found")){if(true){app.isDVSJourney=true;window.SessionSave("app",app);window.location=dstvApp.DashboardURL;}
else{$("#loginRetryPrompt").html(`<span class="error-note">${langTranslateApp.customerNotFoundMsg} </span>`);self.retryButtonShown=true;}
return;}
else{self.state='showError500';}
self.update();}
self.ResumeDropoff=function(){console.log('DvS: Resuming Drop off journey');if(app.currentStage==1){if(app.searchedSmartcardNumber&&!app.connectCustomerDetails.AgreementId){self.findSmartcardTxtValue=app.searchedSmartcardNumber;self.FindCustomerBySmartcard();}
else if(app.connectCustomerDetails.AgreementId&&!isNaN(app.connectCustomerDetails.AgreementId)&&app.connectCustomerDetails.AgreementId>0){console.log('DVS : Agreement is Linked');self.skipOtp=self.IsOTPValidationRequired&&!self.IsOTPVerified?false:true;self.FindSubscriptionDetails();}
else{console.log('DVS : Agreement not Linked');self.state='EnterSmartcardScreen';}}
else if(app.currentStage==2||app.currentStage==3){self.skipOtp=self.IsOTPValidationRequired&&!self.IsOTPVerified?false:true;self.InitializeOrConfirmation();}
else{self.skipOtp=self.IsOTPValidationRequired&&!self.IsOTPVerified?false:true;self.ProcessCreateCustomer();}}
self.validateEmails=function(){if(dstvApp.isDvsFieldTrials&&dstvApp.dvsSofLaunchCountries.includes(dstvApp.countryabbreviation)&&!app.isProMigration){if(self.state!=='loading')
self.ShowLoader('Please wait...');fetch(dstvApp.targetDomain+"/api-services/dvs-trials-email-list/ujson?select=EmailId&cdv="+(new Date().getTime())).then(response=>response.json()).then(commits=>self.OnGetFieldTrialEmailSuccess(commits)).catch(error=>self.OnGetFieldTrialEmailError(error));}
else{self.checkConnectStatus();}}
self.OnGetFieldTrialEmailSuccess=function(data){console.log('Fetching field trial emails successful');if(data.properties.EmailId&&data.properties.EmailId.replace(/\s/g,'').length>0&&!self.ContainsExactWord(data.properties.EmailId,app.connectCustomerDetails.Email)){self.state='Unauthorized';app.isConnectLogin=false;window.SessionSave("app",app);self.update();}
else{self.checkConnectStatus();}}
self.OnGetFieldTrialEmailError=function(err){console.log('Error in fetching field trial emails');self.state='showError500';self.validateEmailsRetry=true;self.update();}
self.ContainsExactWord=function(emailList,compareEmail){var emailIds=emailList.replace(/\s/g,'').split(",");for(var i=0;i<emailIds.length;++i){if(emailIds[i].toLowerCase()===compareEmail.toLowerCase().trim()){return true;break;}}
return false;}
self.OnSkipSmartcard=function(){self.customerBySmartcardData=undefined;app.connectCustomerDetails.PersonalDetail.FirstName=undefined;app.connectCustomerDetails.PersonalDetail.Surname=undefined;self.smartcard='';self.customerNumber=app.connectCustomerDetails.CustomerNumber=0;app.connectCustomerDetails.PersonalDetail.Email=app.ConnectEmailData;app.connectCustomerDetails.PersonalDetail.Mobile.CountryCode=app.ConnectMobileData.Code;app.connectCustomerDetails.PersonalDetail.Mobile.Number=app.ConnectMobileData.Number;window.SessionSave("app",app);self.state='InitialScreen';self.skipOtp=true;self.update();$('select#ddlSalutation').on('change',function(){$(this).addClass('placeholder');})}
self.OnFindSmartcard=function(){if(!self.enableFindSmartcard)
return;self.findSmartcardTxtValue=$("#findSmartcardTxt").val();if(app.searchedSmartcard&&app.searchedSmartcard!==self.findSmartcardTxtValue.trim()&&app.connectCustomerDetails.IsOTPVerified){app.connectCustomerDetails.IsOTPVerified=false;window.SessionSave("app",app);}
self.FindCustomerBySmartcard();}
self.OnFindSmartcardTxtKeyUp=function(e){e.which==13&&self.enableFindSmartcard?self.FindCustomerBySmartcard():self.EnableFindSmartcardButton();}
self.EnableFindSmartcardButton=function(){let val=$("#findSmartcardTxt").val().trim();self.enableFindSmartcard=val.length>=10;if(!self.enableFindSmartcard){self.findSmarcardError=true;self.errorMsg=langTranslateApp.Entersmartcard}
else{self.findSmarcardError=false;}
self.update();}
self.FindCustomerBySmartcard=function(){console.log('DVS : Finding customer by smartcard...');self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading3;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg3;self.ShowLoader(self.loadingMsgs,'preloader');try{if(dstvApp.EnableSecurityAuth){let url=`${dstvApp.SecurityAuthBaseUrl}apilogin/api/v1/Login/ExternalLogin?BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}&Country=${dstvApp.country}&AccessToken=${app.connectCustomerDetails.AccessToken}&SmartcardNumber=${self.findSmartcardTxtValue}`;site.factory.Get(url,null,self.FindCustomerBySmartcardSuccess,self.FindCustomerBySmartcardError,true,false,true)}else{let url=`${dstvApp.DSOAPIUrl}apilogin/api/v1/Login/ExternalLogin?BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}&Country=${dstvApp.country}&AccessToken=${app.connectCustomerDetails.AccessToken}&SmartcardNumber=${self.findSmartcardTxtValue}`;site.factory.GetJWT().then(function(token){self.token=token;site.factory.Get(url,self.token,self.FindCustomerBySmartcardSuccess,self.FindCustomerBySmartcardError,true)})}}
catch(e){console.log('DvS - Exception occured at - External Login 2nd call on Find smartcard :'+e)
self.state='showErrorGeneric';self.errorMessage='Something went wrong. Please try after sometime.';}
self.ScrollTop();}
self.FindCustomerBySmartcardSuccess=function(data){console.log('DVS : Customer found');self.customerBySmartcardData=data;if(data&&data.PersonalDetail){self.salutation=data.PersonalDetail.Title
self.name=data.PersonalDetail.FirstName;self.surname=data.PersonalDetail.Surname;self.customerNumber=data.CustomerNumber;self.smartcard=app.smartcard=app.searchedSmartcard=self.findSmartcardTxtValue;window.SessionSave("app",app);let emailID=data.ListOfEmail!=null?data.ListOfEmail[0]:'';emailID=emailID?emailID.Email:'';let mobileNumberList=data.ListOfPhoneNumber.filter(x=>x.Type=='Mobile');let mobileNumberData=mobileNumberList&&mobileNumberList.filter(x=>x.IsPrimary)[0]?mobileNumberList.filter(x=>x.IsPrimary)[0]:mobileNumberList.filter(x=>x.IsPrimary!==true)[0];let mobileNum=mobileNumberData?mobileNumberData.Number:'';app.connectCustomerDetails.PersonalDetail.Email=self.connectEmail=emailID;app.connectCustomerDetails.PersonalDetail.Mobile.Number=mobileNum;app.connectCustomerDetails.PersonalDetail.Mobile.CountryCode=mobileNumberData?(mobileNumberData.CountryCode).replace('+',''):dstvApp.countryCode;self.connectMobile=`+ ${app.connectCustomerDetails.PersonalDetail.Mobile.CountryCode} ${app.connectCustomerDetails.PersonalDetail.Mobile.Number}`
self.FindSubscriptionDetails();}
else{self.customerBySmartcardData=null;self.findSmarcardError=true;self.errorMsg=langTranslateApp.Invalidsm;$("#findSmartcardTxt").focus();self.enableFindSmartcard=false;self.state='EnterSmartcardScreen';}
self.update();}
self.FindCustomerBySmartcardError=function(err){console.log('DVS : Invalid smartcard number');console.log(err);if(err&&err.responseJSON&&err.responseJSON.StatusCode==500){self.state='showError500';self.loginRetry=true;}
else{self.findSmarcardError=true;self.errorMsg=langTranslateApp.Invalidsm;$("#findSmartcardTxt").focus();self.enableFindSmartcard=false;self.state='EnterSmartcardScreen';}
self.update();}
self.FindSubscriptionDetails=function(){console.log('DVS : Fetching subscription details...');self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading3;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg3;self.ShowLoader(self.loadingMsgs,'preloader');try{if(dstvApp.EnableSecurityAuth){let url=dstvApp.SecurityAuthBaseUrl+`/apiviewsubscription/api/v1/Subscription?country=${dstvApp.country}&customerNumber=${self.customerNumber||app.customernumber}&BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}`;site.factory.Get(url,null,self.FindSubscriptionDetailSuccess,self.FindSubscriptionDetailError,false,true,true);}else{site.factory.GetJWT().then(function(token){let url=dstvApp.DSOAPIUrl+`/apiviewsubscription/api/v1/Subscription?country=${dstvApp.country}&customerNumber=${self.customerNumber||app.customernumber}&BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}`;site.factory.Get(url,token,self.FindSubscriptionDetailSuccess,self.FindSubscriptionDetailError);});}}
catch(e){console.log('DvS - Fetching subscription details - Exception occured :'+e)
self.state='showErrorGeneric';self.errorMessage='Something went wrong. Please try after sometime.';}
self.ScrollTop();}
self.FindSubscriptionDetailSuccess=function(data){console.log('DVS : Fetching subscription details completed');self.viewSubscriptionData=data;self.isEmailAvailable=app.connectCustomerDetails.PersonalDetail.Email?true:false;self.isMobileAvailable=app.connectCustomerDetails.PersonalDetail.Mobile.Number?true:false;if(app.connectCustomerDetails.AgreementId&&!isNaN(app.connectCustomerDetails.AgreementId)&&app.connectCustomerDetails.AgreementId>0&&app.currentStage>1)
self.ProcessViewSubscriptionData();else{self.InitializeOTPScreen();}
self.update();self.ScrollTop();}
self.FindSubscriptionDetailError=function(error){console.log('DVS : Error in fetching subscription details');console.log(error);if(error.responseJSON.StatusCode==404){console.log(error.responseJSON.Message);$("#loginRetryPrompt").html(`<span class="error-note">${langTranslateApp.customerNotFoundMsg} </span>`);self.state='showError500';self.retryButtonShown=true;self.findSubscriptionRetry=true;}
else{self.state='showError500';self.findSubscriptionRetry=true;}
self.update();self.ScrollTop();}
self.LinkCustomerToConnect=function(){console.log('DVS : Activate Streaming Started...');self.ShowLoader('Please wait...');try{let data={country:dstvApp.country,channel:dstvApp.channel,businessUnit:dstvApp.businessunit,accessToken:app.connectCustomerDetails.AccessToken,agreementId:self.agreementId,customerNumber:parseInt(self.customerNumber)};if(dstvApp.EnableSecurityAuth){let url=`${dstvApp.SecurityAuthBaseUrl}/apidvs/api/v1/DvsConnect/LinkCustomerToConnect`;site.factory.Post(url,data,null,self.OnLinkToConnectSuccess,self.OnLinkToConnectError,true,false,false,true)}else{site.factory.GetJWT().then(function(token){let url=`${dstvApp.DSOAPIUrl}/apidvs/api/v1/DvsConnect/LinkCustomerToConnect`;site.factory.Post(url,data,token,self.OnLinkToConnectSuccess,self.OnLinkToConnectError,true)})}}
catch(e){console.log('DvS - Activate Streaming Started - Exception occured :'+e)
self.state='showErrorGeneric';self.errorMessage='Something went wrong. Please try after sometime.';}}
self.OnLinkToConnectSuccess=function(data){console.log('DVS : Success in Activate Streaming');self.state='StreamingActivatedScreen';self.update();}
self.OnLinkToConnectError=function(err){console.log('DVS : Error in Activate Streaming');statusCode=err.responseJSON.StatusCode;if(statusCode==409){console.log('DVS : The entered smartcard is already in use');self.state='showErrorGeneric';self.errorMessage=langTranslateApp.smartcardExist;self.EnterSmartcardRetry=true;}
else if(statusCode==208){console.log('DVS : Service alredy activated');self.state='showMessage208';}
else{self.state='showError500';self.LinkToConnectRetry=true;}
self.update();self.ScrollTop();}
self.OnWatchNow=function(){let url=`${dstvApp.DstvNowURL}#token_type=bearer&access_token=${self.access_token}&expires_in=${self.expires_in}&id_token=${self.id_token}&tracking_id=${app.tracking_id}`;window.open(url,'_blank');}
self.InitializeOTPScreen=function(){console.log('DVS : OTP validation in progress...');if(app.connectCustomerDetails.IsOTPVerified||self.skipOtp){self.OTPVerificationSuccess();}
else{self.enableResend=false;self.enableVerifyOTP=false;self.state='OTPScreen';self.update();if(self.isEmailAvailable&&self.isMobileAvailable)
self.SendOTP();}}
self.PerformTimer=function(){if(self.resendTimer==0){self.resendTimer=30;self.update();self.interval=setInterval(function(){if(self.state=='OTPScreen'&&self.resendTimer==0){self.enableResend=true;clearInterval(self.interval);self.showResendMsg=false;}
else{self.resendTimer-=1;}
self.update()},1000)}}
self.SendOTP=function(){console.log('DVS : Sending OTP...');self.state='OTPScreen';if(!self.selectedPackage&&app.dvsPackages&&app.selectedProductCode)
self.selectedPackage=app.dvsPackages.filter(x=>x.properties.Code==app.selectedProductCode)[0];try{let data={country:dstvApp.country,businessUnit:dstvApp.businessunit,channel:dstvApp.channel,connectId:app.connectCustomerDetails.ConnectId,emailID:app.connectCustomerDetails.PersonalDetail.Email,smartcardNumber:self.smartcard||self.newSmartcard||(self.product?self.product[0].smartcardNumber:''),packageName:self.selectedPackage&&self.selectedPackage.properties?self.selectedPackage.properties.PackageName:'',phoneNumber:{code:'+'+app.connectCustomerDetails.PersonalDetail.Mobile.CountryCode,number:app.connectCustomerDetails.PersonalDetail.Mobile.Number},notificationCategory:["sms"]};if(dstvApp.EnableSecurityAuth){let url=`${dstvApp.SecurityAuthBaseUrl}apidvs/api/v1/DvsOTP/GenerateAndSendOTP`;site.factory.Post(url,data,null,self.OnGenerateOtpSuccess,self.OnGenerateOtpError,false,true,false,true);}else{site.factory.GetJWT().then(function(token){let url=`${dstvApp.DSOAPIUrl}apidvs/api/v1/DvsOTP/GenerateAndSendOTP`;site.factory.Post(url,data,token,self.OnGenerateOtpSuccess,self.OnGenerateOtpError,false,true);})}}
catch(e){console.log('DvS - Send OTP - Exception occured :'+e)
self.state='showErrorGeneric';self.errorMessage='Something went wrong. Please try after sometime.';}}
self.OnGenerateOtpSuccess=function(data){console.log('DVS : OTP Sent');self.allowEnableVerifyOTP=true;self.otpResentMsg=true;setTimeout(()=>{self.otpResentMsg=false;self.showResendMsg=true;self.PerformTimer();},1000)
self.update();}
self.OnGenerateOtpError=function(error){console.log('DVS : Error while sending OTP');console.log(error);statusCode=error.responseJSON.StatusCode;if(statusCode==422){console.log(error.responseJSON.Message);}
else{self.state='showError500';self.generateOtpRetry=true;}
self.update();}
self.Validate=function(){if(self.enableVerifyOTP){console.log('DVS : Verifying OTP...');self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading4;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg4;self.ShowLoader(self.loadingMsgs,'preloader');self.update();try{let data={businessUnit:dstvApp.businessunit,channel:dstvApp.channel,connectId:app.connectCustomerDetails.ConnectId,customerOTP:parseInt(self.otpValue),country:dstvApp.country};if(dstvApp.EnableSecurityAuth){var url=`${dstvApp.SecurityAuthBaseUrl}/apidvs/api/v1/DvsOTP/VerifyOTP`;site.factory.Post(url,data,null,self.OTPVerificationSuccess,self.OTPVerificationError,false,false,true,true);}else{site.factory.GetJWT().then(function(token){var url=`${dstvApp.DSOAPIUrl}/apidvs/api/v1/DvsOTP/VerifyOTP`;site.factory.Post(url,data,token,self.OTPVerificationSuccess,self.OTPVerificationError);})}}
catch(e){console.log('DvS - Verifying OTP - Exception occured :'+e)
self.state='showErrorGeneric';self.errorMessage='Something went wrong. Please try after sometime.';}}}
self.OTPVerificationSuccess=function(data){console.log("DVS : OTP Verification done with success");console.log(data);app.connectCustomerDetails.IsOTPVerified=true;window.SessionSave("app",app);clearInterval(self.interval);self.update();self.ScrollTop();if(self.IsOTPValidationRequired&&!self.IsOTPVerified){self.ResumeDropoff();}
else{if(self.isOverrideEmail){self.InitializeOrConfirmation();}
else{self.ProcessViewSubscriptionData();}}}
self.OTPVerificationError=function(error){console.log("DVS : OTP Verification failed");error=error.responseJSON;self.state='OTPScreen';self.showOtpErrorMsg=true;if(error&&(error.StatusCode==403||error.StatusCode==404)){self.enableVerifyOTP=false;self.allowEnableVerifyOTP=false;if(error.StatusCode==404)
self.otpErrorMsg=langTranslateApp.OTPExpiredtxt;else
self.otpErrorMsg=langTranslateApp.reachlimitOTPtxt;}
else{self.otpErrorMsg=langTranslateApp.InvalidOTPtxt;}
self.enableResend=true;clearInterval(self.interval);self.update();let otp=self.otpValue;$('.otpDigit').each((index,txt)=>{$(txt).val(otp.slice(index,index+1))
$(txt).css('color','red');})}
self.ResendOTP=function(){if(self.enableResend){self.enableResend=false;self.showOtpErrorMsg=false;self.showResendMsg=false;self.resendTimer=0;self.update();$('.otpDigit').each((index,txt)=>{$(txt).val('')})
self.SendOTP();self.EnableVerifyOTPButton();}}
self.IsValidOTP=function(e){let isNumeric=self.IsNumeric(e.key);let isEnterPress=e.which==13;let isbackpress=e.which==8;if(!isNumeric&&!isEnterPress||e.currentTarget.value){e.preventDefault();$(e.currentTarget).focus();if(!isbackpress&&!isEnterPress)return;}
if(isbackpress&&e.currentTarget.value){e.currentTarget.value="";}
else if(isbackpress&&!e.currentTarget.value){let nextElementSibling=e.currentTarget.previousElementSibling
setTimeout(()=>{nextElementSibling.focus()},50);}
else{if(isEnterPress){$('#verifyOtp').is(':disabled')?"":self.onVerifyOTP();return;}
let nextElementSibling=e.currentTarget.nextElementSibling
setTimeout(()=>{nextElementSibling.focus()},50);}
$(e.currentTarget).css('color','#3F4254');self.otpErrorMsg='';setTimeout(()=>{self.enableVerifyOTP=$('#otpTxt1').val()&&$('#otpTxt2').val()&&$('#otpTxt3').val()&&$('#otpTxt4').val()?true:false;self.update();},500);self.update();}
self.EnableVerifyOTPButton=function(){self.otpValue='';$('.otpDigit').each((index,txt)=>{self.otpValue+=$(txt).val().charAt(0);})
if(self.allowEnableVerifyOTP)
self.enableVerifyOTP=self.otpValue.length==4;}
self.ProcessViewSubscriptionData=function(){if(self.smartcard&&self.customerNumber){self.product=self.viewSubscriptionData.filter(x=>x.smartcardNumber==self.smartcard);self.productStatus=self.product&&self.product.length>0&&self.product[0].services.length>0?self.product[0].services.filter(x=>x.type.toUpperCase()=='PRINCIPAL')[0].status:null;if(self.productStatus&&self.productStatus.toUpperCase()=='ACTIVE'){if(!self.agreementId)
self.agreementId=self.product&&self.product[0].agreementId;self.isActive=true;self.state='AccountFoundScreen';}
else if(self.productStatus&&self.productStatus.toUpperCase()=='DISCONNECTED'){self.isActive=false;self.state='AccountFoundScreen';}
else{self.InitializeOrConfirmation();}}
else if(!self.smartcard&&app.connectCustomerDetails.AgreementId){self.agreementId=app.connectCustomerDetails.AgreementId;self.product=self.viewSubscriptionData.filter(x=>x.agreementId==self.agreementId);self.isDvs=self.product&&self.product.length>0&&self.product[0].smartcardName.toUpperCase()=='DVSIUC';self.productStatus=self.product&&self.product.length>0&&self.product[0].services.length>0?self.product[0].services[0].status:null;if(self.productStatus&&self.productStatus.toUpperCase()=='ACTIVE'){self.isActive=true;self.headerText=langTranslateApp.streamenabledtxt;self.state='AlreadyStreamingScreen';}
else if(self.productStatus&&self.productStatus.toUpperCase()=='DISCONNECTED'){self.isActive=false;self.headerText=langTranslateApp.alreadystreamtxt;self.state='AlreadyStreamingScreen';}
else{self.InitializeOrConfirmation();}}
else{}
self.update();}
self.InitializeOrConfirmation=function(){if(self.customerBySmartcardData||(app.connectCustomerDetails.PersonalDetail.FirstName&&app.connectCustomerDetails.PersonalDetail.Surname)){self.state='ConfirmationScreen';self.update();$(confirmSalutation).val(self.salutation||app.connectCustomerDetails.PersonalDetail.Title);$(confirmFirstName).val(self.name||app.connectCustomerDetails.PersonalDetail.FirstName);$(confirmLastName).val(self.surname||app.connectCustomerDetails.PersonalDetail.Surname);}
else{self.state='InitialScreen';}
if(!app.connectCustomerDetails)
app.connectCustomerDetails={};self.update();}
self.ValidateInput=function(e){let isNumeric=self.IsNumeric(e.key);let isEnterPress=e.which==13;if(isNumeric&&!isEnterPress){e.preventDefault();$(e.currentTarget).focus();return;}
self.EnableContinue();}
self.IsNumeric=function(str){return $.isNumeric(str)};self.GetFormattedDate=function(dateString){return site.factory.GetEazyDateFormat(dateString)}
self.ShowLoader=function(msg,state){self.state='loading';if(msg)
self.loaderMessage=msg;if(state)
self.state=state;self.update();}
self.EnableContinue=function(){let sal=$(ddlSalutation).val();let fn=$(firstname).val().trim();let sn=$(surname).val().trim();self.enableContinue=sal&&fn&&sn?true:false}
self.ShowDVSPackageSelection=function(){console.log('DVS : Changing DVS Package');self.state='ChangePackageScreen';console.log('Loading package information, Please wait...');self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading5;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg5;self.ShowLoader(self.loadingMsgs,'preloader');if(!self.dvsPackages)
self.GetUmbracoDVSPackages();else{console.log('DVS : Umbraco DVS Package already loaded');self.InitializePackageSlider();}}
self.GetUmbracoDVSPackages=function(){console.log('Fetching available streaming packages, Please wait...');if(app.dvsPackages!=undefined&&!window.reloadData){console.log('DVS : Umbraco DVS Package already exists');self.enableButton=true;self.dvsPackages=app.dvsPackages;self.selectedPackage=app.dvsPackages.filter(x=>x.properties.Code==app.selectedProductCode)[0];if(!self.selectedPackage){self.selectedPackage=app.dvsPackages.filter(x=>x.properties.Code=='PREMOTT')[0];app.selectedProductCode='PREMOTT'
window.SessionSave("app",app);}
self.InitializePackageSlider();if(self.state=='StartWatchingScreen'&&!self.TogglePackageSlider)
self.analyticsAddToCartFromLanding();dstvApp.dvsSkipLandingPage?self.OnConnectSignUp():""}
else{self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading6;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg6;self.ShowLoader(self.loadingMsgs,'preloader');self.currState=self.state;fetch(dstvApp.UnificationUmbracoUrl+(new Date().getTime())).then(response=>response.json()).then(commits=>self.OnGetPackageSuccess(commits)).catch(error=>self.OnGetPackageError(error));}
self.ScrollTop();self.update();}
self.OnGetPackageSuccess=function(data){console.log('DVS : Umbraco DVS Package loading done.');self.uniUmbracopackages=data.entities;if(self.uniUmbracopackages&&self.uniUmbracopackages.length>0){self.uniUmbracopackages=self.uniUmbracopackages.filter((x=>x.properties.IsOTT)&&(x=>x.properties.Name.toLowerCase().includes(dstvApp.countryabbreviation+' ')));app.dvsPackages=self.dvsPackages=self.uniUmbracopackages.map((package)=>{try{package.class='Package';package.title=package.properties.Code;package.properties.CanCompare=true;package.properties.ChannelCount=package.properties.CompareProductHeading;package.properties.Currency=dstvApp.countrycurrency.toUpperCase();package.properties.PackageFeatures=package.properties.ProductDetail;package.properties.PackageName=package.properties.Code.trim()+' - '+package.properties.ProductName.trim();package.properties.ProductDetail=package.properties.ProductSummary;package.properties.ProductMoreLink=package.properties.Terms;package.properties.PackageNameToShow=self.PackageNameToShow(package.properties.ProductName);return package;}
catch(e){console.log('DVS : Exception occured while fetching Unification Umbraco Packages');}})
self.selectedPackage=app.dvsPackages.filter(x=>x.properties.Code==app.selectedProductCode)[0];if(!self.selectedPackage){self.selectedPackage=app.dvsPackages.filter(x=>x.properties.Code=='PREMOTT')[0];app.selectedProductCode='PREMOTT'
window.SessionSave("app",app);}}
else{self.state='showError500';self.getDvsPackagesRetry=true;self.update();return;}
self.update();window.SessionSave("app",app);self.FetchPackagePricing();}
self.OnGetPackageError=function(err){console.log('DVS : Error in pulling Umbraco DVS Package');self.LogError(err);self.dvsPackages=[];self.state='showError500';self.getDvsPackagesRetry=true;self.update();}
self.FetchPackagePricing=function(){try{if(!dstvApp.DsoPackagePricing)
return;self.currState=self.state;self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading1;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg1;self.ShowLoader(self.loadingMsgs,'preloader');if(dstvApp.EnableSecurityAuth){let url=dstvApp.SecurityAuthBaseUrl+`/apipackageguide/api/v1/PackageGuide/GetPackagePriceDetails?BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}&Country=${dstvApp.country}`;site.factory.Get(url,null,self.FetchPackagePricingSuccess,self.FetchPackagePricingError,false,false,true);}else{site.factory.GetJWT().then(function(token){let url=dstvApp.DSOAPIUrl+`/apipackageguide/api/v1/PackageGuide/GetPackagePriceDetails?BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}&Country=${dstvApp.country}`;site.factory.Get(url,token,self.FetchPackagePricingSuccess,self.FetchPackagePricingError);});}}
catch(e){console.log('DvS - Fetching package pricing from DSO - Exception occured :'+e)
self.state='showErrorGeneric';self.errorMessage='Something went wrong. Please try after sometime.';}}
self.FetchPackagePricingSuccess=function(data){console.log('DvS : Fetching packages data from DSO successful');self.enableButton=true;dstvApp.dvsSkipLandingPage?"":self.state=self.currState;self.modifyPackagesObject(data);if(self.state!=='StartWatchingScreen')
dstvApp.dvsSkipLandingPage?"":self.InitializePackageSlider();if(self.state=='StartWatchingScreen'&&!self.TogglePackageSlider)
self.analyticsAddToCartFromLanding();self.update();dstvApp.dvsSkipLandingPage?self.OnConnectSignUp():""}
self.FetchPackagePricingError=function(err){self.enableButton=true;self.state=self.currState;if(self.state!=='StartWatchingScreen')
self.InitializePackageSlider();if(self.state=='StartWatchingScreen'&&!self.TogglePackageSlider)
self.analyticsAddToCartFromLanding();self.update();}
self.modifyPackagesObject=function(dsoData){self.dvsPackages.map((package)=>{try{let packageCode=package.properties.Code.toLowerCase().trim();let dsoItem=dsoData?dsoData.filter(a=>a.prodUserKey.toLowerCase()==packageCode)[0]:null;package.properties.Price=dsoItem?dsoItem.price.value.toString():'0';if(app.dualCurrencyApplicable)
{package.properties.Price=dsoItem?dsoItem.price.value.toString():'0';package.properties.Currency=dsoItem?dsoItem.price.currency.toString():'USD';package.properties.localPrice={'currency':dsoItem.localPrice.currency,'price':dsoItem.localPrice.amount};}}
catch(e){console.log('Exception occured :'+e)}})
app.dvsPackages=self.dvsPackages=self.dvsPackages.sort(function(a,b){return b.properties.Price-a.properties.Price});self.update();window.SessionSave("app",app);}
self.InitializePackageSlider=function(){console.log('DVS : Umbraco DVS Package slider initialization');if(!self.TogglePackageSlider)
self.state='ChangePackageScreen';else
self.state='StartWatchingScreen';self.update();$(".dvs-package-slider-new").not('.slick-initialized').slick({dots:false,arrows:true,prevArrow:'<button class="slick-prev"><span class="icon-ico-arrow-next"></span></button>',nextArrow:'<button class="slick-next"><span class="icon-ico-arrow-next"></span></button>',infinite:false,slidesToShow:4.2,slidesToScroll:1,focusOnSelect:true,responsive:[{breakpoint:1480,settings:{slidesToShow:4.2,}},{breakpoint:1280,settings:{slidesToShow:3.8,}},{breakpoint:1024,settings:{slidesToShow:2.2,}},{breakpoint:768,settings:{slidesToShow:2.2,}},{breakpoint:480,settings:{slidesToShow:1.3,}},{breakpoint:320,settings:{slidesToShow:1.3,}}]});self.update();jQuery(".dvs-package-slider-new").on('beforeChange',function(event,slick,currentSlide,nextSlide){var flippedSlides=slick.$slides.filter('.is-flipped');if(flippedSlides.length){flippedSlides.removeClass('is-flipped');}});self.ScrollTop();jQuery(".slick-arrow").on("click",function(event){let flippedSlides=jQuery(".dvs-package-slider-new").find('.is-flipped').removeClass('is-flipped');});if((self.state=='StartWatchingScreen'&&self.TogglePackageSlider)||self.state=='ChangePackageScreen')
self.analyticsProductImpression();}
self.OnComparePackage=function(e){let packageValue=e.item.package
if(self.selected1&&self.selected2){if(self.selected1!=packageValue&&self.selected2!=packageValue){e.preventDefault();e.stopImmediatePropagation();return;}}
if(self.selected1==packageValue||self.selected2==packageValue){if(self.selected1==packageValue)
self.selected1=undefined;else
self.selected2=undefined;}
else{if(self.selected1==undefined)
self.selected1=packageValue;else if(self.selected1!=undefined&&self.selected2==undefined)
self.selected2=packageValue;}
if(self.selected1&&self.selected2){self.state='ComparePackageScreen';self.update();riot.mount('tag-compare-packages',{ComparePackage:true,selected1:self.selected1,selected2:self.selected2});}}
self.OnCloseComparePackage=function(){self.selected1=null;self.selected2=null;self.state='ChangePackageScreen';self.ShowDVSPackageSelection();self.update();}
self.OnGetItNow=function(e){if(self.quotes&&self.selectedPackage&&self.selectedPackage.properties.PackageName!=e.item.package.properties.PackageName){self.oldProduct=self.selectedPackage;self.oldPackage=self.selectedPackage.properties.PackageName;self.newPackage=e.item.package.properties.PackageName;self.selectedPackage=e.item.package;self.RejectAndCreateNewQoute();self.analyticsRemoveFromCart(self.oldProduct);self.analyticsAddToCart(self.selectedPackage);}
else{self.selectedPackage=e.item.package;if(self.selectedPackageLost){self.ProcessCreateCustomer();}
else{self.state='PayScreen';}}
self.selectedPackageLost=false;self.update();}
self.BackDvSPackage=function(e){if(self.selectedPackageLost){self.state='InitialScreen';}
else
self.state='PayScreen';self.update();jcf.replaceAll();self.ScrollTop();}
self.BackDvSPackageHome=function(e){self.SelectedPackageSummary=true;self.TogglePackageSlider=false;}
self.BackConfirmScreen=function(){clearInterval(self.interval);self.resendTimer=0;self.showResendMsg=false;self.state='EnterSmartcardScreen';self.update();}
self.ShowInitialScreen=function(){self.state='InitialScreen';self.update();jcf.replaceAll();}
self.OnContinueClick=function(){console.log('DVS : On continue click');self.ScrollTop();if(self.customerBySmartcardData||(app.connectCustomerDetails.PersonalDetail.FirstName&&app.connectCustomerDetails.PersonalDetail.Surname)){self.salutation=self.salutation||app.connectCustomerDetails.PersonalDetail.Title;self.name=self.name||app.connectCustomerDetails.PersonalDetail.FirstName;self.surname=self.surname||app.connectCustomerDetails.PersonalDetail.Surname;self.smartcard=self.smartcard||(self.product&&self.product.length>0?self.product[0].smartcardNumber:'');}
else{self.salutation=$(ddlSalutation).val();self.name=$(firstname).val();self.surname=$(surname).val();self.smartcard=$('#dvs-smartcard').val();}
if(app.selectedProductCode){self.selectedPackage=app.dvsPackages.filter(x=>x.properties.Code==app.selectedProductCode)[0];if(self.selectedPackage&&self.selectedPackage.length&&self.selectedPackage.length>0)
self.selectedPackage=self.selectedPackage[0];self.ProcessCreateCustomer();}
else{console.log('DVS : Package selection lost. Need to show available packages before we proceed');self.selectedPackageLost=true;self.state='ChangePackageScreen';self.ShowDVSPackageSelection();}}
self.OnOverrideEmail=function(){self.isOverrideEmail=true;self.InitializeOTPScreen();}
self.removeTags=function(str){if((str===null)||(str===''))
return false;else
str=str.toString();return str.replace(/(<([^>]+)>)/ig,'');}
self.ProcessCreateCustomer=function(){console.log('DVS : Create customer started...');self.ScrollTop()
self.ShowLoader('Customer onboarding started, Please wait...');self.ShowLoader('Creating your account & fetching the order details, please wait...');self.state='DvsOnboardingLoader';self.update();$(".campaignLoader").slick({prevArrow:'<button class="slick-prev"><div class="icon-ico-arrow-next"></div></button>',nextArrow:'<button class="slick-next"><div class="icon-ico-arrow-next"></div></button>',autoplay:2000,slidesToShow:1,slidesToScroll:1,dots:false,arrows:false,infinite:true,focusOnSelect:true,centerPadding:'30px',responsive:[{breakpoint:1480,settings:{slidesToShow:1,}},{breakpoint:1280,settings:{slidesToShow:1,}},{breakpoint:1024,settings:{slidesToShow:1,}},{breakpoint:768,settings:{slidesToShow:1,}},{breakpoint:480,settings:{slidesToShow:1,}},{breakpoint:320,settings:{slidesToShow:1,}}]});$("#dvs-onboarding-loader").parents("#dvsJourneyTag").removeAttr("style").removeClass("container");try{let mob=app.connectCustomerDetails.PersonalDetail.Mobile.Number;let mobCode=app.connectCustomerDetails.PersonalDetail.Mobile.CountryCode;let customerNumber=parseInt(app.connectCustomerDetails.CustomerNumber||self.customerNumber||0);let smartcard=self.smartcard||self.newSmartcard||self.searchedSmartcardNumber||'';let agreementId=app.connectCustomerDetails.AgreementId;app.salutation=self.salutation||app.connectCustomerDetails.PersonalDetail.Title;app.name=self.name||app.connectCustomerDetails.PersonalDetail.FirstName;app.surname=self.surname||app.connectCustomerDetails.PersonalDetail.Surname;let data={"MetaData":app.isProMigration?atob('cHJvbWlncmF0aW9u'):null,country:dstvApp.country,businessUnit:dstvApp.businessunit,channel:dstvApp.channel,package:self.selectedPackage?self.selectedPackage.properties.PackageName:app.selectedPackage.properties.PackageName,smartcardNumber:smartcard,connectId:app.connectCustomerDetails.ConnectId,accessToken:app.connectCustomerDetails.AccessToken,customerDetails:{MetaData:app.isProMigration?atob('cHJvbWlncmF0aW9u'):null,language:dstvApp.language,customerNumber:customerNumber,listOfPhoneNumber:{code:mobCode,number:mob},listOfEmail:{value:app.connectCustomerDetails.PersonalDetail.Email},personalDetail:{title:app.salutation,firstName:app.name,surname:app.surname}},checkOTPValidation:self.skipOtp?false:true,AgreementId:agreementId&&!isNaN(agreementId)?parseInt(agreementId):0,trackingId:app.tracking_id};if(self.isOverrideEmail)
data.customerDetails.listOfEmail.value=app.connectCustomerDetails.Email;if(dstvApp.EnableSecurityAuth){var url=`${dstvApp.SecurityAuthBaseUrl}/apidvs/api/v1/DvsCustomer/GetOrCreateCustomer`;site.factory.Post(url,data,null,self.OnCreateCustomerSuccess,self.OnCreateCustomerError,true,false,false,true);}else{site.factory.GetJWT().then(function(token){var url=`${dstvApp.DSOAPIUrl}/apidvs/api/v1/DvsCustomer/GetOrCreateCustomer`;site.factory.Post(url,data,token,self.OnCreateCustomerSuccess,self.OnCreateCustomerError,true);})}}
catch(e){console.log('DvS - Create customer started - Exception occured :'+e)
self.state='showErrorGeneric';self.errorMessage='We\'re sorry there was an error processing your request.';}
self.update();self.GetCreateCustomerStatus();}
self.OnCreateCustomerSuccess=function(data){self.selectedPackage=self.selectedPackage?self.selectedPackage:app.selectedPackage
console.log('DVS : Create customer completed');let statusCode=app.statusCode=data.StatusCode;if(statusCode&&statusCode!=201)
$("#dvs-onboarding-loader").parents("#dvsJourneyTag").addClass("container");self.customerRetry=false;data=JSON.parse(data.Message);app.customerNumber=self.customerNumber=data.CustomerNumber;app.smartcard=app.newSmartcard=self.newSmartcard=data.SmartcardNumber;app.dstvNowRedirectUrl=self.dstvNowRedirectUrl=data.DstvNowRedirectUrl;window.SessionSave("app",app);if(statusCode==402){console.log('DVS : Payment required');self.quotes=data.Quote;self.state='PayScreen';}
else if(statusCode==208){console.log('DVS : Service alredy activated');self.state='showMessage208';}
else if(statusCode==200){console.log('DVS : Package Loaded without payment require. sufficient balance case');data=JSON.parse(data.Message);self.state='showMessage208';}
else if(statusCode==201){console.log('DVS : Package Loaded without payment required. sufficient balance case');self.quotes=app.appDataForPdf=data.Quote;self.remainingACB=data.PaymentDetails.Amount
if(dstvApp.countryabbreviation=='et'){self.localPrice=data.LocalCurrency.Amount
self.remainingACBLocal=data.PaymentDetails.LocalCurrency.Amount
app.appDataForPdf.localQuoteAmount=data.LocalCurrency.Amount}
if(dstvApp.country=="tanzania"&&self.quotes.LineItems[0].InvoiceText.includes("Family")){self.quotes.LineItems[0].InvoiceText='DStv Shangwe Streaming Subscription'}else if(dstvApp.country=="tanzania"&&self.quotes.LineItems[0].InvoiceText.includes("Access")){self.quotes.LineItems[0].InvoiceText='DStv Bomba Streaming Subscription'}
self.quotes.LineItems[0].InvoiceText=dstvApp.packages.find(p=>p.properties.Code==app.selectedProductCode).properties.PackageNameToShow;self.financialAccountId=self.quotes.FinancialAccountId;window.SessionSave("app",app);let monthNames=[]
if(dstvApp.language.toLowerCase()=='english'){monthNames=["January","February","March","April","May","June","July","August","September","October","November","December"];}else{monthNames=["janeiro","fevereiro","marÃƒÆ’Ã‚Â§o","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"];}
const d=new Date(self.quotes.LineItems[0].EndDate);let month=monthNames[d.getMonth()];let date=d.getDate();let year=d.getFullYear();self.ValidTillDate=date+'-'+month+'-'+year;self.AnimateProgressBar(self.percent?self.percent:90,100);self.flag.GET_AND_ACCEPT_QUOTE=true;setTimeout(()=>{self.state='SufficientBalanceScreen';$("#dvs-onboarding-loader").parents("#dvsJourneyTag").addClass("container");self.update();self.ScrollTop();jcf.replaceAll();},3000);}
else{console.log('DVS : Create customer completed with unexpected response');console.log(data)}
self.update();jcf.replaceAll();self.ScrollTop();}
self.OnCreateCustomerError=function(err){self.selectedPackage=self.selectedPackage?self.selectedPackage:app.selectedPackage
console.log('DVS : Error while Creating customer');self.LogError(err);statusCode=app.statusCode=err.responseJSON.StatusCode;if(statusCode&&statusCode!=402)
$("#dvs-onboarding-loader").parents("#dvsJourneyTag").addClass("container");if(statusCode&&statusCode==400){console.log('DVS : Create customer completed with unexpected response');self.state='showError500';self.customerRetry=true;self.selectedPackageLost=false;self.update();self.ScrollTop();return;}
let data=JSON.parse(err.responseJSON.Message)
app.customerNumber=self.customerNumber=data.CustomerNumber;app.smartcard=app.newSmartcard=self.newSmartcard=data.SmartcardNumber;app.dstvNowRedirectUrl=self.dstvNowRedirectUrl=data.DstvNowRedirectUrl;app.connectCustomerDetails.IsOTPVerified=self.IsOTPVerified=data.IsOTPVerified;window.SessionSave("app",app);if(statusCode==424){self.state='showError500';if(!self.isRejectQouteJourney)
self.customerRetry=true;}
else if(statusCode==402){if(dstvApp.countryabbreviation=='et'){self.localPrice=data.LocalCurrency.Amount}
self.quotes=data.Quote;if(dstvApp.country=="tanzania"&&self.quotes.LineItems[0].InvoiceText.includes("Family")){self.quotes.LineItems[0].InvoiceText='DStv Shangwe Streaming Subscription'}else if(dstvApp.country=="tanzania"&&self.quotes.LineItems[0].InvoiceText.includes("Access")){self.quotes.LineItems[0].InvoiceText='DStv Bomba Streaming Subscription'}
self.quotes.LineItems[0].InvoiceText=dstvApp.packages.find(p=>p.properties.Code==app.selectedProductCode).properties.PackageNameToShow;let monthNames=[]
if(dstvApp.language.toLowerCase()=='english'){monthNames=["January","February","March","April","May","June","July","August","September","October","November","December"];}else{monthNames=["janeiro","fevereiro","marÃƒÆ’Ã‚Â§o","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"];}
const d=new Date(self.quotes.LineItems[0].EndDate);let month=monthNames[d.getMonth()];let date=d.getDate();let year=d.getFullYear();self.ValidTillDate=date+'-'+month+'-'+year;if(data&&data.CurrentStage=='GET_AND_ACCEPT_QUOTE'){console.log('Inside 402 - Get or create');self.AnimateProgressBar(self.percent?self.percent:90,100);self.flag.GET_AND_ACCEPT_QUOTE=true;setTimeout(()=>{if(!self.isRejectQouteJourney&&data.NewPackage!=data.OldPackage){console.log('DVS : Pending qoute found with diffrent package');self.newPackage=data.NewPackage
self.oldPackage=data.OldPackage
self.state='RejectAndCreateQouteScreen';}
else{if(self.isRejectQouteJourney)
self.isRejectQouteJourney=false;console.log('DVS : Payment required');self.state='PayScreen';}
$("#dvs-onboarding-loader").parents("#dvsJourneyTag").addClass("container");self.update();self.ScrollTop();console.log('Executed quote screen after 5 seconds')
jcf.replaceAll();},3000);}}
else if(statusCode==204){console.log('DVS : Service alredy activated');self.state='showMessage208';}
else if(statusCode==200){console.log('DVS : Package Loaded without payment require. sufficient balance case');data=JSON.parse(data.Message);self.state='showMessage200';}
else if(statusCode==412){console.log('DVS : Searched smartcard is Disconnected.');self.ResponseMessage=data.ResponseMessage;self.state='showMessage412';}
else if(statusCode==403){console.log('DVS : OTP not verified.');self.state='showErrorGeneric';self.errorMessage='OTP is not verified.';}
else{console.log('DVS : Create customer completed with unexpected response');console.log(data.ResponseMessage)
self.state='showError500';self.customerRetry=true;self.selectedPackageLost=false;}
self.update();jcf.replaceAll();self.ScrollTop();}
self.RejectAndCreateNewQoute=function(){console.log('DVS : Reject and create new qoute started...');self.ScrollTop()
self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading5;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg5;self.ShowLoader(self.loadingMsgs,'preloader');try{let data={businessUnit:dstvApp.businessunit,channel:dstvApp.channel,country:dstvApp.country,smartCardNumber:app.smartcard,customerNumber:app.customerNumber,oldPackage:self.oldPackage,newPackage:self.newPackage,connectId:app.connectCustomerDetails.ConnectId,trackingId:app.tracking_id}
self.isRejectQouteJourney=true;if(dstvApp.EnableSecurityAuth){let url=`${dstvApp.SecurityAuthBaseUrl}/apidvs/api/v1/DvsProduct/ReCapturePackage`;site.factory.Post(url,data,null,self.OnCreateCustomerSuccess,self.OnCreateCustomerError,false,false,true,true);}else{site.factory.GetJWT().then(function(token){let url=`${dstvApp.DSOAPIUrl}/apidvs/api/v1/DvsProduct/ReCapturePackage`;site.factory.Post(url,data,token,self.OnCreateCustomerSuccess,self.OnCreateCustomerError);});}}
catch(e){console.log('DvS - Reject and create new qoute started - Exception occured :'+e)
self.state='showErrorGeneric';self.errorMessage='Something went wrong. Please try after sometime.';}}
self.ShowOldQoute=function(){self.selectedPackage=app.dvsPackages.filter(x=>x.properties.PackageName==self.oldPackage)[0]
self.state='PayScreen';self.update();}
self.ShowPaymentAwerness=function(){if(dstvApp.SkipPayAwarenessCountryList.includes(dstvApp.countryabbreviation)){self.ProcessPayment();}
else{self.state='AwarenessMsgScreen';self.update();self.ScrollTop();self.analyticsCheckoutStep2();}}
self.ProcessPayment=function(){self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading7;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg7;self.ShowLoader(self.loadingMsgs,'preloader');self.newWin=window.open('','_blank');let html="";let msg="Please wait..."
if(dstvApp.languageAbbreviation=='pt')
msg='Por favor, espere...'
html=`<html> <head> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <style> @font-face { font-family: robotoregular; src: url(/font-thanks/Roboto-Regular.ttf)} @font-face {font-family: robotobold; src: url(/font-thanks/Roboto-Bold.ttf)} @media screen and (max-width: 767px) {.dvs-common-loading-screen .loading-loader { left: 10% !important; width: 70% !important;} } body {font-family: Roboto, Helvetica, Arial, sans-serif; font-size: 18px; line-height: 25px; margin: 0; padding: 0;} .dvs-common-loading-screen {width: 100%; position: absolute; z-index: 9999; top: 0px; bottom: 0px; height: 100% !important; margin: 0px; background: rgb(0, 0, 0);} .dvs-common-loading-screen .loading-loader {top: 20%; left: 30%; position: absolute;  width: 38%; background: rgb(255, 255, 255);    border-radius: 5px;    padding: 0px 20px 10px;} .banking-loader { width: 40% !important; margin: 10px auto 20px auto !important;} .dvs-common-loading-screen img { width: 60%;    margin: 20px auto 0px;} .dvs-common-loading-screen .title-message { font-weight: bold; max-width: 460px; width: 100%; font-size: 1.2rem !important; color: rgb(0, 0, 0) !important; margin: -10px auto 0px;} .dvs-common-loading-screen .loading-loader .loading-message {max-width: 460px; width: 100%; font-size: 1rem; margin: 15px auto;}  </style></head> <body> <div> <div id="dvs-onboarding-loader" class="dvs-loading-screen dvs-common-loading-screen content-wrapper dvs-details-wrapper clearfix" style="text-align: center;"> <div class="loading-loader loading" style="z-index: 9999;"> <div class="col-sm-12 text-center white"> <img class="banking-loader" src="/media/11964/banking-loader.gif"><div class="title-message">${langTranslateApp.dvsOnBoardingHeading9} </div> <div class="loading-message">${langTranslateApp.dvsOnBoardingMsg9} </div> </div> </div> </div><div class="clearfix"></div></div> </body></html>`;self.newWin.document.write(html);let vendorType=dstvApp.PaymentVendorType[0];let currency=dstvApp.countrycurrency;if(dstvApp.DualCurrency&&dstvApp.DualCurrencyCountryList.includes(dstvApp.countryabbreviation)){currency=dstvApp.DualCurrencyPaymentCurrency.filter(x=>x.country==dstvApp.countryabbreviation)[0].currency;vendorType=dstvApp.countrycurrency=="usd"?dstvApp.PaymentVendorType[1]:dstvApp.PaymentVendorType[2];}
let account='';let accountInfo='';let productNamesPrices='';if(app.accounts)
account=app.accounts.filter(x=>x.AccountType=="DStvRes");if(app.accountsInfo)
accountInfo=app.accountsInfo.filter(x=>x.AccountType=="DStvRes");productNamesPrices=self.selectedPackage.properties.PackageName+":"+self.selectedPackage.properties.Price;let accNumber=account[0]?account[0].AccountNumber:self.newAccountNumber;let accBalance=accountInfo[0]?accountInfo[0].AccountBalance.Value:self.quotes.QuoteAmount;let payDueDate=accountInfo[0]?accountInfo[0].DueDate:site.factory.GetEazyDateFormat(new Date());let amtToPay=accountInfo[0]?accountInfo[0].AmountToPay.Value:self.quotes.QuoteAmount;let customerNumber=parseInt(app.connectCustomerDetails.CustomerNumber||self.customerNumber||0);let smartcard=self.smartcard||self.newSmartcard||'';req={country:dstvApp.country,businessUnit:dstvApp.businessunit,channel:dstvApp.channel,currency:currency,customerNumber:customerNumber,smartCardNumber:smartcard,firstName:self.name||app.connectCustomerDetails.PersonalDetail.FirstName,name:self.surname||app.connectCustomerDetails.PersonalDetail.Surname,accountNumber:accNumber,amount:self.quotes.QuoteAmount,productUserKey:self.selectedPackage.properties.Code,paymentType:'DVSPayment',backUrl:'',successReturnURL:'',failureReturnURL:'',bypassPaymentSuite:true,LanguageCode:dstvApp.languageAbbreviation,accountBalance:accBalance,dueDate:payDueDate,productNamesPrices:productNamesPrices,amountToPay:amtToPay,"vendorType":vendorType};self.ScrollTop();if(dstvApp.EnableSecurityAuth){site.factory.Post(`${dstvApp.SecurityAuthBaseUrl}${dstvApp.DSOPaymentServiceURL}`,req,null,self.OnPaymentProcessSuccess,self.OnPaymentProcessError,false,false,false,true);}else{site.factory.GetJWT().then(function(token){self.token=token;site.factory.Post(`${dstvApp.DSOAPIUrl}${dstvApp.DSOPaymentServiceURL}`,req,self.token,self.OnPaymentProcessSuccess,self.OnPaymentProcessError);});}
if(dstvApp.SkipPayAwarenessCountryList.includes(dstvApp.countryabbreviation)){self.analyticsCheckoutStep2();}
else{self.analyticsCheckoutStep3();}}
self.OnPaymentProcessSuccess=function(data){console.log('Payment Suit: Payment process successful');self.tokenGenerated=true;if(data){let dppRedirectUrl=data.redirectUrl;self.newWin.location=dppRedirectUrl+'?viewingDaysLeft='+app.viewingDaysLeft;self.transactionId=data.transactionId;setTimeout(()=>{self.GetPaymentStatus()},1000)}
else{console.log('Payment Suit: Error after successful DSOPaymentServiceURL call');console.log(data);self.state='showError500';self.update();}
self.ScrollTop();}
self.OnPaymentProcessError=function(err){console.log('DVS : Error while generating payment URL');self.LogError(err);self.processingPayment=false;self.state='showError500';self.paymentRetry=true;self.newWin.close();self.update();self.ScrollTop();}
self.OnRetry=function(){if(self.externalLoginRetry){self.ExternalLogin();self.externalLoginRetry=false;}
else if(self.customerRetry){app.statusCode=undefined;window.SessionSave("app",app);self.ProcessCreateCustomer();self.customerRetry=false;}
else if(self.manageAccountRetry){self.ManageAccount();self.manageAccountRetry=false;}
else if(self.findSubscriptionRetry){self.FindSubscriptionDetails();self.findSubscriptionRetry=false;}
else if(self.LinkToConnectRetry){self.LinkCustomerToConnect();self.LinkToConnectRetry=false;}
else if(self.EnterSmartcardRetry){self.state='EnterSmartcardScreen';self.EnterSmartcardRetry=false;}
else if(self.acceptQuoteRetry){self.OnAcceptQuote();self.acceptQuoteRetry=false;}
else if(self.loginRetry){self.FindCustomerBySmartcard();self.loginRetry=false;}
else if(self.generateOtpRetry){self.SendOTP();self.generateOtpRetry=false;}
else if(self.getDvsPackagesRetry){self.GetUmbracoDVSPackages();self.getDvsPackagesRetry=false;}
else if(self.paymentRetry){self.ProcessPayment();self.paymentRetry=false;}
else if(self.isRejectQouteJourney){self.isRejectQouteJourney=false;self.RejectAndCreateNewQoute();}
else{window.location=dstvApp.DvsJourneyStartLink;}
self.update();}
self.GetPaymentStatus=function(){console.log('DVS : Fetching payment status...');if(!self.IsPaymentSuiteOpen()){console.log('DVS : Payment suite is closed.');return;}
self.fetchingPaymentStatus=true;self.update();if(dstvApp.EnableSecurityAuth){let url=`${dstvApp.SecurityAuthBaseUrl}${dstvApp.DSOPaymentServiceURL}?Country=${dstvApp.country}&BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}&TransactionId=${self.transactionId}`;site.factory.Get(url,null,self.OnGetPaymentStatusSuccess,self.OnGetPaymentStatusError,false,true,true)}else{site.factory.GetJWT().then(function(token){self.token=token;let url=`${dstvApp.DSOAPIUrl}${dstvApp.DSOPaymentServiceURL}?Country=${dstvApp.country}&BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}&TransactionId=${self.transactionId}`;site.factory.Get(url,self.token,self.OnGetPaymentStatusSuccess,self.OnGetPaymentStatusError)});}}
let count=0;self.OnGetPaymentStatusSuccess=function(d){console.log('DVS : '+d.status);console.log('DVS : Fetching completed');self.ScrollTop()
app.appDataForPdf=d;self.isPaymentCompleted="success"==d.status.toLowerCase();self.fetchingPaymentStatus=false;self.paymentStatus={};self.paymentStatus.message=d.message;self.paymentStatus.status=d.status;self.paymentStatus.date=site.factory.GetEazyDateFormat(d.date);self.paymentStatus.amountDue=d.amountDue;self.paymentStatus.currency=dstvApp.countrycurrency.toUpperCase();self.paymentStatus.transactionId=d.transactionId;self.showMessage=false;self.localPrice=d.localPrice;self.statusMsg='';app.appDataForPdf.localQuoteAmount=d.localPrice?d.localPrice.amount:d.localPrice;if(dstvApp.countryabbreviation=='et'){self.paymentStatus.currency='USD';}
d.status=d.status.toLowerCase();if((d.status!='undefined'&&d.status!='in_progress')){self.state='loading';}
if(d.status=='success'){self.state='PaymentSuccessScreen';self.processingPayment=false;self.newWin.close();self.analyticsPurchase(d);self.UpdateRequestStage();}
else if(d.status=='pending'){self.state='PaymentPendingScreen';}
else{if(d.status=='failure'){self.newWin.close();self.state='PaymentFailedScreen';self.processingPayment=false;self.analyticsPaymentFailure(d);}}
self.update();self.ScrollTop();if((d.status=='pending'||d.status=='undefined'||d.status=='in_progress'))
setTimeout(function(){console.log('DVS : Retrying started...');self.GetPaymentStatus(d.transactionId);},10000)
else if(self.newWin.closed){if(d.status=='pending'||d.status=='undefined'||d.status=='in_progress')
self.state='PaymentPendingScreen';else if(d.status=='failure')
self.state='PaymentFailedScreen';else
self.state='PaymentSuccessScreen';self.processingPayment=false;self.update();}}
self.OnGetPaymentStatusError=function(error){console.log('DVS : Error while fetching payment status');self.LogError(error);self.fetchingPaymentStatus=false;self.update();}
self.IsPaymentSuiteOpen=function(){return true;}
self.LogError=function(err){if(site.env!=='PROD')
console.log(err);}
self.SelfServiceLogin=function(){console.log('DVS : Redirecting to Selfservice Login');window.open(window.location.origin+dstvApp.SignInURL,'_blank');return;}
window.ManageAccount=self.ManageAccount=function(){if(dstvApp.decommissionedCountries.includes(dstvApp.countryabbreviation)){window.location.href=`${self.webUniDomain}${dstvApp.languageAbbreviation}-${dstvApp.countryabbreviation}/mydstv#/dashboard#/${app.dstvNowRedirectUrl.split('#')[1]}`;return;}
console.log('DVS : Login...')
self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading8;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg8;self.ShowLoader(self.loadingMsgs,'preloader');let smartcard=self.newSmartcard||(self.product&&self.product.length>0&&self.product[0].smartcardNumber)
let data={country:dstvApp.country,surname:(app.surname||app.connectCustomerDetails.PersonalDetail.Surname||self.surname),mobileNumber:'',smartCardNumber:smartcard,verbocity:true}
app.sessionID=site.factory.uuidv4();try{if(dstvApp.EnableSecurityAuth){let url=`${dstvApp.SecurityAuthBaseUrl}apilogin/api/v1/Login?BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}`;site.factory.Post(url,data,null,self.OnManageAccountSuccess,self.OnManageAccountError,false,false,false,true)}else{site.factory.GetJWT().then(function(token){let url=`${dstvApp.DSOAPIUrl}apilogin/api/v1/Login?BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}`;site.factory.Post(url,data,token,self.OnManageAccountSuccess,self.OnManageAccountError)})}}
catch(e){console.log('DvS - Loading your dashboard - Exception occured :'+e)
self.state='showErrorGeneric';self.errorMessage='Something went wrong. Please try after sometime.';}
self.ScrollTop();}
self.OnManageAccountSuccess=function(data){app.access_token=undefined
console.log('DVS : Login completed')
self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading8;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg8;self.ShowLoader(self.loadingMsgs,'preloader');app.loggedin=true;app.isDVSJourney=false;app.customername=data.PersonalDetail.Title+' '+data.PersonalDetail.FirstName+' '+data.PersonalDetail.Surname;app.customername=app.customername.toUpperCase();app.customernumber=data.CustomerNumber;app.smartcard=self.newSmartcard||(self.product&&self.product.length>0&&self.product[0].smartcardNumber);app.showmaxUpgradeReq=false;app.paymentduedetails={properties:{surname:{value:self.surname},firstName:{value:self.name},customerNumber:{value:app.customernumber}},entities:[]};app.customerDetails={ListOfAddress:data.ListOfAddress,ListOfEmail:(data.ListOfEmail||[]),ListOfPhoneNumber:(data.ListOfPhoneNumber||[]),PersonalDetail:data.PersonalDetail,};let emailID=app.customerDetails.ListOfEmail?app.customerDetails.ListOfEmail[0]:undefined;emailID=emailID?emailID.Email:'';let mobileNum=app.customerDetails.ListOfPhoneNumber.filter(x=>x.IsPrimary)[0];mobileNum=mobileNum?mobileNum.Number:'';let homeTel=app.customerDetails.ListOfPhoneNumber.filter(x=>x.Type=="Home")[0];homeTel=homeTel?homeTel.Number:'';let workTel=app.customerDetails.ListOfPhoneNumber.filter(x=>x.Type=="Work")[0];workTel=workTel>0?workTel.Number:'';let faxTel=app.customerDetails.ListOfPhoneNumber.filter(x=>x.Type=="Fax")[0];faxTel=faxTel>0?faxTel.Number:'';app.customercontactdetails={Title:app.customerDetails.PersonalDetail.Title,FirstName:app.customerDetails.PersonalDetail.FirstName,Surname:app.customerDetails.PersonalDetail.Surname,EmailAddress:emailID,MobileTel:mobileNum,HomeTel:homeTel,WorkTel:workTel,FaxTel:faxTel};app.loadedcontactdetails=true;self.GetAmountToPay();self.SetDualCurrencyFlag();site.factory.addCustomerToDMP();site.factory.RememberMe();}
self.OnManageAccountError=function(err){console.log('DVS : Login error...')
self.LogError(err);self.state='showError500';self.manageAccountRetry=true;self.update();}
self.ScrollTop=function(){$('html, body').animate({scrollTop:20},1000);}
self.SetDualCurrencyFlag=function(){console.log('DVS : Setting Dual Currency Flag');let arrayDualCurrencyContries=[];let arrayDualCurrencies=[];for(var i=0;i<dstvApp.DualCurrenciesList.length;i++){var split=dstvApp.DualCurrenciesList[i].split("-");arrayDualCurrencyContries.push(split[0]);arrayDualCurrencies.push(split[1]);}
app.dualCurrencyApplicable=arrayDualCurrencies.includes(dstvApp.countrycurrency.toLowerCase());window.SessionSave("app",app);}
self.OnConnectSignUp=function(){self.analyticsCheckout();if(app.applySignIn&&app.applySignIn==1)
self.OnConnectSignIn();else{window.location=`${dstvApp.ConnectSignUpUrl}?redirect_uri=${window.location.href}&client_id=${dstvApp.ConnectClientId}&bypasslinking=True&lang=${dstvApp.languageAbbreviation}-${dstvApp.countryabbreviation}`;return;}}
self.OnConnectSignIn=function(){window.location=`${dstvApp.ConnectSignInUrl}?redirect_uri=${window.location.href}&journey=dvs&client_id=${dstvApp.ConnectClientId}&useJwt=False&bypasslinking=True&RedirectUrl=${window.location.href}&show_packages=False&lang=${dstvApp.languageAbbreviation}-${dstvApp.countryabbreviation}`;return;}
self.OnAcceptQuote=function(){console.log('DVS : Create customer - Accept the Quote in case of Sufficient balance...');self.loadingMsgs.heading=langTranslateApp.dvsOnBoardingHeading9;self.loadingMsgs.message=langTranslateApp.dvsOnBoardingMsg9;self.ShowLoader(self.loadingMsgs,'preloader');let smartcard=self.smartcard||self.newSmartcard||'';let data={};try{self.randomUniqueId=parseInt(Math.ceil(Math.random()*Date.now()).toPrecision(9).toString().replace(".",""));if(dstvApp.EnableSecurityAuth){let url=`${dstvApp.SecurityAuthBaseUrl}/apidvs/api/v1/DvsCustomer/AcceptQuotes?BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}&Country=${dstvApp.country}&customerNumber=${self.customerNumber||app.customernumber}&smartcardNumber=${smartcard}&QuoteId=${self.quotes.Id}&FinancialAccountId=${self.quotes.FinancialAccountId}`
site.factory.Post(url,data,null,self.OnAcceptQuoteSuccess,self.OnAcceptQuoteError,false,false,true,true)}else{site.factory.GetJWT().then(function(token){let url=`${dstvApp.DSOAPIUrl}/apidvs/api/v1/DvsCustomer/AcceptQuotes?BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}&Country=${dstvApp.country}&customerNumber=${self.customerNumber||app.customernumber}&smartcardNumber=${smartcard}&QuoteId=${self.quotes.Id}&FinancialAccountId=${self.quotes.FinancialAccountId}`
site.factory.Post(url,data,token,self.OnAcceptQuoteSuccess,self.OnAcceptQuoteError)})}
self.analyticsCheckoutStep2();}
catch(e){console.log('DvS - External Login - Exception occured :'+e)
self.state='showErrorGeneric';self.errorMessage='Something went wrong. Please try after sometime.';}}
self.OnAcceptQuoteSuccess=function(data){console.log('DVS : Accept Quote successful');self.state='PaymentSuccessScreen';self.hideIdStatus=true;self.update();self.ScrollTop();self.analyticsPurchaseSuffBalance(app.appDataForPdf);self.UpdateRequestStage();if((dstvApp.dvsShowmaxOnboarding.includes(dstvApp.countryabbreviation)&&count==0)){count=1
riot.mount('tag-showmax-ott-card',{showComponent:true,ManageAcc:self.ManageAccount});}}
self.OnAcceptQuoteError=function(){console.log('DVS : Error in Accept Quote');self.state='showError500';self.acceptQuoteRetry=true;self.update();self.ScrollTop();self.analyticsPaymentFailureSuffBalance();}
self.ShowPackageSlider=function(){self.SelectedPackageSummary=false;self.TogglePackageSlider=true;self.titleWatchScreen=langTranslateApp.dvsselectpackage;self.GetUmbracoDVSPackages();self.update();}
self.OnPackageSelect=function(e){self.oldPackage=self.selectedPackage;self.selectedPackage=e.item.package;self.newPackage=e.item.package.properties.PackageName;app.selectedProductCode=self.selectedPackage.properties.Code;window.SessionSave("app",app);dstvApp.DvsJourneyStartLink=app.selectedProductCode?dstvApp.DvsJourneyStartLink+app.selectedProductCode:dstvApp.DvsJourneyStartLink;self.packageNameToShow=self.selectedPackage.properties.PackageNameToShow
self.SelectedPackageSummary=true;self.TogglePackageSlider=false;self.titleWatchScreen=app.isProMigration?langTranslateApp.dvs3easysteps:langTranslateApp.dvseasysteps;self.update();if(app.selectedProductCode!==self.oldPackage.properties.Code){self.analyticsRemoveFromCart(self.oldPackage);self.analyticsAddToCart(self.selectedPackage);}}
self.OnEditPackage=function(){self.state='ChangePackageScreen';if(app.dvsPackages){self.dvsPackages=app.dvsPackages;self.InitializePackageSlider();}
else{self.GetUmbracoDVSPackages();}
self.update();}
self.PackageNameToShow=function(packageName){if(dstvApp.country=="tanzania"&&packageName.includes("FAMOTT")){packageName='FAMOTT - Shangwe Streaming Subscription'}else if(dstvApp.country=="tanzania"&&packageName.includes("ACCSSOTT")){packageName='FAMOTT - Bomba Streaming Subscription'}
return dstvApp.packages.find(p=>p.properties.Code==app.selectedProductCode).properties.PackageNameToShow}
self.PackageNameToShowNoStreaming=function(packageName){return 'DStv '+packageName.replace(/PREMOTT|COMPLSOTT|COMPOTT|FAMOTT|ACCSSOTT|Subscription|Streaming|MEGOTT|BUEOTT|GRANPLSOTT|GRANDOTT|FAMLIAOTT|YANGAOTT|CONFAMOTT|-/g,'').trim();}
self.PackageNameToShowOnLanding=function(packageName){if(dstvApp.country=="tanzania"&&packageName.includes("Family")){packageName='DStv Shangwe Streaming Subscription'}else if(dstvApp.country=="tanzania"&&packageName.includes("Access")){packageName='DStv Bomba Streaming Subscription'}
return dstvApp.packages.find(p=>p.properties.Code==app.selectedProductCode).properties.PackageNameToShow}
self.OnClosePopup=function(){if(self.retryButtonShown||self.findSubscriptionRetry){self.OnConnectSignIn();}
else if(self.LinkToConnectRetry){self.state='AccountFoundScreen';}
else if(self.paymentRetry){self.state='AwarenessMsgScreen';}
else if(self.acceptQuoteRetry){self.state='SufficientBalanceScreen';}
else if(self.manageAccountRetry){if(self.paymentStatus.status=='success')
self.state='PaymentSuccessScreen';else if(self.paymentStatus.status=='pending')
self.state='PaymentPendingScreen';else
self.state='PaymentFailedScreen';}
else{window.location=dstvApp.DvsJourneyStartLink;}
self.update();}
self.FormatDate=function(rawDate){let monthNames=[]
if(dstvApp.language.toLowerCase()=='english'){monthNames=["January","February","March","April","May","June","July","August","September","October","November","December"];}else{monthNames=["janeiro","fevereiro","marÃƒÆ’Ã‚Â§o","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"];}
const d=new Date(rawDate);let month=monthNames[d.getMonth()];let date=d.getDate();let year=d.getFullYear();return date+'-'+month+'-'+year;}
self.GetAmountToPay=function(){console.log('Login : fetch amount to pay...')
if(dstvApp.EnableSecurityAuth){let url=`${dstvApp.SecurityAuthBaseUrl}atp/api/v1/AmountToPay?country=${dstvApp.country}&customerNumber=${app.customernumber}&BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}`;site.factory.Get(url,null,self.onGetAmountToPaySuccess,self.onGetAmountToPayError,false,true,true)}else{let url=`${dstvApp.DSOAPIUrl}atp/api/v1/AmountToPay?country=${dstvApp.country}&customerNumber=${app.customernumber}&BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}`;site.factory.Get(url,self.token,self.onGetAmountToPaySuccess,self.onGetAmountToPayError)}}
self.onGetAmountToPaySuccess=function(data){console.log('Login : fetch amount to pay completed')
app.paymentduedetails.properties.dueDate={value:data.DueDate.split('T')[0]};app.paymentduedetails.properties.amountToPay={value:Math.round(data.TotalAmountToPay.Value*100)/100}
if(dstvApp.DualCurrencyCountryList.includes(dstvApp.countryabbreviation))
app.paymentduedetails.properties.amountToPayEtb=data.TotalAmountToPay.LocalPrice?{value:Math.round(data.TotalAmountToPay.LocalPrice.Amount*100)/100}:null
app.paymentduedetails.properties.currencyCode={value:data.TotalAmountToPay.CurrencyCode}
if(data.Accounts){app.BOAccount=data.Accounts.filter(x=>x.AccountType=="Box Office")[0];app.IsBOCustomer=app.BOAccount&&Object.keys(app.BOAccount).length>0
app.accounts=data.Accounts.map(x=>({AccountNumber:x.AccountNumber,AccountType:x.AccountType}))
app.accountsInfo=data.Accounts;app.primaryaccountnumber=data.Accounts.filter(x=>x.IsDefault)[0].AccountNumber;}
else{app.accounts=[];app.BOAccount=[];app.IsBOCustomer=false;app.accountsInfo=[];app.primaryaccountnumber=0;}
window.SessionSave("app",app);window.location.reload();}
self.onGetAmountToPayError=function(err){console.log('Login : error while fetching amount to pay')
app.paymentduedetails.properties.dueDate={value:null};app.paymentduedetails.properties.amountToPay={value:null}
app.paymentduedetails.properties.currencyCode={value:null}
app.accounts=[];app.BOAccount=[];app.IsBOCustomer=false;app.primaryaccountnumber=0;window.SessionSave("app",app);}
self.SaveAsPdf=function(){let pdfData;let amount=app.appDataForPdf.QuoteAmount||app.appDataForPdf.amountDue
let amountPaid=app.appDataForPdf!=undefined?dstvApp.countrycurrency.toUpperCase()+' '+amount:""
if(dstvApp.countryabbreviation=='et'&&dstvApp.countrycurrency=='usd'){amountPaid=app.appDataForPdf!=undefined?dstvApp.countrycurrency.toUpperCase()+' '+amount:""}else if(dstvApp.countryabbreviation=='et'&&dstvApp.countrycurrency=='etb'){amountPaid=app.appDataForPdf!=undefined?dstvApp.countrycurrency.toUpperCase()+' '+Number(app.appDataForPdf.localQuoteAmount).toFixed():""}
if(app.appDataForPdf&&(app.appDataForPdf.transactionId==undefined||app.appDataForPdf.transactionId=='')){pdfData={downloadSummary:true,transactionId:app.appDataForPdf&&app.appDataForPdf.transactionId!=undefined?app.appDataForPdf.transactionId:"-",package:self.PackageNameToShow(self.selectedPackage.properties.PackageName).replace('DStv',''),smartcard:app.smartcard,email:app.connectCustomerDetails?.Email,mobile:app.connectCustomerDetails?.MobileNumber,rechargeDate:app.appDataForPdf!=undefined?self.FormatDate(app.appDataForPdf.LineItems[0].StartDate):"",validityDate:app.appDataForPdf!=undefined?self.FormatDate(app.appDataForPdf.LineItems[0].EndDate):"",amountPaid:amountPaid,isInsufficientBalance:false}}
else{pdfData={downloadSummary:true,transactionId:app.appDataForPdf!=undefined?app.appDataForPdf.transactionId:"",package:self.PackageNameToShow(self.selectedPackage.properties.PackageName).replace('DStv',''),smartcard:app.smartcard,email:app.connectCustomerDetails?.Email,mobile:app.connectCustomerDetails?.MobileNumber,rechargeDate:app.appDataForPdf!=undefined?self.FormatDate(app.appDataForPdf.date):"",validityDate:self.ValidTillDate,amountPaid:amountPaid,isInsufficientBalance:true}}
printJS({printable:`<div id="printable" style="width:721px;max-width: 100%;min-height:1000px;padding:0;margin:0 auto;"> <div style="background:rgb(18 28 40 / 100%);"> <div style="background-image: url(/media/11928/dvs-download-summary-background.jpg);background-size: cover; background-repeat: no-repeat; background-position: center top;padding:30px 0;"> <div style="width:560px;max-width:100%;margin:0 auto;background: rgb(39 48 59 / 65%);backdrop-filter: blur(10px);border-radius:3px;padding:20px 20px 30px"> <h1 style="font-family: 'Roboto', sans-serif; font-weight: 700; font-size: 1.8rem; text-align:center; width: 100%; color: #fff; margin: 10px 0 15px 0;">${langTranslateApp.pdftxt1}</h1> <h2 style="font-family: 'Roboto', sans-serif; font-weight: 300; font-size: 1.2rem; text-align:center; width: 100%; color: #fff; margin: 0 0 15px 0;">${langTranslateApp.pdftxt2} <strong>${langTranslateApp.pdftxt3}</strong></h2> <h3 style="font-family: 'Roboto', sans-serif; font-weight: 300; font-size: 0.9rem; text-align:center; width: 100%; color: #fff; margin: 0 0 30px 0;">${langTranslateApp.pdftxt4}</h3> <div style="text-align:left;width:100%;max-width:500px;margin:0 auto;color:#fff;font-family:Roboto,sans-serif"> <p style="opacity:1;display:table;width:470px;font-weight:300;border-bottom:1px solid rgb(255 255 255 / 34%);padding:7px 15px;font-size:15px;margin:0;">${langTranslateApp.labelEmailid} <b style="font-weight:400;text-align:right;display:table-cell;width:50%">${pdfData.email}</b></p> </div> <div style="text-align:left;width:100%;max-width:500px;margin:0 auto;color:#fff;font-family:Roboto,sans-serif"> <p style="opacity:1;display:table;width:470px;font-weight:300;border-bottom:1px solid rgb(255 255 255 / 34%);padding:7px 15px;font-size:15px;margin:0;">${langTranslateApp.DigitalSmartcardNumber} <b style="font-weight:400;text-align:right;display:table-cell;width:50%">${pdfData.smartcard}</b></p> </div> <div style="text-align:left;width:100%;max-width:500px;margin:0 auto;color:#fff;font-family:Roboto,sans-serif"> <p style="opacity:1;display:table;width:470px;font-weight:300;border-bottom:1px solid rgb(255 255 255 / 34%);padding:7px 15px;font-size:15px;margin:0;">${langTranslateApp.labelMobileno} <b style="font-weight:400;text-align:right;display:table-cell;width:50%">${pdfData.mobile}</b></p> </div> <div if=${pdfData.isInsufficientBalance} style="text-align:left;width:100%;max-width:500px;margin:0 auto;color:#fff;font-family:Roboto,sans-serif"> <p style="opacity:1;display:table;width:470px;font-weight:300;border-bottom:1px solid rgb(255 255 255 / 34%);padding:7px 15px;font-size:15px;margin:0;">${langTranslateApp.labelTransactionid} <b style="font-weight:400;text-align:right;display:table-cell;width:50%">${pdfData.transactionId}</b></p> </div> <div style="text-align:left;width:100%;max-width:500px;margin:0 auto;color:#fff;font-family:Roboto,sans-serif"> <p style="opacity:1;display:table;width:470px;font-weight:300;padding:7px 15px;font-size:15px;margin:0;">${langTranslateApp.labelNextdate} <b style="font-weight:400;text-align:right;display:table-cell;width:50%">${pdfData.rechargeDate}</b></p> </div> <div style="width:500px;max-width:100%;margin:0 auto;"> <div style="width:130px;float:left;background-color:rgb(25 155 169 / 100%);border-radius: 5px;margin:25px 0 15px;position:relative;"> <img style="width: 35px;margin-bottom: -3px;margin-left: 2px;position: absolute;top: -15px;right: 6px;z-index: 99;" src="/media/11937/dvs-icon.svg" alt="Streaming"> <div style="color:#ffffff;padding:22px 10px 5px;text-align: left;font-family:Roboto,sans-serif;font-weight:600;min-height: 68px;"> <img src="/media/11938/dstv_logo.png" style="max-width: 100%;height: 23px;"> <div style="color:#fff;font-family:Roboto,sans-serif;font-size:12px; font-weight:700;padding-left:1px;">${pdfData.package}</div> </div> <div style="color:#000000;padding:14px 10px;text-align: center;border-radius: 0 0 5px 5px;font-family:Roboto,sans-serif;font-size:12px;font-weight:600;background-color:rgb(255 255 255 / 100%);">${langTranslateApp.loginPackage}</div> </div> <div style="width:130px;float:left;background-color:rgb(66 157 176 / 100%);border-radius: 5px;margin:25px 55px 15px;"> <div style="color:#ffffff;padding:20px 10px 5px;text-align: center;font-family:Roboto,sans-serif;font-size: 22px;font-weight:700;min-height:70px;line-height:normal;">${pdfData.amountPaid}</div> <div style="color:#000000;padding:14px 10px;text-align: center;border-radius: 0 0 5px 5px;font-family:Roboto,sans-serif;font-size:12px;font-weight:600;background-color:rgb(255 255 255 / 100%);">${langTranslateApp.dashChangePackageMonthlyPrice}</div> </div> <div style="width:130px;float:left;background-color:rgb(37 94 113 / 100%);border-radius: 5px;margin:25px 0 15px;"> <div style="color:#ffffff;padding:30px 10px 5px;text-align: center;font-family:Roboto,sans-serif;font-size:14px;font-weight:600;min-height: 60px">${pdfData.validityDate}</div> <div style="color:#000000;padding:14px 10px;text-align: center;border-radius: 0 0 5px 5px;font-family:Roboto,sans-serif;font-size:12px;font-weight:600;background-color:rgb(255 255 255 / 100%);">${langTranslateApp.validtill}</div> </div> <div style="clear:both"></div> </div> </div> </div> <div style="width:671px;padding:20px 25px 20px 25px;background-color:rgb(255 255 255 / 10%);"> <div style="width:500px;max-width:100%;margin:0 auto;"> <div style="width:55%;float:left;color:#000"> <h2 style="margin:0;color:#fff;font-size:18px;font-family:Roboto,sans-serif;font-weight:700;line-height:normal">${langTranslateApp.pdftxt6} </br> ${langTranslateApp.pdftxt7}</h2> <h3 style="margin:10px 0 15px;color:#fff;font-size:14px;font-family:Roboto,sans-serif;font-weight:300;line-height:normal;text-align:left">${langTranslateApp.pdftxt5}</h3> <img src="/media/11929/google-app-download-btn.png" alt="Google Play" width="" height="35" style="max-width:45%;"> <img style="margin-left:10px;max-width:45%;" src="/media/11930/ios-app-download-btn.png" alt="App Store" width="" height="35"> </div> <div style="width:43%;float:left;color:#000;text-align:center;"><img src="/media/11931/ipad.png" alt="Multichoice" width="100%" style="max-width:90%" ;></div> <div style="clear:both"></div> </div> </div> <footer style="display:block;width:720px;max-width:100%;text-align:center;padding:30px 0 2px;margin:0 auto;"> <div style="width:100%;text-align:center;padding:0;margin:0 auto"> <img src="/media/11932/multichoice-logo.png" alt="Multichoice" width="100"> <ul style="text-align:center;padding:0;margin:15px 0 0;list-style-type:none"> <li style="display:inline-block;width:30px;height:30px;padding:0"><a style="display:block;width:100%;height:100%" href="#" target="_blank"><img style="max-width:100%" src="/media/11933/instagram.png"></a></li> <li style="display:inline-block;width:30px;height:30px;padding:0;margin-left:10px"><a style="display:block;width:100%;height:100%" href="#" target="_blank"><img style="max-width:100%" src="/media/11934/facebook.png"></a></li> <li style="display:inline-block;width:30px;height:30px;padding:0;margin-left:10px"><a style="display:block;width:100%;height:100%" href="#" target="_blank"><img style="max-width:100%" src="/media/11935/twitter.png"></a></li> <li style="display:inline-block;width:30px;height:30px;padding:0;margin-left:10px"><a style="display:block;width:100%;height:100%" href="#" target="_blank"><img style="max-width:100%" src="/media/11936/youtube.png"></a></li> </ul> <h3 style="margin:5px 0 40px 0;color:rgb(255 255 255 / 50%);font-size:11px;font-family:Roboto,sans-serif;font-weight:300;line-height:normal">ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â© 2022 Multichoice (PTY) LTD. All rights reserved</h3> </div> </footer> </div></div>`,type:'raw-html',style:'#printable{-webkit-print-color-adjust: exact !important; -moz-print-color-adjust: exact !important; -ms-print-color-adjust: exact !important;}',header:null,scanStyles:true,documentTitle:'',headerStyle:'display:none;'});}
self.GetCreateCustomerStatus=function(){console.log('DVS : Fetching create customer current status');try{if(dstvApp.EnableSecurityAuth){let url=`${dstvApp.SecurityAuthBaseUrl}/apidvs/api/DvsRequestDetails/GetRequestStatus?Country=${dstvApp.country}&BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}&ConnectId=${app.connectCustomerDetails.ConnectId}`;site.factory.Get(url,null,self.OnGetStatusSuccess,self.OnGetStatusError,false,false,true)}else{site.factory.GetJWT().then(function(token){let url=`${dstvApp.DSOAPIUrl}/apidvs/api/DvsRequestDetails/GetRequestStatus?Country=${dstvApp.country}&BusinessUnit=${dstvApp.businessunit}&Channel=${dstvApp.channel}&ConnectId=${app.connectCustomerDetails.ConnectId}`;site.factory.Get(url,token,self.OnGetStatusSuccess,self.OnGetStatusError)})}}
catch(e){console.log('DVS : Fetching create customer current status - Exception occured :'+e)
self.state='showErrorGeneric';self.errorMessage='Something went wrong. Please try after sometime.';}}
self.OnGetStatusSuccess=function(data){console.log('DVS : Fetching create customer current status successful.');if(data&&data.currentStage){self.currStage=data.currentStage;}
switch(self.currStage){case 'CONNECT_ACCOUNT':console.log('DvS Current Stage: '+self.currStage);self.previousPercent=1;self.percent=15;if(!self.flag.CONNECT_ACCOUNT){self.AnimateProgressBar(self.previousPercent,self.percent);self.flag.CONNECT_ACCOUNT=true;}
break;case 'CUSTOMER_CREATION':console.log('DvS Current Stage: '+self.currStage);self.previousPercent=self.percent>1?self.percent:1;self.percent=30;if(!self.flag.CUSTOMER_CREATION){self.AnimateProgressBar(self.previousPercent,self.percent);self.flag.CUSTOMER_CREATION=true;}
break;case 'SMARTCARD_LOOKUP':console.log('DvS Current Stage: '+self.currStage);self.previousPercent=self.percent>1?self.percent:1;self.percent=45;if(!self.flag.SMARTCARD_LOOKUP){self.AnimateProgressBar(self.previousPercent,self.percent);self.flag.SMARTCARD_LOOKUP=true;}
break;case 'LINK_DEVICE':console.log('DvS Current Stage: '+self.currStage);self.previousPercent=self.percent>1?self.percent:1;self.percent=60;if(!self.flag.LINK_DEVICE){self.AnimateProgressBar(self.previousPercent,self.percent);self.flag.LINK_DEVICE=true;}
break;case 'LINK_PACKAGE':console.log('DvS Current Stage: '+self.currStage);self.previousPercent=self.percent>1?self.percent:1;self.percent=75;if(!self.flag.LINK_PACKAGE){self.AnimateProgressBar(self.previousPercent,self.percent);self.flag.LINK_PACKAGE=true;}
break;case 'GET_AND_ACCEPT_QUOTE':console.log('DvS Current Stage: '+self.currStage);self.previousPercent=self.percent>1?self.percent:1;self.percent=90;if(!self.flag.GET_AND_ACCEPT_QUOTE){self.AnimateProgressBar(self.previousPercent,self.percent);self.flag.GET_AND_ACCEPT_QUOTE=true;}
break;}
if(self.currStage!=='GET_AND_ACCEPT_QUOTE'&&app.statusCode==undefined){setTimeout(()=>{self.GetCreateCustomerStatus()},3000);}}
self.OnGetStatusError=function(err){console.log('DVS : Error in fetching create customer current status.');if(err&&err.responseJSON.StatusCode&&app.statusCode==undefined){statusCode=err.responseJSON.StatusCode;if(statusCode==404)setTimeout(()=>{self.GetCreateCustomerStatus()},3000);console.log('error in Get Status, recall GetStatus: '+statusCode);}}
self.AnimateProgressBar=function(previousPercent,percent){try{let stepValue=previousPercent;let elem1=$('.dvs-bar');let elem2=$('.dvs-progress-text');let id=setInterval(frame,50);console.log('Flag array - '+self.flag);function frame(){if(stepValue>=percent){clearInterval(id);}else if(stepValue<=percent){elem2.text(`${stepValue+1} %`)
elem1.css('width',`${stepValue+1}%`)
elem1.css('transitionDuration',"1000ms")
stepValue=(stepValue+1);console.log('stepValue-  '+stepValue);console.log('percent-  '+percent);}}}
catch(e){console.log('DVS : Exception occured while animating the progress bar in GetOrCreateCustomer loader.');}}
self.copySmartCardNumber=function(){navigator.clipboard.writeText(jQuery('.copyText').text());jQuery('.clicktocopy').toggleClass('green');}
self.UpdateRequestStage=function(){console.log('DVS : Update current stage in DSO DB started...');try{let data={country:dstvApp.country,channel:dstvApp.channel,businessUnit:dstvApp.businessunit,connectId:app.connectCustomerDetails.ConnectId,customerNumber:parseInt(self.customerNumber)};if(dstvApp.EnableSecurityAuth){let url=`${dstvApp.SecurityAuthBaseUrl}/apidvs/api/DvsRequestDetails/UpdateRequestStage`;site.factory.Put(url,data,null,self.OnUpdateStageSuccess,self.OnUpdateStageError,true,true)}else{site.factory.GetJWT().then(function(token){let url=`${dstvApp.DSOAPIUrl}/apidvs/api/DvsRequestDetails/UpdateRequestStage`;site.factory.Put(url,data,token,self.OnUpdateStageSuccess,self.OnUpdateStageError)})}}
catch(e){console.log('DvS - Update current stage in DSO DB - Exception occured :'+e);}}
self.OnUpdateStageSuccess=function(data){console.log('DVS : Update current stage in DSO DB successful...');}
self.OnUpdateStageError=function(err){console.log('DVS : Error while updating current stage in DSO DB started...');}
self.analyticsProductImpression=function(){var pkgImpressionArr=[];app.dvsPackages.forEach(package=>{var impression={};impression["id"]=package.properties.Code;impression["name"]=package.properties.ProductName;impression["category"]="Stream Only";impression["list"]="Benefits of Streaming";impression["currencyCode"]=package.properties.Currency;impression["price"]=(Number(package.properties.Price).toFixed(2)).replace(/,/gi,"");pkgImpressionArr.push(impression);});window.dataLayer=window.dataLayer||[];window.dataLayer.push({event:'eec.productImpression',ecommerce:{impressions:pkgImpressionArr}});}
self.analyticsProductClick=function(selectedProduct){var products=[];var product={};product["id"]=selectedProduct.properties.Code;product["name"]=selectedProduct.properties.ProductName;product["price"]=(Number(selectedProduct.properties.Price).toFixed(2)).replace(/,/gi,"");product["brand"]="DStv";product["category"]="Stream Only";product["variant"]="";product["position"]="";products.push(product);window.dataLayer=window.dataLayer||[];window.dataLayer.push({event:'eec.productClick',ecommerce:{click:{actionField:{list:'Benefits of Streaming'},products:products}}});}
self.analyticsProductDetail=function(){window.dataLayer=window.dataLayer||[];window.dataLayer.push({event:'eec.productDetail',ecommerce:{detail:{products:[{id:'EASYKUOTT',name:'DStv EasyView OTT',price:'29.00',brand:'DStv',category:'Stream Only',variant:'',}]}}});}
self.analyticsAddToCartFromLanding=function(){var products=[];let product={};product["id"]=self.selectedPackage.properties.Code;product["name"]=self.selectedPackage.properties.ProductName;product["price"]=(Number(self.selectedPackage.properties.Price).toFixed(2)).replace(/,/gi,"");product["brand"]="DStv";product["category"]="Stream Only";product["variant"]="";product["quantity"]=1;product["currencyCode"]=self.selectedPackage.properties.Currency;products.push(product);window.dataLayer=window.dataLayer||[];window.dataLayer.push({event:'eec.addToCart',ecommerce:{add:{products:products}}});}
self.analyticsAddToCart=function(newProduct){var products=[];let product={};product["id"]=newProduct.properties.Code;product["name"]=newProduct.properties.ProductName;product["price"]=(Number(newProduct.properties.Price).toFixed(2)).replace(/,/gi,'');product["brand"]="DStv";product["category"]="Stream Only";product["variant"]="";product["quantity"]=1;product["currencyCode"]=newProduct.properties.Currency;products.push(product);window.dataLayer=window.dataLayer||[];window.dataLayer.push({event:'eec.addToCart',ecommerce:{add:{products:products}}});}
self.analyticsRemoveFromCart=function(oldProduct){var products=[];let product={};product["id"]=oldProduct.properties.Code;product["name"]=oldProduct.properties.ProductName;product["price"]=(Number(oldProduct.properties.Price).toFixed(2)).replace(/,/gi,"");product["brand"]="DStv";product["category"]="Stream Only";product["variant"]="";product["quantity"]=1;product["currencyCode"]=oldProduct.properties.Currency;products.push(product);window.dataLayer=window.dataLayer||[];window.dataLayer.push({event:'eec.removeFromCart',ecommerce:{remove:{products:products}}});}
self.analyticsCheckout=function(){let products=[];let product={};self.selectedPackage=self.selectedPackage?self.selectedPackage:app.selectedPackage
product["id"]=self.selectedPackage.properties.Code;product["name"]=self.selectedPackage.properties.ProductName;product["price"]=(Number(self.selectedPackage.properties.Price).toFixed(2)).replace(/,/gi,'');product["brand"]="DStv";product["category"]="Stream Only";product["variant"]="";product["quantity"]=1;product["currencyCode"]=self.selectedPackage.properties.Currency;products.push(product);window.dataLayer=window.dataLayer||[];window.dataLayer.push({event:'eec.checkout',ecommerce:{checkout:{actionField:{step:1},products:products}}});}
self.analyticsCheckoutStep2=function(){let products=[];let product={};product["id"]=self.selectedPackage.properties.Code;product["name"]=self.selectedPackage.properties.ProductName;product["price"]=(Number(self.selectedPackage.properties.Price).toFixed(2)).replace(/,/gi,"");product["brand"]="DStv";product["category"]="Stream Only";product["variant"]="";product["quantity"]=1;product["currencyCode"]=self.selectedPackage.properties.Currency;products.push(product);window.dataLayer=window.dataLayer||[];window.dataLayer.push({event:'eec.checkout',ecommerce:{checkout:{actionField:{step:2,option:'Proceed To Pay',},products:products}}});}
self.analyticsCheckoutStep3=function(){let products=[];let product={};product["id"]=self.selectedPackage.properties.Code;product["name"]=self.selectedPackage.properties.ProductName;product["price"]=(Number(self.selectedPackage.properties.Price).toFixed(2)).replace(/,/gi,"");product["brand"]="DStv";product["category"]="Stream Only";product["variant"]="";product["quantity"]=1;product["currencyCode"]=self.selectedPackage.properties.Currency;products.push(product);window.dataLayer=window.dataLayer||[];window.dataLayer.push({event:'eec.checkout',ecommerce:{checkout:{actionField:{step:3,option:'Continue',},products:products}}});}
self.analyticsPurchase=function(d){window.dataLayer=window.dataLayer||[];window.dataLayer.push({event:'eec.purchase',paymentPlatform:d.vendorCode,paymentMethod:'CARD',ecommerce:{purchase:{actionField:{id:d.transactionId,affiliation:'',revenue:d.amountDue,tax:'',shipping:'',coupon:'',},products:[{id:self.selectedPackage.properties.Code,name:self.selectedPackage.properties.ProductName,price:(Number(self.selectedPackage.properties.Price).toFixed(2)).replace(/,/gi,""),brand:'DStv',category:'Stream Only',variant:'',quantity:1,currencyCode:self.selectedPackage.properties.Currency}]}}});}
self.analyticsPurchaseSuffBalance=function(data){window.dataLayer=window.dataLayer||[];window.dataLayer.push({event:'eec.purchase',paymentPlatform:'',paymentMethod:'WALLET',ecommerce:{purchase:{actionField:{id:self.randomUniqueId,affiliation:'',revenue:(Number(data.QuoteAmount)).toFixed(2),tax:'',shipping:'',coupon:'',},products:[{id:self.selectedPackage.properties.Code,name:self.selectedPackage.properties.ProductName,price:(Number(self.selectedPackage.properties.Price).toFixed(2)).replace(/,/gi,""),brand:'DStv',category:'Stream Only',variant:'',quantity:1,currencyCode:self.selectedPackage.properties.Currency}]}}});}
self.analyticsPaymentFailure=function(d){window.dataLayer=window.dataLayer||[];window.dataLayer.push({event:'paymentFailure',ecommerce:{failure:{actionField:{paymentMethod:'CARD',payatTranId:d.transactionId,digiapiResponseMsg:'Payment failed due to an unknown error'},products:[{id:self.selectedPackage.properties.Code,name:self.selectedPackage.properties.ProductName,price:(Number(self.selectedPackage.properties.Price).toFixed(2)).replace(/,/gi,""),brand:'DStv',category:'Stream Only',variant:'',quantity:1,currencyCode:self.selectedPackage.properties.Currency}]}}});}
self.analyticsPaymentFailureSuffBalance=function(){window.dataLayer=window.dataLayer||[];window.dataLayer.push({event:'paymentFailure',ecommerce:{failure:{actionField:{paymentMethod:'WALLET',payatTranId:self.randomUniqueId,digiapiResponseMsg:'Payment failed due to an unknown error'},products:[{id:self.selectedPackage.properties.Code,name:self.selectedPackage.properties.ProductName,price:(Number(self.selectedPackage.properties.Price).toFixed(2)).replace(/,/gi,""),brand:'DStv',category:'Stream Only',variant:'',quantity:1,currencyCode:self.selectedPackage.properties.Currency}]}}});}});riot.tag2('tag-compare-packages','<div class="full-view-ss"><div class="compare-channels-model"><div class="modal-contents"><div class="modal-body"><div class="modal-header-bx"><div class="col-md-6 col-xs-4"><h4 class="title">Features</h4></div><div class="col-md-3 col-xs-4"><div class="text-center"><h4 class="title">{selected1.properties.PackageName.replace(\'DStv \',\'\')}</h4> </div></div><div class="col-md-3 col-xs-4"><div class="text-center"><h4 class="title">{selected2.properties.PackageName.replace(\'DStv \',\'\')}</h4> </div></div><div class="clearfix"></div></div><div class="list-bg"><div class="col-md-6 col-xs-4">Package Price In ({dstvApp.countrycurrency.toUpperCase()})</div><div class="col-md-3 col-xs-4"><div class="list-txt">{selected1.properties.Price + selected1.properties.PriceLetter}</div></div><div class="col-md-3 col-xs-4"><div class="list-txt">{selected2.properties.Price + selected2.properties.PriceLetter}</div></div><div class="clearfix"></div></div><div class="list-bg"><div class="col-md-6 col-xs-4">No. of Channels</div><div class="col-md-3 col-xs-4"><div class="list-txt">{selected1.properties.ChannelCount}</div></div><div class="col-md-3 col-xs-4"><div class="list-txt">{selected2.properties.ChannelCount}</div></div><div class="clearfix"></div></div><div class="list-bg"><div class="col-md-6 col-xs-4">No. of Devices Supported</div><div class="col-md-3 col-xs-4"><div class="list-txt">NA</div></div><div class="col-md-3 col-xs-4"><div class="list-txt">NA</div></div><div class="clearfix"></div></div><div class="list-bg"><div class="col-md-6 col-xs-4">Video Quality</div><div class="col-md-3 col-xs-4"><div class="list-txt">HD</div></div><div class="col-md-3 col-xs-4"><div class="list-txt">HD</div></div><div class="clearfix"></div></div><div class="modal-header-bx no-radius"><div class="col-md-4 col-xs-4"><h4 class="title"> {langTranslateApp.pkgSliderChannels} </h4> </div><div class="clearfix"></div></div><div class="air-time package-modal"><div class="accordion-item" each="{genre, i in allchannelgenres.entities}"><div id="{genre.properties.UrlName}" class="accordian-pack accordion_head">{genre.properties.GenreName} <span class="plusminus pull-right"></span> </div><div class="dvs-body accordion_body" style=""><div class="list-info-bx" if="{channels && channels.entities }"><div class="list-bx clearfix" each="{channel in channels.entities}" if="{_.indexOf(channel.properties.ChannelGenre, parseInt(genre.properties.Id)) > -1 && (_.indexOf(channel.properties.ChannelPackages, parseInt(selected1.properties.Id)) > -1 || _.indexOf(channel.properties.ChannelPackages, parseInt(selected2.properties.Id)) > -1)}"><div class="col-md-6 col-xs-6"><p>{channel.properties.ChannelName} ({channel.properties.ChannelNumber})</p></div><div class="col-md-3 col-xs-3"><div class="text-center"> <i class="fa {_.indexOf(channel.properties.ChannelPackages, parseInt(selected1.properties.Id)) > -1 ? \'fa-check green-check\' : \'fa-times red-cross\'}"></i> </div></div><div class="col-md-3 col-xs-3"><div class="text-center"> <i class="fa {_.indexOf(channel.properties.ChannelPackages, parseInt(selected2.properties.Id)) > -1 ? \'fa-check green-check\' : \'fa-times red-cross\'}"></i> </div></div><div class="clearfix"></div></div></div></div></div></div></div></div></div></div>','tag-compare-packages,[riot-tag="tag-compare-packages"],[data-is="tag-compare-packages"]{ visibility: visible; }','',function(opts){var self=this;self.model={};self.storedData="comparepackages";self.dthPackages="dthcomparepackages";self.dualCurrencyPackages="dualCurrencyPackages";var arrayDualCurrencyContries=[];var arrayDualCurrencies=[];self.notDualCurrency=false;if(dstvApp.countryabbreviation=='mu')
self.notDualCurrency=true;self.on('before-mount',function(){if(this.opts.ComparePackage){console.log('DVS : Compare package started...')
if(app.allchannels!=undefined&&!window.reloadData){console.log('Channels : Channels loaded already.')
self.ChannelFormatting(app.allchannels)}
else{console.log('Channels : Channels loading started... ')
fetch(dstvApp.targetDomain+window.culture+"/channels/ujson?descendants=Channel&select=channelName,ChannelGenre,ChannelPackages,ChannelLogo,AudioChannel,ChannelNumber,IsDraft&resolveToIds=ChannelGenre,ChannelPackages&resolveMedia=ChannelLogo&cdv="+(new Date().getTime())).then(response=>response.json()).then(commits=>self.OnGetChannelsSuccess(commits)).catch(error=>self.OnGetChannelsError(error));}
if(app.allchannelgenres!=undefined&&!window.reloadData){console.log('Genere : Genere loaded already.')
self.allchannelgenres=app.allchannelgenres;console.log(self.allchannelgenres)}
else{console.log('Genere : Genere loading started...')
let channelNode='channel-genres';switch(dstvApp.countryabbreviation){case 'ng':channelNode='channel-genre-ng';break;case 'bw':channelNode='channel-genre-bw';break;case 'gh':channelNode='channel-genre-gh';break;case 'mw':channelNode='channel-genre-mw';break;case 'ke':channelNode='channel-genre-ke';break;case 'sz':channelNode='channel-genre-sz';break;case 'mu':channelNode='channel-genre-mu';break;case 'cd':channelNode='channel-genre-cd';break;case 'tz':channelNode='channel-genre-tz';break;case 'na':channelNode='channel-genre-na';break;case 'et':channelNode='channel-genre-et';break;case 'ug':channelNode='channel-genre-ug';break;case 'zw':channelNode='channel-genre-zw';break;case 'zm':channelNode='channel-genre-zm';break;case 'dth':channelNode='channel-genre-dth';break;case 'mz':channelNode=dstvApp.languageAbbreviation=='pt'?'channel-genre-mz-pt':'channel-genre-mz-en';break;case 'ao':channelNode=dstvApp.languageAbbreviation=='pt'?'channel-genre-ao-pt':'channel-genre-ao-en';break;default:channelNode=dstvApp.languageAbbreviation=='pt'?'channel-genre-pt':'channel-genres';}
fetch(dstvApp.targetDomain+"/"+channelNode+"/ujson?descendants=ChannelGenre&select=Id,GenreName,UrlName&cdv="+window.cdv+(new Date().getTime())).then(response=>response.json()).then(commits=>self.OnGetChannelGenresSuccess(commits)).catch(error=>self.OnGetChannelGenresError(error));}}});self.on('mount',function(){if(this.opts.ComparePackage){self.selected1=opts.selected1;self.selected2=opts.selected2;self.update();setTimeout(function(){self.setSameHeight('.package-image')},200);}})
self.OnGetPackageSuccess=function(data){console.log('DVS : Umbraco DVS Package loading done.');data=data.entities.filter(x=>x.properties.Code.toLowerCase().includes('ott'));if(data){self.model=data;self.update();setTimeout(function(){self.setSameHeight('.package-image')},200);}
else{window.consolelog("umbraco comparepackages data failed");}}
self.OnGetPackageError=function(err){console.log('DVS : Error in pulling Umbraco DVS Package');self.LogError(err);}
self.OnGetChannelsSuccess=function(data){if(data){console.log('Channels : Channels loaded. ')
self.ChannelFormatting(data)}
else{console.log('Channels : Error while fetching channels ')
self.channels=[]}
self.update();}
self.OnGetChannelsError=function(data){}
self.OnGetChannelGenresSuccess=function(data){if(data){console.log('Genere : Generes loaded. ')
self.allchannelgenres=data;app.allchannelgenres=data;window.SessionSave("app",app);}
else{console.log('Genere : Error while fetching. ')
self.allchannelgenres=[];}
self.update();}
self.OnGetChannelGenresError=function(data){}
self.ChannelFormatting=function(channelsData){app.allchannels=channelsData;app.allchannels.entities.sort(function(a,b){return a.properties.ChannelNumber-b.properties.ChannelNumber});var availchannels=app.allchannels.entities.filter(item=>item.properties.ChannelPackages.length>-1);var unavailchannels=app.allchannels.entities.filter(item=>!item.properties.ChannelPackages.length);var allavailunavailchannels=availchannels.concat(unavailchannels);app.allchannels.entities=[];app.allchannels.entities=allavailunavailchannels;window.SessionSave("app",app);self.channels=app.allchannels;self.update();}
self.selectpackage=function(packageValue){if(self.selected1==packageValue||self.selected2==packageValue){if(self.selected1==packageValue){self.selected1=undefined;}
else{self.selected2=undefined;}}
else{if(self.selected1==undefined){self.selected1=packageValue;}
else if(self.selected1!=undefined&&self.selected2==undefined){self.selected2=packageValue;}}
self.update();if(self.selected1!=undefined&&self.selected2!=undefined){slideToElement('#comaparesection');$('.panel-group').on('shown.bs.collapse',function(){var panel=$(this).find('.in');var prevObjPos=panel.prevObject?panel.prevObject.offset().top:panel.offset().top
$('html, body').animate({scrollTop:panel.offset().top-150},500);});$('#channels-group').find('div[class="panel-collapse collapse in"]').prev('a').attr('class','panel-heading uppercase')}
$(".compare .package-block").click(function(){var src=$('.package-logo img').attr('src')!=undefined?$('.package-logo img').attr('src').split("/"):"";var imgname=src[3];var srcimg=$.trim(imgname);var img="logo_greatwallmdpi.svg";var img1=$.trim(img);var frech_tounch="layer-2.png";var frech_tounchimg=$.trim(frech_tounch);if(srcimg!=img1){$(".package-logo img").addClass("greatwall-icon");}else{$(".package-logo img").addClass("icon");}
if(srcimg==frech_tounchimg){$(".package-logo img").addClass("frechimg");}else{$(".package-logo img").addClass("icon");}});setTimeout(function(){self.setSameHeight('.package-details')},200);setTimeout(function(){self.setSameHeight('.package-logo')},200);self.ShowHideChannelCategories();}
self.ShowHideChannelCategories=function(){if(self.selected1!=undefined&&self.selected2!=undefined){$('.panel.panel-default').map((index,tbody)=>{if($(tbody).hasClass('hidden'))
$(tbody).removeClass('hidden')})
$('.panel.panel-default table tbody').map((index,tbody)=>{var tbody=$(tbody)
if(tbody.children().length==0){$(tbody.parents()[4]).addClass('hidden')}})}}
self.setSameHeight=function(item){var theseItems=$(item);var maxHeight=0;$(theseItems).css("height","auto");if($(window).width()>=768){theseItems.each(function(){maxHeight=Math.max(maxHeight,$(this).outerHeight());});theseItems.css({height:maxHeight+'px'});}};setTimeout(function(){$(function(){$(".accordion-item").click(function(){$(this).toggleClass("open");if($(this).hasClass("open"))
$(".accordion-item").not(this).removeClass("open");})})},1000)});riot.tag2('tag-progressbar','<ul class="dvs-progress progressbar progress-change-package"><li class="icons-progress icon-icon-DStv-icon-success"><span class="dvs-li-progress">Select Package</span></li><li class="icons-progress icon-icon-login"><span class="dvs-li-progress">Sign Up</span></li><li class="icons-progress icon-icon-credit-card icon-credit-card-circle"><span class="dvs-li-progress">Pay</span></li><li class="icons-progress icon-icon-watch"><span class="dvs-li-progress">Watch</span></li></ul>','tag-progressbar,[riot-tag="tag-progressbar"],[data-is="tag-progressbar"]{ visibility: visible; }','',function(opts){var self=this;self.on('before-mount',function(){});self.on('mount',function(){});})